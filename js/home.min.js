! function(r) {
    function t(r) {
        var t = document.getElementsByTagName("head")[0],
            o = document.createElement("script");
        o.type = "text/javascript", o.charset = "utf-8", o.src = f.p + "" + r + "." + g + ".hot-update.js", t.appendChild(o)
    }

    function o(r) {
        if ("undefined" == typeof XMLHttpRequest) return r(new Error("No browser support"));
        try {
            var t = new XMLHttpRequest,
                o = f.p + "" + g + ".hot-update.json";
            t.open("GET", o, !0), t.timeout = 1e4, t.send(null)
        } catch (t) {
            return r(t)
        }
        t.onreadystatechange = function() {
            if (4 === t.readyState)
                if (0 === t.status) r(new Error("Manifest request to " + o + " timed out."));
                else if (404 === t.status) r();
            else if (200 !== t.status && 304 !== t.status) r(new Error("Manifest request to " + o + " failed."));
            else {
                try {
                    var e = JSON.parse(t.responseText)
                } catch (t) {
                    return void r(t)
                }
                r(null, e)
            }
        }
    }

    function e(r) {
        function t(r, t) {
            "ready" === W && l("prepare"), m++, f.e(r, function() {
                function o() {
                    m--, "prepare" === W && (S[r] || s(r), 0 === m && 0 === _ && a())
                }
                try {
                    t.call(null, e)
                } finally {
                    o()
                }
            })
        }
        var o = P[r];
        if (!o) return f;
        var e = function(t) {
            return o.hot.active ? P[t] ? (P[t].parents.indexOf(r) < 0 && P[t].parents.push(r), o.children.indexOf(t) < 0 && o.children.push(t)) : v = [r] : (console.warn("[HMR] unexpected require(" + t + ") from disposed module " + r), v = []), f(t)
        };
        for (var n in f) Object.prototype.hasOwnProperty.call(f, n) && (u ? Object.defineProperty(e, n, function(r) {
            return {
                configurable: !0,
                enumerable: !0,
                get: function() {
                    return f[r]
                },
                set: function(t) {
                    f[r] = t
                }
            }
        }(n)) : e[n] = f[n]);
        return u ? Object.defineProperty(e, "e", {
            enumerable: !0,
            value: t
        }) : e.e = t, e
    }

    function n(r) {
        var t = {
            _acceptedDependencies: {},
            _declinedDependencies: {},
            _selfAccepted: !1,
            _selfDeclined: !1,
            _disposeHandlers: [],
            active: !0,
            accept: function(r, o) {
                if ("undefined" == typeof r) t._selfAccepted = !0;
                else if ("function" == typeof r) t._selfAccepted = r;
                else if ("object" == typeof r)
                    for (var e = 0; e < r.length; e++) t._acceptedDependencies[r[e]] = o;
                else t._acceptedDependencies[r] = o
            },
            decline: function(r) {
                if ("undefined" == typeof r) t._selfDeclined = !0;
                else if ("number" == typeof r) t._declinedDependencies[r] = !0;
                else
                    for (var o = 0; o < r.length; o++) t._declinedDependencies[r[o]] = !0
            },
            dispose: function(r) {
                t._disposeHandlers.push(r)
            },
            addDisposeHandler: function(r) {
                t._disposeHandlers.push(r)
            },
            removeDisposeHandler: function(r) {
                var o = t._disposeHandlers.indexOf(r);
                o >= 0 && t._disposeHandlers.splice(o, 1)
            },
            check: y,
            apply: h,
            status: function(r) {
                return r ? void b.push(r) : W
            },
            addStatusHandler: function(r) {
                b.push(r)
            },
            removeStatusHandler: function(r) {
                var t = b.indexOf(r);
                t >= 0 && b.splice(t, 1)
            },
            data: w[r]
        };
        return t
    }

    function l(r) {
        W = r;
        for (var t = 0; t < b.length; t++) b[t].call(null, r)
    }

    function i(r) {
        var t = +r + "" === r;
        return t ? +r : r
    }

    function y(r, t) {
        if ("idle" !== W) throw new Error("check() is only allowed in idle status");
        "function" == typeof r ? (k = !1, t = r) : (k = r, t = t || function(r) {
            if (r) throw r
        }), l("check"), o(function(r, o) {
            if (r) return t(r);
            if (!o) return l("idle"), void t(null, null);
            A = {}, E = {}, S = {};
            for (var e = 0; e < o.c.length; e++) E[o.c[e]] = !0;
            d = o.h, l("prepare"), C = t, c = {};
            var n = 4;
            s(n), "prepare" === W && 0 === m && 0 === _ && a()
        })
    }

    function x(r, t) {
        if (E[r] && A[r]) {
            A[r] = !1;
            for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (c[o] = t[o]);
            0 === --_ && 0 === m && a()
        }
    }

    function s(r) {
        E[r] ? (A[r] = !0, _++, t(r)) : S[r] = !0
    }

    function a() {
        l("ready");
        var r = C;
        if (C = null, r)
            if (k) h(k, r);
            else {
                var t = [];
                for (var o in c) Object.prototype.hasOwnProperty.call(c, o) && t.push(i(o));
                r(null, t)
            }
    }

    function h(t, o) {
        function e(r) {
            for (var t = [r], o = {}, e = t.slice(); e.length > 0;) {
                var l = e.pop(),
                    r = P[l];
                if (r && !r.hot._selfAccepted) {
                    if (r.hot._selfDeclined) return new Error("Aborted because of self decline: " + l);
                    if (0 === l) return;
                    for (var i = 0; i < r.parents.length; i++) {
                        var y = r.parents[i],
                            x = P[y];
                        if (x.hot._declinedDependencies[l]) return new Error("Aborted because of declined dependency: " + l + " in " + y);
                        t.indexOf(y) >= 0 || (x.hot._acceptedDependencies[l] ? (o[y] || (o[y] = []), n(o[y], [l])) : (delete o[y], t.push(y), e.push(y)))
                    }
                }
            }
            return [t, o]
        }

        function n(r, t) {
            for (var o = 0; o < t.length; o++) {
                var e = t[o];
                r.indexOf(e) < 0 && r.push(e)
            }
        }
        if ("ready" !== W) throw new Error("apply() is only allowed in ready status");
        "function" == typeof t ? (o = t, t = {}) : t && "object" == typeof t ? o = o || function(r) {
            if (r) throw r
        } : (t = {}, o = o || function(r) {
            if (r) throw r
        });
        var y = {},
            x = [],
            s = {};
        for (var a in c)
            if (Object.prototype.hasOwnProperty.call(c, a)) {
                var h = i(a),
                    p = e(h);
                if (!p) {
                    if (t.ignoreUnaccepted) continue;
                    return l("abort"), o(new Error("Aborted because " + h + " is not accepted"))
                }
                if (p instanceof Error) return l("abort"), o(p);
                s[h] = c[h], n(x, p[0]);
                for (var h in p[1]) Object.prototype.hasOwnProperty.call(p[1], h) && (y[h] || (y[h] = []), n(y[h], p[1][h]))
            }
        for (var u = [], C = 0; C < x.length; C++) {
            var h = x[C];
            P[h] && P[h].hot._selfAccepted && u.push({
                module: h,
                errorHandler: P[h].hot._selfAccepted
            })
        }
        l("dispose");
        for (var k = x.slice(); k.length > 0;) {
            var h = k.pop(),
                b = P[h];
            if (b) {
                for (var _ = {}, m = b.hot._disposeHandlers, S = 0; S < m.length; S++) {
                    var A = m[S];
                    A(_)
                }
                w[h] = _, b.hot.active = !1, delete P[h];
                for (var S = 0; S < b.children.length; S++) {
                    var E = P[b.children[S]];
                    if (E) {
                        var O = E.parents.indexOf(h);
                        O >= 0 && E.parents.splice(O, 1)
                    }
                }
            }
        }
        for (var h in y)
            if (Object.prototype.hasOwnProperty.call(y, h))
                for (var b = P[h], T = y[h], S = 0; S < T.length; S++) {
                    var j = T[S],
                        O = b.children.indexOf(j);
                    O >= 0 && b.children.splice(O, 1)
                }
        l("apply"), g = d;
        for (var h in s) Object.prototype.hasOwnProperty.call(s, h) && (r[h] = s[h]);
        var M = null;
        for (var h in y)
            if (Object.prototype.hasOwnProperty.call(y, h)) {
                for (var b = P[h], T = y[h], I = [], C = 0; C < T.length; C++) {
                    var j = T[C],
                        A = b.hot._acceptedDependencies[j];
                    I.indexOf(A) >= 0 || I.push(A)
                }
                for (var C = 0; C < I.length; C++) {
                    var A = I[C];
                    try {
                        A(y)
                    } catch (r) {
                        M || (M = r)
                    }
                }
            }
        for (var C = 0; C < u.length; C++) {
            var H = u[C],
                h = H.module;
            v = [h];
            try {
                f(h)
            } catch (r) {
                if ("function" == typeof H.errorHandler) try {
                    H.errorHandler(r)
                } catch (r) {
                    M || (M = r)
                } else M || (M = r)
            }
        }
        return M ? (l("fail"), o(M)) : (l("idle"), void o(null, x))
    }

    function f(t) {
        if (P[t]) return P[t].exports;
        var o = P[t] = {
            exports: {},
            id: t,
            loaded: !1,
            hot: n(t),
            parents: v,
            children: []
        };
        return r[t].call(o.exports, o, o.exports, e(t)), o.loaded = !0, o.exports
    }
    var p = this.webpackHotUpdate;
    this.webpackHotUpdate = function(r, t) {
        x(r, t), p && p(r, t)
    };
    var u = !1;
    try {
        Object.defineProperty({}, "x", {
            get: function() {}
        }), u = !0
    } catch (r) {}
    var C, c, d, k = !0,
        g = "9cb5c3bbbb62dd9d84d8",
        w = {},
        v = [],
        b = [],
        W = "idle",
        _ = 0,
        m = 0,
        S = {},
        A = {},
        E = {},
        P = {};
    return f.m = r, f.c = P, f.p = "", f.h = function() {
        return g
    }, e(0)(0)
}([function(r, t, o) {
    function e() {
        i.resize(n(), l())
    }

    function n() {
        var r = .8;
        return window.innerHeight < 768 && window.innerHeight > 480 && window.innerHeight > window.innerWidth ? r = .7 : window.innerHeight <= 480 && (r = .9), new y(Math.min(.9 * window.innerWidth, window.innerWidth - 60), Math.min(window.innerHeight * r, .8 * window.innerHeight))
    }

    function l() {
        var r, t, o = i.getPlexusSize(),
            e = n(),
            l = i.getCanvasScale(e.width(), e.height(), o.width(), o.height());
        return window.innerHeight > window.innerWidth ? (r = .75 * (window.innerWidth - o.width() * l), t = .7 * (window.innerHeight - o.height() * l)) : (t = .75 * (window.innerHeight - o.height() * l), r = .9 * (window.innerWidth - o.width() * l)), new x(r, t)
    }
    var i = o(19),
        y = o(5),
        x = o(2),
        s = o(27),
        a = (o(4), o(8)),
        h = o(7);
    o(28);
    var f;
    window.onresize = function() {
        clearTimeout(f), f = setTimeout(e, 100)
    }, i.render(document.getElementById("myCanvas"), n(), l()), a.select(document.body).on("mousemove", function() {}), h.initialize()
}, function(r, t, o) {
    var e = o(2),
        n = o(4);
    o(3);
    r.exports = function() {
        function r(r) {
            if (r = r || {}, !r.el) throw "Input parameter el missing !!!";
            this.initPosition = new e, this.movePosition = this.initPosition, this.el = r.el, this.notifySwipeStart = r.onSwipeStart || n.emptyFn, this.notifySwiping = r.onSwiping || n.emptyFn, this.notifySwipeEnd = r.onSwipeEnd || n.emptyFn, t.call(this)
        }

        function t(r) {
            this.el.addEventListener("mousedown", o.bind(this), !0), this.el.addEventListener("touchstart", o.bind(this), !0), this.eventListener = {
                inProgress: l.bind(this),
                end: i.bind(this)
            }
        }

        function o(r) {
            this.initPosition = n.getPointerCoordinates(r), this.movePosition = this.initPosition, this.notifySwipeStart(this.initPosition, r), this.el.addEventListener("mousemove", this.eventListener.inProgress, !0), this.el.addEventListener("touchmove", this.eventListener.inProgress, !0), this.el.addEventListener("mouseup", this.eventListener.end, !0), this.el.addEventListener("touchend", this.eventListener.end, !0)
        }

        function l(r) {
            this.movePosition = n.getPointerCoordinates(r), this.distance = n.getDistanceBtwPoints(this.initPosition, this.movePosition), this.direction = n.getDirection(this.initPosition, this.movePosition), this.notifySwiping(this.distance, this.direction, r)
        }

        function i(r) {
            this.movePosition = n.getPointerCoordinates(r), this.distance = n.getDistanceBtwPoints(this.initPosition, this.movePosition), this.direction = n.getDirection(this.initPosition, this.movePosition), this.el.removeEventListener("mousemove", this.eventListener.inProgress, !0), this.el.removeEventListener("touchmove", this.eventListener.inProgress, !0), this.el.removeEventListener("mouseup", this.eventListener.end, !0), this.el.removeEventListener("touchend", this.eventListener.end, !0), this.notifySwipeEnd(this.distance, this.direction, r)
        }
        return r
    }()
}, function(r, t, o) {
    var e = o(3);
    r.exports = function() {
        function r() {
            this.xAxis = 0, this.yAxis = 0, arguments.length && "object" == typeof arguments[0] ? (this.xAxis = arguments[0].x, this.yAxis = arguments[0].y) : (this.xAxis = parseFloat(arguments[0]) || 0, this.yAxis = parseFloat(arguments[1]) || 0)
        }
        return e.extend(r.prototype, {
            x: function(r) {
                return "undefined" == typeof r ? this.xAxis : (this.xAxis = r, this)
            },
            y: function(r) {
                return "undefined" == typeof r ? this.yAxis : (this.yAxis = r, this)
            }
        }), r
    }()
}, function(r, t, o) {
    var e, n;
    (function() {
        function o(r) {
            function t(t, o, e, n, l, i) {
                for (; l >= 0 && l < i; l += r) {
                    var y = n ? n[l] : l;
                    e = o(e, t[y], y, t)
                }
                return e
            }
            return function(o, e, n, l) {
                e = W(e, l, 4);
                var i = !O(o) && b.keys(o),
                    y = (i || o).length,
                    x = r > 0 ? 0 : y - 1;
                return arguments.length < 3 && (n = o[i ? i[x] : x], x += r), t(o, e, n, i, x, y)
            }
        }

        function l(r) {
            return function(t, o, e) {
                o = _(o, e);
                for (var n = P(t), l = r > 0 ? 0 : n - 1; l >= 0 && l < n; l += r)
                    if (o(t[l], l, t)) return l;
                return -1
            }
        }

        function i(r, t, o) {
            return function(e, n, l) {
                var i = 0,
                    y = P(e);
                if ("number" == typeof l) r > 0 ? i = l >= 0 ? l : Math.max(l + y, i) : y = l >= 0 ? Math.min(l + 1, y) : l + y + 1;
                else if (o && l && y) return l = o(e, n), e[l] === n ? l : -1;
                if (n !== n) return l = t(u.call(e, i, y), b.isNaN), l >= 0 ? l + i : -1;
                for (l = r > 0 ? i : y - 1; l >= 0 && l < y; l += r)
                    if (e[l] === n) return l;
                return -1
            }
        }

        function y(r, t) {
            var o = H.length,
                e = r.constructor,
                n = b.isFunction(e) && e.prototype || h,
                l = "constructor";
            for (b.has(r, l) && !b.contains(t, l) && t.push(l); o--;) l = H[o], l in r && r[l] !== n[l] && !b.contains(t, l) && t.push(l)
        }
        var x = this,
            s = x._,
            a = Array.prototype,
            h = Object.prototype,
            f = Function.prototype,
            p = a.push,
            u = a.slice,
            C = h.toString,
            c = h.hasOwnProperty,
            d = Array.isArray,
            k = Object.keys,
            g = f.bind,
            w = Object.create,
            v = function() {},
            b = function(r) {
                return r instanceof b ? r : this instanceof b ? void(this._wrapped = r) : new b(r)
            };
        "undefined" != typeof r && r.exports && (t = r.exports = b), t._ = b, b.VERSION = "1.8.3";
        var W = function(r, t, o) {
                if (void 0 === t) return r;
                switch (null == o ? 3 : o) {
                    case 1:
                        return function(o) {
                            return r.call(t, o)
                        };
                    case 2:
                        return function(o, e) {
                            return r.call(t, o, e)
                        };
                    case 3:
                        return function(o, e, n) {
                            return r.call(t, o, e, n)
                        };
                    case 4:
                        return function(o, e, n, l) {
                            return r.call(t, o, e, n, l)
                        }
                }
                return function() {
                    return r.apply(t, arguments)
                }
            },
            _ = function(r, t, o) {
                return null == r ? b.identity : b.isFunction(r) ? W(r, t, o) : b.isObject(r) ? b.matcher(r) : b.property(r)
            };
        b.iteratee = function(r, t) {
            return _(r, t, 1 / 0)
        };
        var m = function(r, t) {
                return function(o) {
                    var e = arguments.length;
                    if (e < 2 || null == o) return o;
                    for (var n = 1; n < e; n++)
                        for (var l = arguments[n], i = r(l), y = i.length, x = 0; x < y; x++) {
                            var s = i[x];
                            t && void 0 !== o[s] || (o[s] = l[s])
                        }
                    return o
                }
            },
            S = function(r) {
                if (!b.isObject(r)) return {};
                if (w) return w(r);
                v.prototype = r;
                var t = new v;
                return v.prototype = null, t
            },
            A = function(r) {
                return function(t) {
                    return null == t ? void 0 : t[r]
                }
            },
            E = Math.pow(2, 53) - 1,
            P = A("length"),
            O = function(r) {
                var t = P(r);
                return "number" == typeof t && t >= 0 && t <= E
            };
        b.each = b.forEach = function(r, t, o) {
            t = W(t, o);
            var e, n;
            if (O(r))
                for (e = 0, n = r.length; e < n; e++) t(r[e], e, r);
            else {
                var l = b.keys(r);
                for (e = 0, n = l.length; e < n; e++) t(r[l[e]], l[e], r)
            }
            return r
        }, b.map = b.collect = function(r, t, o) {
            t = _(t, o);
            for (var e = !O(r) && b.keys(r), n = (e || r).length, l = Array(n), i = 0; i < n; i++) {
                var y = e ? e[i] : i;
                l[i] = t(r[y], y, r)
            }
            return l
        }, b.reduce = b.foldl = b.inject = o(1), b.reduceRight = b.foldr = o(-1), b.find = b.detect = function(r, t, o) {
            var e;
            if (e = O(r) ? b.findIndex(r, t, o) : b.findKey(r, t, o), void 0 !== e && e !== -1) return r[e]
        }, b.filter = b.select = function(r, t, o) {
            var e = [];
            return t = _(t, o), b.each(r, function(r, o, n) {
                t(r, o, n) && e.push(r)
            }), e
        }, b.reject = function(r, t, o) {
            return b.filter(r, b.negate(_(t)), o)
        }, b.every = b.all = function(r, t, o) {
            t = _(t, o);
            for (var e = !O(r) && b.keys(r), n = (e || r).length, l = 0; l < n; l++) {
                var i = e ? e[l] : l;
                if (!t(r[i], i, r)) return !1
            }
            return !0
        }, b.some = b.any = function(r, t, o) {
            t = _(t, o);
            for (var e = !O(r) && b.keys(r), n = (e || r).length, l = 0; l < n; l++) {
                var i = e ? e[l] : l;
                if (t(r[i], i, r)) return !0
            }
            return !1
        }, b.contains = b.includes = b.include = function(r, t, o, e) {
            return O(r) || (r = b.values(r)), ("number" != typeof o || e) && (o = 0), b.indexOf(r, t, o) >= 0
        }, b.invoke = function(r, t) {
            var o = u.call(arguments, 2),
                e = b.isFunction(t);
            return b.map(r, function(r) {
                var n = e ? t : r[t];
                return null == n ? n : n.apply(r, o)
            })
        }, b.pluck = function(r, t) {
            return b.map(r, b.property(t))
        }, b.where = function(r, t) {
            return b.filter(r, b.matcher(t))
        }, b.findWhere = function(r, t) {
            return b.find(r, b.matcher(t))
        }, b.max = function(r, t, o) {
            var e, n, l = -(1 / 0),
                i = -(1 / 0);
            if (null == t && null != r) {
                r = O(r) ? r : b.values(r);
                for (var y = 0, x = r.length; y < x; y++) e = r[y], e > l && (l = e)
            } else t = _(t, o), b.each(r, function(r, o, e) {
                n = t(r, o, e), (n > i || n === -(1 / 0) && l === -(1 / 0)) && (l = r, i = n)
            });
            return l
        }, b.min = function(r, t, o) {
            var e, n, l = 1 / 0,
                i = 1 / 0;
            if (null == t && null != r) {
                r = O(r) ? r : b.values(r);
                for (var y = 0, x = r.length; y < x; y++) e = r[y], e < l && (l = e)
            } else t = _(t, o), b.each(r, function(r, o, e) {
                n = t(r, o, e), (n < i || n === 1 / 0 && l === 1 / 0) && (l = r, i = n)
            });
            return l
        }, b.shuffle = function(r) {
            for (var t, o = O(r) ? r : b.values(r), e = o.length, n = Array(e), l = 0; l < e; l++) t = b.random(0, l), t !== l && (n[l] = n[t]), n[t] = o[l];
            return n
        }, b.sample = function(r, t, o) {
            return null == t || o ? (O(r) || (r = b.values(r)), r[b.random(r.length - 1)]) : b.shuffle(r).slice(0, Math.max(0, t))
        }, b.sortBy = function(r, t, o) {
            return t = _(t, o), b.pluck(b.map(r, function(r, o, e) {
                return {
                    value: r,
                    index: o,
                    criteria: t(r, o, e)
                }
            }).sort(function(r, t) {
                var o = r.criteria,
                    e = t.criteria;
                if (o !== e) {
                    if (o > e || void 0 === o) return 1;
                    if (o < e || void 0 === e) return -1
                }
                return r.index - t.index
            }), "value")
        };
        var T = function(r) {
            return function(t, o, e) {
                var n = {};
                return o = _(o, e), b.each(t, function(e, l) {
                    var i = o(e, l, t);
                    r(n, e, i)
                }), n
            }
        };
        b.groupBy = T(function(r, t, o) {
            b.has(r, o) ? r[o].push(t) : r[o] = [t]
        }), b.indexBy = T(function(r, t, o) {
            r[o] = t
        }), b.countBy = T(function(r, t, o) {
            b.has(r, o) ? r[o]++ : r[o] = 1
        }), b.toArray = function(r) {
            return r ? b.isArray(r) ? u.call(r) : O(r) ? b.map(r, b.identity) : b.values(r) : []
        }, b.size = function(r) {
            return null == r ? 0 : O(r) ? r.length : b.keys(r).length
        }, b.partition = function(r, t, o) {
            t = _(t, o);
            var e = [],
                n = [];
            return b.each(r, function(r, o, l) {
                (t(r, o, l) ? e : n).push(r)
            }), [e, n]
        }, b.first = b.head = b.take = function(r, t, o) {
            if (null != r) return null == t || o ? r[0] : b.initial(r, r.length - t)
        }, b.initial = function(r, t, o) {
            return u.call(r, 0, Math.max(0, r.length - (null == t || o ? 1 : t)))
        }, b.last = function(r, t, o) {
            if (null != r) return null == t || o ? r[r.length - 1] : b.rest(r, Math.max(0, r.length - t))
        }, b.rest = b.tail = b.drop = function(r, t, o) {
            return u.call(r, null == t || o ? 1 : t)
        }, b.compact = function(r) {
            return b.filter(r, b.identity)
        };
        var j = function(r, t, o, e) {
            for (var n = [], l = 0, i = e || 0, y = P(r); i < y; i++) {
                var x = r[i];
                if (O(x) && (b.isArray(x) || b.isArguments(x))) {
                    t || (x = j(x, t, o));
                    var s = 0,
                        a = x.length;
                    for (n.length += a; s < a;) n[l++] = x[s++]
                } else o || (n[l++] = x)
            }
            return n
        };
        b.flatten = function(r, t) {
            return j(r, t, !1)
        }, b.without = function(r) {
            return b.difference(r, u.call(arguments, 1))
        }, b.uniq = b.unique = function(r, t, o, e) {
            b.isBoolean(t) || (e = o, o = t, t = !1), null != o && (o = _(o, e));
            for (var n = [], l = [], i = 0, y = P(r); i < y; i++) {
                var x = r[i],
                    s = o ? o(x, i, r) : x;
                t ? (i && l === s || n.push(x), l = s) : o ? b.contains(l, s) || (l.push(s), n.push(x)) : b.contains(n, x) || n.push(x)
            }
            return n
        }, b.union = function() {
            return b.uniq(j(arguments, !0, !0))
        }, b.intersection = function(r) {
            for (var t = [], o = arguments.length, e = 0, n = P(r); e < n; e++) {
                var l = r[e];
                if (!b.contains(t, l)) {
                    for (var i = 1; i < o && b.contains(arguments[i], l); i++);
                    i === o && t.push(l)
                }
            }
            return t
        }, b.difference = function(r) {
            var t = j(arguments, !0, !0, 1);
            return b.filter(r, function(r) {
                return !b.contains(t, r)
            })
        }, b.zip = function() {
            return b.unzip(arguments)
        }, b.unzip = function(r) {
            for (var t = r && b.max(r, P).length || 0, o = Array(t), e = 0; e < t; e++) o[e] = b.pluck(r, e);
            return o
        }, b.object = function(r, t) {
            for (var o = {}, e = 0, n = P(r); e < n; e++) t ? o[r[e]] = t[e] : o[r[e][0]] = r[e][1];
            return o
        }, b.findIndex = l(1), b.findLastIndex = l(-1), b.sortedIndex = function(r, t, o, e) {
            o = _(o, e, 1);
            for (var n = o(t), l = 0, i = P(r); l < i;) {
                var y = Math.floor((l + i) / 2);
                o(r[y]) < n ? l = y + 1 : i = y
            }
            return l
        }, b.indexOf = i(1, b.findIndex, b.sortedIndex), b.lastIndexOf = i(-1, b.findLastIndex), b.range = function(r, t, o) {
            null == t && (t = r || 0, r = 0), o = o || 1;
            for (var e = Math.max(Math.ceil((t - r) / o), 0), n = Array(e), l = 0; l < e; l++, r += o) n[l] = r;
            return n
        };
        var M = function(r, t, o, e, n) {
            if (!(e instanceof t)) return r.apply(o, n);
            var l = S(r.prototype),
                i = r.apply(l, n);
            return b.isObject(i) ? i : l
        };
        b.bind = function(r, t) {
            if (g && r.bind === g) return g.apply(r, u.call(arguments, 1));
            if (!b.isFunction(r)) throw new TypeError("Bind must be called on a function");
            var o = u.call(arguments, 2),
                e = function() {
                    return M(r, e, t, this, o.concat(u.call(arguments)))
                };
            return e
        }, b.partial = function(r) {
            var t = u.call(arguments, 1),
                o = function() {
                    for (var e = 0, n = t.length, l = Array(n), i = 0; i < n; i++) l[i] = t[i] === b ? arguments[e++] : t[i];
                    for (; e < arguments.length;) l.push(arguments[e++]);
                    return M(r, o, this, this, l)
                };
            return o
        }, b.bindAll = function(r) {
            var t, o, e = arguments.length;
            if (e <= 1) throw new Error("bindAll must be passed function names");
            for (t = 1; t < e; t++) o = arguments[t], r[o] = b.bind(r[o], r);
            return r
        }, b.memoize = function(r, t) {
            var o = function(e) {
                var n = o.cache,
                    l = "" + (t ? t.apply(this, arguments) : e);
                return b.has(n, l) || (n[l] = r.apply(this, arguments)), n[l]
            };
            return o.cache = {}, o
        }, b.delay = function(r, t) {
            var o = u.call(arguments, 2);
            return setTimeout(function() {
                return r.apply(null, o)
            }, t)
        }, b.defer = b.partial(b.delay, b, 1), b.throttle = function(r, t, o) {
            var e, n, l, i = null,
                y = 0;
            o || (o = {});
            var x = function() {
                y = o.leading === !1 ? 0 : b.now(), i = null, l = r.apply(e, n), i || (e = n = null)
            };
            return function() {
                var s = b.now();
                y || o.leading !== !1 || (y = s);
                var a = t - (s - y);
                return e = this, n = arguments, a <= 0 || a > t ? (i && (clearTimeout(i), i = null), y = s, l = r.apply(e, n), i || (e = n = null)) : i || o.trailing === !1 || (i = setTimeout(x, a)), l
            }
        }, b.debounce = function(r, t, o) {
            var e, n, l, i, y, x = function() {
                var s = b.now() - i;
                s < t && s >= 0 ? e = setTimeout(x, t - s) : (e = null, o || (y = r.apply(l, n), e || (l = n = null)))
            };
            return function() {
                l = this, n = arguments, i = b.now();
                var s = o && !e;
                return e || (e = setTimeout(x, t)), s && (y = r.apply(l, n), l = n = null), y
            }
        }, b.wrap = function(r, t) {
            return b.partial(t, r)
        }, b.negate = function(r) {
            return function() {
                return !r.apply(this, arguments)
            }
        }, b.compose = function() {
            var r = arguments,
                t = r.length - 1;
            return function() {
                for (var o = t, e = r[t].apply(this, arguments); o--;) e = r[o].call(this, e);
                return e
            }
        }, b.after = function(r, t) {
            return function() {
                if (--r < 1) return t.apply(this, arguments)
            }
        }, b.before = function(r, t) {
            var o;
            return function() {
                return --r > 0 && (o = t.apply(this, arguments)), r <= 1 && (t = null), o
            }
        }, b.once = b.partial(b.before, 2);
        var I = !{
                toString: null
            }.propertyIsEnumerable("toString"),
            H = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];
        b.keys = function(r) {
            if (!b.isObject(r)) return [];
            if (k) return k(r);
            var t = [];
            for (var o in r) b.has(r, o) && t.push(o);
            return I && y(r, t), t
        }, b.allKeys = function(r) {
            if (!b.isObject(r)) return [];
            var t = [];
            for (var o in r) t.push(o);
            return I && y(r, t), t
        }, b.values = function(r) {
            for (var t = b.keys(r), o = t.length, e = Array(o), n = 0; n < o; n++) e[n] = r[t[n]];
            return e
        }, b.mapObject = function(r, t, o) {
            t = _(t, o);
            for (var e, n = b.keys(r), l = n.length, i = {}, y = 0; y < l; y++) e = n[y], i[e] = t(r[e], e, r);
            return i
        }, b.pairs = function(r) {
            for (var t = b.keys(r), o = t.length, e = Array(o), n = 0; n < o; n++) e[n] = [t[n], r[t[n]]];
            return e
        }, b.invert = function(r) {
            for (var t = {}, o = b.keys(r), e = 0, n = o.length; e < n; e++) t[r[o[e]]] = o[e];
            return t
        }, b.functions = b.methods = function(r) {
            var t = [];
            for (var o in r) b.isFunction(r[o]) && t.push(o);
            return t.sort()
        }, b.extend = m(b.allKeys), b.extendOwn = b.assign = m(b.keys), b.findKey = function(r, t, o) {
            t = _(t, o);
            for (var e, n = b.keys(r), l = 0, i = n.length; l < i; l++)
                if (e = n[l], t(r[e], e, r)) return e
        }, b.pick = function(r, t, o) {
            var e, n, l = {},
                i = r;
            if (null == i) return l;
            b.isFunction(t) ? (n = b.allKeys(i), e = W(t, o)) : (n = j(arguments, !1, !1, 1), e = function(r, t, o) {
                return t in o
            }, i = Object(i));
            for (var y = 0, x = n.length; y < x; y++) {
                var s = n[y],
                    a = i[s];
                e(a, s, i) && (l[s] = a)
            }
            return l
        }, b.omit = function(r, t, o) {
            if (b.isFunction(t)) t = b.negate(t);
            else {
                var e = b.map(j(arguments, !1, !1, 1), String);
                t = function(r, t) {
                    return !b.contains(e, t)
                }
            }
            return b.pick(r, t, o)
        }, b.defaults = m(b.allKeys, !0), b.create = function(r, t) {
            var o = S(r);
            return t && b.extendOwn(o, t), o
        }, b.clone = function(r) {
            return b.isObject(r) ? b.isArray(r) ? r.slice() : b.extend({}, r) : r
        }, b.tap = function(r, t) {
            return t(r), r
        }, b.isMatch = function(r, t) {
            var o = b.keys(t),
                e = o.length;
            if (null == r) return !e;
            for (var n = Object(r), l = 0; l < e; l++) {
                var i = o[l];
                if (t[i] !== n[i] || !(i in n)) return !1
            }
            return !0
        };
        var L = function(r, t, o, e) {
            if (r === t) return 0 !== r || 1 / r === 1 / t;
            if (null == r || null == t) return r === t;
            r instanceof b && (r = r._wrapped), t instanceof b && (t = t._wrapped);
            var n = C.call(r);
            if (n !== C.call(t)) return !1;
            switch (n) {
                case "[object RegExp]":
                case "[object String]":
                    return "" + r == "" + t;
                case "[object Number]":
                    return +r !== +r ? +t !== +t : 0 === +r ? 1 / +r === 1 / t : +r === +t;
                case "[object Date]":
                case "[object Boolean]":
                    return +r === +t
            }
            var l = "[object Array]" === n;
            if (!l) {
                if ("object" != typeof r || "object" != typeof t) return !1;
                var i = r.constructor,
                    y = t.constructor;
                if (i !== y && !(b.isFunction(i) && i instanceof i && b.isFunction(y) && y instanceof y) && "constructor" in r && "constructor" in t) return !1
            }
            o = o || [], e = e || [];
            for (var x = o.length; x--;)
                if (o[x] === r) return e[x] === t;
            if (o.push(r), e.push(t), l) {
                if (x = r.length, x !== t.length) return !1;
                for (; x--;)
                    if (!L(r[x], t[x], o, e)) return !1
            } else {
                var s, a = b.keys(r);
                if (x = a.length, b.keys(t).length !== x) return !1;
                for (; x--;)
                    if (s = a[x], !b.has(t, s) || !L(r[s], t[s], o, e)) return !1
            }
            return o.pop(), e.pop(), !0
        };
        b.isEqual = function(r, t) {
            return L(r, t)
        }, b.isEmpty = function(r) {
            return null == r || (O(r) && (b.isArray(r) || b.isString(r) || b.isArguments(r)) ? 0 === r.length : 0 === b.keys(r).length)
        }, b.isElement = function(r) {
            return !(!r || 1 !== r.nodeType)
        }, b.isArray = d || function(r) {
            return "[object Array]" === C.call(r)
        }, b.isObject = function(r) {
            var t = typeof r;
            return "function" === t || "object" === t && !!r
        }, b.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error"], function(r) {
            b["is" + r] = function(t) {
                return C.call(t) === "[object " + r + "]"
            }
        }), b.isArguments(arguments) || (b.isArguments = function(r) {
            return b.has(r, "callee")
        }), "function" != typeof /./ && "object" != typeof Int8Array && (b.isFunction = function(r) {
            return "function" == typeof r || !1
        }), b.isFinite = function(r) {
            return isFinite(r) && !isNaN(parseFloat(r))
        }, b.isNaN = function(r) {
            return b.isNumber(r) && r !== +r
        }, b.isBoolean = function(r) {
            return r === !0 || r === !1 || "[object Boolean]" === C.call(r)
        }, b.isNull = function(r) {
            return null === r
        }, b.isUndefined = function(r) {
            return void 0 === r
        }, b.has = function(r, t) {
            return null != r && c.call(r, t)
        }, b.noConflict = function() {
            return x._ = s, this
        }, b.identity = function(r) {
            return r
        }, b.constant = function(r) {
            return function() {
                return r
            }
        }, b.noop = function() {}, b.property = A, b.propertyOf = function(r) {
            return null == r ? function() {} : function(t) {
                return r[t]
            }
        }, b.matcher = b.matches = function(r) {
            return r = b.extendOwn({}, r),
                function(t) {
                    return b.isMatch(t, r)
                }
        }, b.times = function(r, t, o) {
            var e = Array(Math.max(0, r));
            t = W(t, o, 1);
            for (var n = 0; n < r; n++) e[n] = t(n);
            return e
        }, b.random = function(r, t) {
            return null == t && (t = r, r = 0), r + Math.floor(Math.random() * (t - r + 1))
        }, b.now = Date.now || function() {
            return (new Date).getTime()
        };
        var D = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#x27;",
                "`": "&#x60;"
            },
            N = b.invert(D),
            B = function(r) {
                var t = function(t) {
                        return r[t]
                    },
                    o = "(?:" + b.keys(r).join("|") + ")",
                    e = RegExp(o),
                    n = RegExp(o, "g");
                return function(r) {
                    return r = null == r ? "" : "" + r, e.test(r) ? r.replace(n, t) : r
                }
            };
        b.escape = B(D), b.unescape = B(N), b.result = function(r, t, o) {
            var e = null == r ? void 0 : r[t];
            return void 0 === e && (e = o), b.isFunction(e) ? e.call(r) : e
        };
        var F = 0;
        b.uniqueId = function(r) {
            var t = ++F + "";
            return r ? r + t : t
        }, b.templateSettings = {
            evaluate: /<%([\s\S]+?)%>/g,
            interpolate: /<%=([\s\S]+?)%>/g,
            escape: /<%-([\s\S]+?)%>/g
        };
        var q = /(.)^/,
            R = {
                "'": "'",
                "\\": "\\",
                "\r": "r",
                "\n": "n",
                "\u2028": "u2028",
                "\u2029": "u2029"
            },
            z = /\\|'|\r|\n|\u2028|\u2029/g,
            X = function(r) {
                return "\\" + R[r]
            };
        b.template = function(r, t, o) {
            !t && o && (t = o), t = b.defaults({}, t, b.templateSettings);
            var e = RegExp([(t.escape || q).source, (t.interpolate || q).source, (t.evaluate || q).source].join("|") + "|$", "g"),
                n = 0,
                l = "__p+='";
            r.replace(e, function(t, o, e, i, y) {
                return l += r.slice(n, y).replace(z, X), n = y + t.length, o ? l += "'+\n((__t=(" + o + "))==null?'':_.escape(__t))+\n'" : e ? l += "'+\n((__t=(" + e + "))==null?'':__t)+\n'" : i && (l += "';\n" + i + "\n__p+='"), t
            }), l += "';\n", t.variable || (l = "with(obj||{}){\n" + l + "}\n"), l = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + l + "return __p;\n";
            try {
                var i = new Function(t.variable || "obj", "_", l)
            } catch (r) {
                throw r.source = l, r
            }
            var y = function(r) {
                    return i.call(this, r, b)
                },
                x = t.variable || "obj";
            return y.source = "function(" + x + "){\n" + l + "}", y
        }, b.chain = function(r) {
            var t = b(r);
            return t._chain = !0, t
        };
        var Y = function(r, t) {
            return r._chain ? b(t).chain() : t
        };
        b.mixin = function(r) {
            b.each(b.functions(r), function(t) {
                var o = b[t] = r[t];
                b.prototype[t] = function() {
                    var r = [this._wrapped];
                    return p.apply(r, arguments), Y(this, o.apply(b, r))
                }
            })
        }, b.mixin(b), b.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(r) {
            var t = a[r];
            b.prototype[r] = function() {
                var o = this._wrapped;
                return t.apply(o, arguments), "shift" !== r && "splice" !== r || 0 !== o.length || delete o[0], Y(this, o)
            }
        }), b.each(["concat", "join", "slice"], function(r) {
            var t = a[r];
            b.prototype[r] = function() {
                return Y(this, t.apply(this._wrapped, arguments))
            }
        }), b.prototype.value = function() {
            return this._wrapped
        }, b.prototype.valueOf = b.prototype.toJSON = b.prototype.value, b.prototype.toString = function() {
            return "" + this._wrapped
        }, e = [], n = function() {
            return b
        }.apply(t, e), !(void 0 !== n && (r.exports = n))
    }).call(this)
}, function(r, t, o) {
    var e = o(2),
        n = o(5),
        l = o(6);
    r.exports = function() {
        function r(r) {
            return new e(r.clientX || r.pageX || r.changedTouches && r.changedTouches[0] && r.changedTouches[0].pageX || r.touches && r.touches[0] && r.touches[0].pageX, r.clientY || r.pageY || r.changedTouches && r.changedTouches[0] && r.changedTouches[0].pageY || r.touches && r.touches[0] && r.touches[0].pageY)
        }

        function t(r, t) {
            return Math.sqrt(Math.pow(r.x() - t.x(), 2) + Math.pow(r.y() - t.y(), 2))
        }

        function o(r, t) {
            var o = t.x() - r.x(),
                e = t.y() - r.y();
            return Math.abs(o) < Math.abs(e) ? e > 0 ? l.BOTTOM : l.TOP : o > 0 ? l.RIGHT : l.LEFT
        }

        function i(r) {
            var t = r.getBoundingClientRect();
            return new n(t.width, t.height)
        }
        return {
            getPointerCoordinates: r,
            getDistanceBtwPoints: t,
            getDirection: o,
            getElSize: i,
            emptyFn: function() {}
        }
    }()
}, function(r, t, o) {
    var e = o(3);
    r.exports = function() {
        function r() {
            this.w = 0, this.h = 0, arguments.length && "object" == typeof arguments[0] ? (this.w = arguments[0].w || arguments[0].width, this.h = arguments[0].h || arguments[0].height) : (this.w = parseInt(arguments[0]) || 0, this.h = parseInt(arguments[1]) || 0)
        }
        return e.extend(r.prototype, {
            width: function(r) {
                return "undefined" == typeof r ? this.w : (this.w = r, this)
            },
            height: function(r) {
                return "undefined" == typeof r ? this.h : (this.h = r, this)
            }
        }), r
    }()
}, function(r, t) {
    r.exports = function() {
        return {
            LEFT: 1,
            TOP: 2,
            RIGHT: 3,
            BOTTOM: 4
        }
    }()
}, function(r, t, o) {
    var e = o(8);
    o(4);
    r.exports = function() {
        function r() {
            var r = function() {
                    e.event && e.event.preventDefault(), e.event && e.event.stopPropagation(), t.classed("open", !t.classed("open")), o.classed("blur-xs blur-s blur-sm", t.classed("open"))
                },
                t = e.select(".menu-container"),
                o = e.select("#main-container");
            e.select(".menu-container .circle-wrapper").on("click touchend", r)
        }

        function t() {
            var r = e.select("header.header-container");
            window.addEventListener("scroll", function(t) {
                r.classed("fixed", window.scrollY > 0)
            })
        }

        function o() {
            r(), t()
        }
        return {
            initialize: o
        }
    }()
}, function(r, t, o) {
    ! function(r, o) {
        o(t)
    }(this, function(r) {
        "use strict";

        function t(r) {
            return function() {
                var t = this.ownerDocument,
                    o = this.namespaceURI;
                return o === Q && t.documentElement.namespaceURI === Q ? t.createElement(r) : t.createElementNS(o, r)
            }
        }

        function o(r) {
            return function() {
                return this.ownerDocument.createElementNS(r.space, r.local)
            }
        }

        function e() {
            return new n
        }

        function n() {
            this._ = "@" + (++or).toString(36)
        }

        function l(r, t, o) {
            return r = i(r, t, o),
                function(t) {
                    var o = t.relatedTarget;
                    o && (o === this || 8 & o.compareDocumentPosition(this)) || r.call(this, t)
                }
        }

        function i(t, o, e) {
            return function(n) {
                var l = r.event;
                r.event = n;
                try {
                    t.call(this, this.__data__, o, e)
                } finally {
                    r.event = l
                }
            }
        }

        function y(r) {
            return r.trim().split(/^|\s+/).map(function(r) {
                var t = "",
                    o = r.indexOf(".");
                return o >= 0 && (t = r.slice(o + 1), r = r.slice(0, o)), {
                    type: r,
                    name: t
                }
            })
        }

        function x(r) {
            return function() {
                var t = this.__on;
                if (t) {
                    for (var o, e = 0, n = -1, l = t.length; e < l; ++e) o = t[e], r.type && o.type !== r.type || o.name !== r.name ? t[++n] = o : this.removeEventListener(o.type, o.listener, o.capture);
                    ++n ? t.length = n : delete this.__on
                }
            }
        }

        function s(r, t, o) {
            var e = yr.hasOwnProperty(r.type) ? l : i;
            return function(n, l, i) {
                var y, x = this.__on,
                    s = e(t, l, i);
                if (x)
                    for (var a = 0, h = x.length; a < h; ++a)
                        if ((y = x[a]).type === r.type && y.name === r.name) return this.removeEventListener(y.type, y.listener, y.capture), this.addEventListener(y.type, y.listener = s, y.capture = o), void(y.value = t);
                this.addEventListener(r.type, s, o), y = {
                    type: r.type,
                    name: r.name,
                    value: t,
                    listener: s,
                    capture: o
                }, x ? x.push(y) : this.__on = [y]
            }
        }

        function a(t, o, e, n) {
            var l = r.event;
            t.sourceEvent = r.event, r.event = t;
            try {
                return o.apply(e, n)
            } finally {
                r.event = l
            }
        }

        function h() {}

        function f() {
            return []
        }

        function p(r, t) {
            this.ownerDocument = r.ownerDocument, this.namespaceURI = r.namespaceURI, this._next = null, this._parent = r, this.__data__ = t
        }

        function u(r, t, o, e, n, l) {
            for (var i, y = 0, x = t.length, s = l.length; y < s; ++y)(i = t[y]) ? (i.__data__ = l[y], e[y] = i) : o[y] = new p(r, l[y]);
            for (; y < x; ++y)(i = t[y]) && (n[y] = i)
        }

        function C(r, t, o, e, n, l, i) {
            var y, x, s, a = {},
                h = t.length,
                f = l.length,
                u = new Array(h);
            for (y = 0; y < h; ++y)(x = t[y]) && (u[y] = s = vr + i.call(x, x.__data__, y, t), s in a ? n[y] = x : a[s] = x);
            for (y = 0; y < f; ++y) s = vr + i.call(r, l[y], y, l), (x = a[s]) ? (e[y] = x, x.__data__ = l[y], a[s] = null) : o[y] = new p(r, l[y]);
            for (y = 0; y < h; ++y)(x = t[y]) && a[u[y]] === x && (n[y] = x)
        }

        function c(r, t) {
            return r < t ? -1 : r > t ? 1 : r >= t ? 0 : NaN
        }

        function d(r) {
            return function() {
                this.removeAttribute(r)
            }
        }

        function k(r) {
            return function() {
                this.removeAttributeNS(r.space, r.local)
            }
        }

        function g(r, t) {
            return function() {
                this.setAttribute(r, t)
            }
        }

        function w(r, t) {
            return function() {
                this.setAttributeNS(r.space, r.local, t)
            }
        }

        function v(r, t) {
            return function() {
                var o = t.apply(this, arguments);
                null == o ? this.removeAttribute(r) : this.setAttribute(r, o)
            }
        }

        function b(r, t) {
            return function() {
                var o = t.apply(this, arguments);
                null == o ? this.removeAttributeNS(r.space, r.local) : this.setAttributeNS(r.space, r.local, o)
            }
        }

        function W(r) {
            return function() {
                this.style.removeProperty(r)
            }
        }

        function _(r, t, o) {
            return function() {
                this.style.setProperty(r, t, o)
            }
        }

        function m(r, t, o) {
            return function() {
                var e = t.apply(this, arguments);
                null == e ? this.style.removeProperty(r) : this.style.setProperty(r, e, o)
            }
        }

        function S(r) {
            return function() {
                delete this[r]
            }
        }

        function A(r, t) {
            return function() {
                this[r] = t
            }
        }

        function E(r, t) {
            return function() {
                var o = t.apply(this, arguments);
                null == o ? delete this[r] : this[r] = o
            }
        }

        function P(r) {
            return r.trim().split(/^|\s+/)
        }

        function O(r) {
            return r.classList || new T(r)
        }

        function T(r) {
            this._node = r, this._names = P(r.getAttribute("class") || "")
        }

        function j(r, t) {
            for (var o = O(r), e = -1, n = t.length; ++e < n;) o.add(t[e])
        }

        function M(r, t) {
            for (var o = O(r), e = -1, n = t.length; ++e < n;) o.remove(t[e])
        }

        function I(r) {
            return function() {
                j(this, r)
            }
        }

        function H(r) {
            return function() {
                M(this, r)
            }
        }

        function L(r, t) {
            return function() {
                (t.apply(this, arguments) ? j : M)(this, r)
            }
        }

        function D() {
            this.textContent = ""
        }

        function N(r) {
            return function() {
                this.textContent = r
            }
        }

        function B(r) {
            return function() {
                var t = r.apply(this, arguments);
                this.textContent = null == t ? "" : t
            }
        }

        function F() {
            this.innerHTML = ""
        }

        function q(r) {
            return function() {
                this.innerHTML = r
            }
        }

        function R(r) {
            return function() {
                var t = r.apply(this, arguments);
                this.innerHTML = null == t ? "" : t
            }
        }

        function z() {
            this.nextSibling && this.parentNode.appendChild(this)
        }

        function X() {
            this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild)
        }

        function Y() {
            return null
        }

        function V() {
            var r = this.parentNode;
            r && r.removeChild(this)
        }

        function U(r, t, o) {
            var e = Ir(r),
                n = e.CustomEvent;
            n ? n = new n(t, o) : (n = e.document.createEvent("Event"), o ? (n.initEvent(t, o.bubbles, o.cancelable), n.detail = o.detail) : n.initEvent(t, !1, !1)), r.dispatchEvent(n)
        }

        function G(r, t) {
            return function() {
                return U(this, r, t)
            }
        }

        function K(r, t) {
            return function() {
                return U(this, r, t.apply(this, arguments))
            }
        }

        function J(r, t) {
            this._groups = r, this._parents = t
        }

        function $() {
            return new J([
                [document.documentElement]
            ], Ur)
        }
        var Q = "http://www.w3.org/1999/xhtml",
            Z = {
                svg: "http://www.w3.org/2000/svg",
                xhtml: Q,
                xlink: "http://www.w3.org/1999/xlink",
                xml: "http://www.w3.org/XML/1998/namespace",
                xmlns: "http://www.w3.org/2000/xmlns/"
            },
            rr = function(r) {
                var t = r += "",
                    o = t.indexOf(":");
                return o >= 0 && "xmlns" !== (t = r.slice(0, o)) && (r = r.slice(o + 1)), Z.hasOwnProperty(t) ? {
                    space: Z[t],
                    local: r
                } : r
            },
            tr = function(r) {
                var e = rr(r);
                return (e.local ? o : t)(e)
            },
            or = 0;
        n.prototype = e.prototype = {
            constructor: n,
            get: function(r) {
                for (var t = this._; !(t in r);)
                    if (!(r = r.parentNode)) return;
                return r[t]
            },
            set: function(r, t) {
                return r[this._] = t
            },
            remove: function(r) {
                return this._ in r && delete r[this._]
            },
            toString: function() {
                return this._
            }
        };
        var er = function(r) {
            return function() {
                return this.matches(r)
            }
        };
        if ("undefined" != typeof document) {
            var nr = document.documentElement;
            if (!nr.matches) {
                var lr = nr.webkitMatchesSelector || nr.msMatchesSelector || nr.mozMatchesSelector || nr.oMatchesSelector;
                er = function(r) {
                    return function() {
                        return lr.call(this, r)
                    }
                }
            }
        }
        var ir = er,
            yr = {};
        if (r.event = null, "undefined" != typeof document) {
            var xr = document.documentElement;
            "onmouseenter" in xr || (yr = {
                mouseenter: "mouseover",
                mouseleave: "mouseout"
            })
        }
        var sr = function(r, t, o) {
                var e, n, l = y(r + ""),
                    i = l.length; {
                    if (!(arguments.length < 2)) {
                        for (a = t ? s : x, null == o && (o = !1), e = 0; e < i; ++e) this.each(a(l[e], t, o));
                        return this
                    }
                    var a = this.node().__on;
                    if (a)
                        for (var h, f = 0, p = a.length; f < p; ++f)
                            for (e = 0, h = a[f]; e < i; ++e)
                                if ((n = l[e]).type === h.type && n.name === h.name) return h.value
                }
            },
            ar = function() {
                for (var t, o = r.event; t = o.sourceEvent;) o = t;
                return o
            },
            hr = function(r, t) {
                var o = r.ownerSVGElement || r;
                if (o.createSVGPoint) {
                    var e = o.createSVGPoint();
                    return e.x = t.clientX, e.y = t.clientY, e = e.matrixTransform(r.getScreenCTM().inverse()), [e.x, e.y]
                }
                var n = r.getBoundingClientRect();
                return [t.clientX - n.left - r.clientLeft, t.clientY - n.top - r.clientTop]
            },
            fr = function(r) {
                var t = ar();
                return t.changedTouches && (t = t.changedTouches[0]), hr(r, t)
            },
            pr = function(r) {
                return null == r ? h : function() {
                    return this.querySelector(r)
                }
            },
            ur = function(r) {
                "function" != typeof r && (r = pr(r));
                for (var t = this._groups, o = t.length, e = new Array(o), n = 0; n < o; ++n)
                    for (var l, i, y = t[n], x = y.length, s = e[n] = new Array(x), a = 0; a < x; ++a)(l = y[a]) && (i = r.call(l, l.__data__, a, y)) && ("__data__" in l && (i.__data__ = l.__data__), s[a] = i);
                return new J(e, this._parents)
            },
            Cr = function(r) {
                return null == r ? f : function() {
                    return this.querySelectorAll(r)
                }
            },
            cr = function(r) {
                "function" != typeof r && (r = Cr(r));
                for (var t = this._groups, o = t.length, e = [], n = [], l = 0; l < o; ++l)
                    for (var i, y = t[l], x = y.length, s = 0; s < x; ++s)(i = y[s]) && (e.push(r.call(i, i.__data__, s, y)), n.push(i));
                return new J(e, n)
            },
            dr = function(r) {
                "function" != typeof r && (r = ir(r));
                for (var t = this._groups, o = t.length, e = new Array(o), n = 0; n < o; ++n)
                    for (var l, i = t[n], y = i.length, x = e[n] = [], s = 0; s < y; ++s)(l = i[s]) && r.call(l, l.__data__, s, i) && x.push(l);
                return new J(e, this._parents)
            },
            kr = function(r) {
                return new Array(r.length)
            },
            gr = function() {
                return new J(this._enter || this._groups.map(kr), this._parents)
            };
        p.prototype = {
            constructor: p,
            appendChild: function(r) {
                return this._parent.insertBefore(r, this._next)
            },
            insertBefore: function(r, t) {
                return this._parent.insertBefore(r, t)
            },
            querySelector: function(r) {
                return this._parent.querySelector(r)
            },
            querySelectorAll: function(r) {
                return this._parent.querySelectorAll(r)
            }
        };
        var wr = function(r) {
                return function() {
                    return r
                }
            },
            vr = "$",
            br = function(r, t) {
                if (!r) return p = new Array(this.size()), s = -1, this.each(function(r) {
                    p[++s] = r
                }), p;
                var o = t ? C : u,
                    e = this._parents,
                    n = this._groups;
                "function" != typeof r && (r = wr(r));
                for (var l = n.length, i = new Array(l), y = new Array(l), x = new Array(l), s = 0; s < l; ++s) {
                    var a = e[s],
                        h = n[s],
                        f = h.length,
                        p = r.call(a, a && a.__data__, s, e),
                        c = p.length,
                        d = y[s] = new Array(c),
                        k = i[s] = new Array(c),
                        g = x[s] = new Array(f);
                    o(a, h, d, k, g, p, t);
                    for (var w, v, b = 0, W = 0; b < c; ++b)
                        if (w = d[b]) {
                            for (b >= W && (W = b + 1); !(v = k[W]) && ++W < c;);
                            w._next = v || null
                        }
                }
                return i = new J(i, e), i._enter = y, i._exit = x, i
            },
            Wr = function() {
                return new J(this._exit || this._groups.map(kr), this._parents)
            },
            _r = function(r) {
                for (var t = this._groups, o = r._groups, e = t.length, n = o.length, l = Math.min(e, n), i = new Array(e), y = 0; y < l; ++y)
                    for (var x, s = t[y], a = o[y], h = s.length, f = i[y] = new Array(h), p = 0; p < h; ++p)(x = s[p] || a[p]) && (f[p] = x);
                for (; y < e; ++y) i[y] = t[y];
                return new J(i, this._parents)
            },
            mr = function() {
                for (var r = this._groups, t = -1, o = r.length; ++t < o;)
                    for (var e, n = r[t], l = n.length - 1, i = n[l]; --l >= 0;)(e = n[l]) && (i && i !== e.nextSibling && i.parentNode.insertBefore(e, i), i = e);
                return this
            },
            Sr = function(r) {
                function t(t, o) {
                    return t && o ? r(t.__data__, o.__data__) : !t - !o
                }
                r || (r = c);
                for (var o = this._groups, e = o.length, n = new Array(e), l = 0; l < e; ++l) {
                    for (var i, y = o[l], x = y.length, s = n[l] = new Array(x), a = 0; a < x; ++a)(i = y[a]) && (s[a] = i);
                    s.sort(t)
                }
                return new J(n, this._parents).order()
            },
            Ar = function() {
                var r = arguments[0];
                return arguments[0] = this, r.apply(null, arguments), this
            },
            Er = function() {
                var r = new Array(this.size()),
                    t = -1;
                return this.each(function() {
                    r[++t] = this
                }), r
            },
            Pr = function() {
                for (var r = this._groups, t = 0, o = r.length; t < o; ++t)
                    for (var e = r[t], n = 0, l = e.length; n < l; ++n) {
                        var i = e[n];
                        if (i) return i
                    }
                return null
            },
            Or = function() {
                var r = 0;
                return this.each(function() {
                    ++r
                }), r
            },
            Tr = function() {
                return !this.node()
            },
            jr = function(r) {
                for (var t = this._groups, o = 0, e = t.length; o < e; ++o)
                    for (var n, l = t[o], i = 0, y = l.length; i < y; ++i)(n = l[i]) && r.call(n, n.__data__, i, l);
                return this
            },
            Mr = function(r, t) {
                var o = rr(r);
                if (arguments.length < 2) {
                    var e = this.node();
                    return o.local ? e.getAttributeNS(o.space, o.local) : e.getAttribute(o)
                }
                return this.each((null == t ? o.local ? k : d : "function" == typeof t ? o.local ? b : v : o.local ? w : g)(o, t))
            },
            Ir = function(r) {
                return r.ownerDocument && r.ownerDocument.defaultView || r.document && r || r.defaultView
            },
            Hr = function(r, t, o) {
                var e;
                return arguments.length > 1 ? this.each((null == t ? W : "function" == typeof t ? m : _)(r, t, null == o ? "" : o)) : Ir(e = this.node()).getComputedStyle(e, null).getPropertyValue(r)
            },
            Lr = function(r, t) {
                return arguments.length > 1 ? this.each((null == t ? S : "function" == typeof t ? E : A)(r, t)) : this.node()[r]
            };
        T.prototype = {
            add: function(r) {
                var t = this._names.indexOf(r);
                t < 0 && (this._names.push(r), this._node.setAttribute("class", this._names.join(" ")))
            },
            remove: function(r) {
                var t = this._names.indexOf(r);
                t >= 0 && (this._names.splice(t, 1), this._node.setAttribute("class", this._names.join(" ")))
            },
            contains: function(r) {
                return this._names.indexOf(r) >= 0
            }
        };
        var Dr = function(r, t) {
                var o = P(r + "");
                if (arguments.length < 2) {
                    for (var e = O(this.node()), n = -1, l = o.length; ++n < l;)
                        if (!e.contains(o[n])) return !1;
                    return !0
                }
                return this.each(("function" == typeof t ? L : t ? I : H)(o, t))
            },
            Nr = function(r) {
                return arguments.length ? this.each(null == r ? D : ("function" == typeof r ? B : N)(r)) : this.node().textContent
            },
            Br = function(r) {
                return arguments.length ? this.each(null == r ? F : ("function" == typeof r ? R : q)(r)) : this.node().innerHTML
            },
            Fr = function() {
                return this.each(z)
            },
            qr = function() {
                return this.each(X)
            },
            Rr = function(r) {
                var t = "function" == typeof r ? r : tr(r);
                return this.select(function() {
                    return this.appendChild(t.apply(this, arguments))
                })
            },
            zr = function(r, t) {
                var o = "function" == typeof r ? r : tr(r),
                    e = null == t ? Y : "function" == typeof t ? t : pr(t);
                return this.select(function() {
                    return this.insertBefore(o.apply(this, arguments), e.apply(this, arguments) || null)
                })
            },
            Xr = function() {
                return this.each(V)
            },
            Yr = function(r) {
                return arguments.length ? this.property("__data__", r) : this.node().__data__
            },
            Vr = function(r, t) {
                return this.each(("function" == typeof t ? K : G)(r, t))
            },
            Ur = [null];
        J.prototype = $.prototype = {
            constructor: J,
            select: ur,
            selectAll: cr,
            filter: dr,
            data: br,
            enter: gr,
            exit: Wr,
            merge: _r,
            order: mr,
            sort: Sr,
            call: Ar,
            nodes: Er,
            node: Pr,
            size: Or,
            empty: Tr,
            each: jr,
            attr: Mr,
            style: Hr,
            property: Lr,
            classed: Dr,
            text: Nr,
            html: Br,
            raise: Fr,
            lower: qr,
            append: Rr,
            insert: zr,
            remove: Xr,
            datum: Yr,
            on: sr,
            dispatch: Vr
        };
        var Gr = function(r) {
                return "string" == typeof r ? new J([
                    [document.querySelector(r)]
                ], [document.documentElement]) : new J([
                    [r]
                ], Ur)
            },
            Kr = function(r) {
                return "string" == typeof r ? new J([document.querySelectorAll(r)], [document.documentElement]) : new J([null == r ? [] : r], Ur)
            },
            Jr = function(r, t, o) {
                arguments.length < 3 && (o = t, t = ar().changedTouches);
                for (var e, n = 0, l = t ? t.length : 0; n < l; ++n)
                    if ((e = t[n]).identifier === o) return hr(r, e);
                return null
            },
            $r = function(r, t) {
                null == t && (t = ar().touches);
                for (var o = 0, e = t ? t.length : 0, n = new Array(e); o < e; ++o) n[o] = hr(r, t[o]);
                return n
            };
        r.creator = tr, r.local = e, r.matcher = ir, r.mouse = fr, r.namespace = rr, r.namespaces = Z, r.select = Gr, r.selectAll = Kr, r.selection = $, r.selector = pr, r.selectorAll = Cr, r.touch = Jr, r.touches = $r, r.window = Ir, r.customEvent = a, Object.defineProperty(r, "__esModule", {
            value: !0
        })
    })
}, , , , , , , , , , , function(r, t, o) {
    var e = o(20),
        n = (o(22), o(23)),
        l = o(24),
        i = o(25),
        y = o(4),
        x = o(2),
        s = o(5),
        a = o(3),
        h = o(8),
        f = o(26);
    r.exports = function() {
        function r(r, e, l) {
            l = l || new x, W = o(), v = new n(r), canvasWidth = window.innerWidth, canvasHeight = window.innerHeight, e = e || W;
            var i = t(e.width(), e.height(), W.width(), W.height());
            v.width(canvasWidth).height(canvasHeight).scale(i), m = l.x(), S = l.y(), b = v.context2d(), d(), p();
            new x(W.width() * v.scale() / 2 + m, W.height() * v.scale() / 2 + S);
            a.each(_, function(r) {
                r.maxVelocity(.5).gravity(.03 / v.scale())
            }), setTimeout(function() {
                P || g()
            }, 300)
        }

        function t(r, t, o, e) {
            var n = r / t,
                l = o / e,
                i = r / o;
            return n > l && (i = t / e), r > o && t > e && (i = 1), i
        }

        function o() {
            var r = 0,
                t = 0,
                o = 50,
                e = function(o) {
                    r = Math.max(r, o.x || 0, o.x1 || 0, o.x2 || 0), t = Math.max(t, o.y || 0, o.y1 || 0, o.y2 || 0)
                };
            return a.each((f.triangles || []).concat(f.circles || []), e), new s(r + o, t + o)
        }

        function p() {
            var r = function() {
                    var r = h.event;
                    return y.getPointerCoordinates(r)
                },
                t = function(r, t) {
                    var o = 12 * v.scale();
                    return t = t || !1, r = (r || .8) * v.scale(),
                        function(e) {
                            a.each(_, function(n) {
                                (t || A * v.scale() >= y.getDistanceBtwPoints(n.getPosition(), e)) && (n.gravity(r), n.maxVelocity(o), n.setExplosion(e))
                            }), P || g()
                        }
                };
            h.select(document).on("mousemove", a.compose(t(), r)), h.select(document).on("touchstart", a.compose(t(.4), r))
        }

        function u(r, t) {
            E < t || r && r.draw && r.draw()
        }

        function C(r, t, o, n, l, i) {
            var y = v.scale();
            return (new e).x(t * y + m).y(o * y + S).r((n || .1 * Math.random()) * y).strokeColor(l || "white").fillColor(i || "white").context2d(r)
        }

        function c(r, t, o, e, n) {
            var i = v.scale();
            return (new l).x(t.x * i + m).y(t.y * i + S).x1(t.x1 * i + m).y1(t.y1 * i + S).x2(t.x2 * i + m).y2(t.y2 * i + S).strokeColor(t.strokeColor).fillColor(t.fillColor).lineWidth((t.lineWidth || 0) * i).context2d(r)
        }

        function d() {
            a.each(f.triangles, function(r) {
                _.push(i(c(b, r, r.strokeColor, r.fillColor, r.lineWidth || 0)))
            }), a.each(f.circles, function(r) {
                _.push(i(C(b, r.x, r.y, r.r)))
            })
        }

        function k() {
            v.clearRenderSurface();
            for (var r, t = !1, o = 0; o < _.length; o++) r = _[o], r.stepAnimation(), t || (t = r.isAnimating());
            return E < _.length && (E += 15, t = !0), a.each(_, u), v.draw(), t
        }

        function g() {
            k() ? (P = !0, window.requestAnimFrame(g)) : P = !1
        }

        function w(r, o) {
            P = !1, r = r || new s(window.innerWidth, window.innerHeight), v.width(window.innerWidth).height(window.innerHeight).scale(t(r.width(), r.height(), W.width(), W.height())), !o || o.x() == m && o.y() == S || (m = o.x(), S = o.y()), _ = [], d(), g()
        }
        var v, b, W, _ = [],
            m = 30,
            S = 20,
            A = 45;
        window.requestAnimFrame = function() {
            return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(r) {
                window.setTimeout(r, 1e3 / 60)
            }
        }();
        var E = 1,
            P = !1;
        return {
            render: r,
            resize: w,
            getPlexusSize: o,
            getCanvasScale: t
        }
    }()
}, function(r, t, o) {
    var e = o(3),
        n = o(21);
    r.exports = function() {
        function r(r) {
            r = r || {}, this._options = e.extend(this._options || {}, t), n.call(this, this._options), e.extend(this._options, r)
        }
        var t = {
            r: 1
        };
        return r.prototype = Object.create(n.prototype), e.extend(r.prototype, {
            draw: function() {
                return this._options.ctx2d.beginPath(), this._options.ctx2d.arc(this._options.x, this._options.y, this._options.r, 0, 2 * Math.PI), this._options.ctx2d.fillStyle != this._options.fillColor && (this._options.ctx2d.fillStyle = this._options.fillColor), this._options.ctx2d.fill(), this
            },
            r: function(r) {
                return "undefined" == typeof r ? this._options.r : (this._options.r = r, this)
            }
        }), r
    }()
}, function(r, t, o) {
    var e = o(2),
        n = o(3);
    r.exports = function() {
        function r(r) {
            r = r || {}, this._options = n.extend(this._options || {}, t), n.extend(this._options, r)
        }
        var t = {
            x: 0,
            y: 0,
            lineWidth: 1,
            strokeColor: "transparent",
            fillColor: "transparent",
            ctx2d: document.createElement("canvas").getContext("2d")
        };
        return n.extend(r.prototype, {
            context2d: function(r) {
                return r ? (this._options.ctx2d = r, this) : this._options.ctx2d
            },
            draw: function() {
                throw "to be implemented by child class"
            },
            options: function(r) {
                return "undefined" == typeof r ? this._options : (n.extend(this._options, r), this)
            },
            fillColor: function(r) {
                return "undefined" == typeof r ? this._options.fillColor : (this._options.fillColor = r, this)
            },
            strokeColor: function(r) {
                return "undefined" == typeof r ? this._options.strokeColor : (this._options.strokeColor = r, this)
            },
            x: function(r) {
                return "undefined" == typeof r ? this._options.x : (this._options.x = r, this)
            },
            y: function(r) {
                return "undefined" == typeof r ? this._options.y : (this._options.y = r, this)
            },
            lineWidth: function(r) {
                return "undefined" == typeof r ? this._options.lineWidth : (this._options.lineWidth = r, this)
            },
            moveTo: function(r, t) {
                return this._options.x = r, this._options.y = t, this
            },
            getPosition: function() {
                return new e(this.x(), this.y())
            },
            shiftBy: function(r, t) {
                var o = this.getPosition();
                return this.moveTo(o.x() + r, o.y() + t), this
            }
        }), r
    }()
}, function(r, t, o) {
    var e = o(3),
        n = o(21);
    r.exports = function() {
        function r(r) {
            r = r || {}, this._options = e.extend(this._options || {}, t), n.call(this, this._options), e.extend(this._options, r)
        }
        var t = {
            x1: 0,
            y1: 0
        };
        return r.prototype = Object.create(n.prototype), e.extend(r.prototype, {
            draw: function() {
                return this._options.ctx2d.beginPath(), this._options.ctx2d.moveTo(this._options.x, this._options.y), this._options.ctx2d.lineTo(this._options.x1, this._options.y1), this._options.ctx2d.strokeStyle = this._options.strokeColor, this._options.ctx2d.lineWidth = this._options.lineWidth, this._options.ctx2d.stroke(), this
            },
            x1: function(r) {
                return "undefined" == typeof r ? this._options.x1 : (this._options.x1 = r, this)
            },
            y1: function(r) {
                return "undefined" == typeof r ? this._options.y1 : (this._options.y1 = r, this)
            }
        }), r
    }()
}, function(r, t, o) {
    var e = o(3);
    r.exports = function() {
        function r(r) {
            if (!r) throw "Input parameter canvasEl missing !!!";
            this.virtualCanvas = document.createElement("canvas"), this.canvasEl = r, this.virtualCtx2d = this.virtualCanvas.getContext("2d"), this.ctx2d = r.getContext("2d"), this.width(100).height(100), this.s = 1
        }
        return e.extend(r.prototype, {
            canvas: function(r) {
                return r ? (this.canvasEl = r, this.ctx2d = r.getContext("2d"), this.width(this.w).height(this.h), this) : this.canvasEl
            },
            context2d: function() {
                return this.virtualCtx2d
            },
            width: function(r) {
                return r ? (this.w = r, this.canvasEl.width = this.w, this.virtualCanvas.width = this.w, this.canvasEl.style.width = this.w, this.virtualCanvas.style.width = this.w, this) : this.w
            },
            height: function(r) {
                return r ? (this.h = r, this.canvasEl.height = this.h, this.virtualCanvas.height = this.h, this.canvasEl.style.height = this.h, this.virtualCanvas.style.height = this.h, this) : this.h
            },
            clearRenderSurface: function() {
                return this.s = this.s || 1, this.ctx2d.clearRect(0, 0, this.canvasEl.width, this.canvasEl.height), this.virtualCtx2d.clearRect(0, 0, this.virtualCanvas.width, this.virtualCanvas.height), this
            },
            draw: function() {
                return this.ctx2d.drawImage(this.virtualCanvas, 0, 0), this
            },
            scale: function(r) {
                return r ? (this.s = r, this.virtualCanvas.width = this.virtualCanvas.width, this.virtualCanvas.height = this.virtualCanvas.height, this) : this.s
            }
        }), r
    }()
}, function(r, t, o) {
    var e = o(3),
        n = o(2),
        l = o(21);
    r.exports = function() {
        function r(r) {
            r = r || {}, this._options = e.extend(this._options || {}, t), l.call(this, this._options), e.extend(this._options, r)
        }
        var t = {
            x1: 0,
            y1: 0
        };
        return r.prototype = Object.create(l.prototype), e.extend(r.prototype, {
            draw: function() {
                return this._options.ctx2d.beginPath(), this._options.ctx2d.moveTo(this._options.x, this._options.y), this._options.ctx2d.lineTo(this._options.x1, this._options.y1), this._options.ctx2d.lineTo(this._options.x2, this._options.y2), this._options.ctx2d.lineTo(this._options.x, this._options.y), this._options.ctx2d.closePath(), this._options.ctx2d.strokeStyle != this._options.strokeColor && (this._options.ctx2d.strokeStyle = this._options.strokeColor), this._options.ctx2d.fillStyle != this._options.fillColor && (this._options.ctx2d.fillStyle = this._options.fillColor), this._options.ctx2d.lineWidth != this._options.lineWidth && (this._options.ctx2d.lineWidth = this._options.lineWidth), "transparent" != this._options.fillColor && this._options.ctx2d.fill(), "transparent" != this._options.strokeColor && this._options.ctx2d.stroke(), this
            },
            x1: function(r) {
                return "undefined" == typeof r ? this._options.x1 : (this._options.x1 = r, this)
            },
            y1: function(r) {
                return "undefined" == typeof r ? this._options.y1 : (this._options.y1 = r, this)
            },
            x2: function(r) {
                return "undefined" == typeof r ? this._options.x2 : (this._options.x2 = r, this)
            },
            y2: function(r) {
                return "undefined" == typeof r ? this._options.y2 : (this._options.y2 = r, this)
            },
            lineWidth: function(r) {
                return "undefined" == typeof r ? this._options.lineWidth : (this._options.lineWidth = r, this)
            },
            moveTo: function(r, t) {
                var o = this.getPosition(),
                    e = o.x() - r,
                    n = o.y() - t;
                return this.x(this.x() - e).x1(this.x1() - e).x2(this.x2() - e).y(this.y() - n).y1(this.y1() - n).y2(this.y2() - n), this
            },
            getPosition: function() {
                return new n((this.x() + this.x1() + this.x2()) / 3, (this.y() + this.y1() + this.y2()) / 3)
            }
        }), r
    }()
}, function(r, t, o) {
    var e = (o(3), o(4)),
        n = o(21);
    r.exports = function() {
        function r(r) {
            if (!(r instanceof n || r instanceof ShapesContainer)) throw "explosionHandler needs either canvasObject or shapesContainer to attatch its listeners";
            return r._options = r._options || {}, r._options.gravity = .8, r._options.max_velocity = 12, r._options.initposition = r.getPosition(), r._options.speed = 0, r._options.isExploding = !1, r.maxVelocity = function(r) {
                return "undefined" == typeof r ? this._options.max_velocity : (this._options.max_velocity = r, this)
            }, r.gravity = function(r) {
                return "undefined" == typeof r ? this._options.gravity : (this._options.gravity = r, this)
            }, r.setExplosion = function(r) {
                this.exploding(!0), this.initialSpeed = Math.random() * this._options.max_velocity, this._options.explosionPoint = r, this.speed(this.initialSpeed);
                var t = Math.abs(r.x() - this._options.initposition.x()),
                    o = Math.abs(r.y() - this._options.initposition.y()),
                    e = Math.atan(o / t);
                return this.directionX = r.x() < this._options.initposition.x() ? 1 : -1, this.directionY = r.y() < this._options.initposition.y() ? 1 : -1, this.angle = e, this
            }, r.isAnimating = function() {
                return 0 != this.speed() || this.exploding()
            }, r.preExplode = function(r) {
                this.setExplosion(r), this.speed(2 * Math.random())
            }, r.returnToInitial = function() {
                var r = e.getDistanceBtwPoints(this.getPosition(), this._options.initposition);
                this.speed((Math.sqrt(Math.pow(this._options.gravity, 2) + 8 * this._options.gravity * r) - this._options.gravity) / 2);
                var t = Math.abs(this.getPosition().x() - this._options.initposition.x()),
                    o = Math.abs(this.getPosition().y() - this._options.initposition.y()),
                    n = Math.atan(o / t);
                if (this.directionX = this._options.initposition.x() > this.getPosition().x() ? 1 : -1, this.directionY = this._options.initposition.y() > this.getPosition().y() ? 1 : -1, this.angle = n, r <= this._options.gravity) {
                    var l = Math.cos(this.angle) * r * this.directionX,
                        i = Math.sin(this.angle) * r * this.directionY;
                    this.shiftBy(l, i)
                }
            }, r.stepAnimation = function() {
                if (0 != this.speed() || this.exploding()) {
                    var r = Math.cos(this.angle) * this.speed() * this.directionX,
                        t = Math.sin(this.angle) * this.speed() * this.directionY;
                    return this.shiftBy(r, t), this.speed(this.speed() - this._options.gravity), 0 == this.speed() && this.exploding() && (this.exploding(!1), this.returnToInitial()), this
                }
            }, r.exploding = function(r) {
                return "undefined" == typeof r ? this._options.isExploding : (this._options.isExploding = r, this)
            }, r.speed = function(r) {
                return "undefined" == typeof r ? this._options.speed : (this._options.speed = Math.max(r, 0), this)
            }, r
        }
        return r
    }()
}, function(r, t) {
    r.exports = {
        triangles: [{
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 453.8,
            y: 565.9,
            x1: 442.4,
            y1: 578.3,
            x2: 436.1,
            y2: 572.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 440.9,
            y: 600.4,
            x1: 453.8,
            y1: 565.9,
            x2: 436.1,
            y2: 572.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 423.3,
            y: 568.9,
            x1: 426.9,
            y1: 554.3,
            x2: 453.8,
            y2: 565.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 436.1,
            y: 572.4,
            x1: 442.4,
            y1: 578.3,
            x2: 423.3,
            y2: 568.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 446.2,
            y: 559.9,
            x1: 436.1,
            y1: 572.4,
            x2: 442.4,
            y2: 578.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 451.8,
            y: 552.5,
            x1: 453.8,
            y1: 565.9,
            x2: 446.2,
            y2: 559.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 445,
            y: 548,
            x1: 452.7,
            y1: 532.9,
            x2: 451.8,
            y2: 552.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 432.5,
            y: 558.7,
            x1: 451.8,
            y1: 552.5,
            x2: 453.8,
            y2: 565.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 445,
            y: 548,
            x1: 453.8,
            y1: 565.9,
            x2: 442.4,
            y2: 578.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 426.9,
            y: 554.3,
            x1: 445,
            y1: 548,
            x2: 437,
            y2: 525.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 452.7,
            y: 532.9,
            x1: 442.5,
            y1: 517.9,
            x2: 437,
            y2: 525.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 425.4,
            y: 524.5,
            x1: 437,
            y1: 525.3,
            x2: 445,
            y2: 548
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 418.3,
            y: 533.9,
            x1: 409.8,
            y1: 509,
            x2: 380.5,
            y2: 523.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 398.3,
            y: 531.5,
            x1: 409.8,
            y1: 509,
            x2: 416.3,
            y2: 543.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 420.1,
            y: 500.5,
            x1: 421.3,
            y1: 496.5,
            x2: 442,
            y2: 492.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 433,
            y: 507.4,
            x1: 426.9,
            y1: 516.4,
            x2: 442.5,
            y2: 517.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 437,
            y: 525.3,
            x1: 433,
            y1: 507.4,
            x2: 398.3,
            y2: 531.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 460.1,
            y: 481,
            x1: 475.5,
            y1: 474.1,
            x2: 428.4,
            y2: 456.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 418.3,
            y: 470.7,
            x1: 442,
            y1: 492.9,
            x2: 433,
            y2: 507.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 460.1,
            y: 481,
            x1: 442,
            y1: 492.9,
            x2: 447,
            y2: 475.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 475.5,
            y: 474.1,
            x1: 491.3,
            y1: 436,
            x2: 516.5,
            y2: 430.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 425.4,
            y: 524.5,
            x1: 426.9,
            y1: 516.4,
            x2: 409.8,
            y2: 509
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 426.9,
            y: 554.3,
            x1: 416.3,
            y1: 543.3,
            x2: 418.3,
            y2: 533.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 437,
            y: 525.3,
            x1: 418.3,
            y1: 533.9,
            x2: 432.5,
            y2: 558.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 446.2,
            y: 559.9,
            x1: 436.1,
            y1: 572.4,
            x2: 432.5,
            y2: 558.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 442.4,
            y: 578.3,
            x1: 440.9,
            y1: 600.4,
            x2: 453.8,
            y2: 565.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 425.4,
            y: 524.5,
            x1: 418.3,
            y1: 533.9,
            x2: 445,
            y2: 548
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 452.7,
            y: 532.9,
            x1: 416.3,
            y1: 543.3,
            x2: 426.9,
            y2: 554.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 423.5,
            y: 568.1,
            x1: 432.5,
            y1: 558.7,
            x2: 442.4,
            y2: 578.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 392.7,
            y: 486.5,
            x1: 404.7,
            y1: 481.9,
            x2: 398.5,
            y2: 470.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 373.7,
            y: 492.1,
            x1: 374.2,
            y1: 512.5,
            x2: 392.7,
            y2: 486.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 375.9,
            y: 462,
            x1: 357.1,
            y1: 454.4,
            x2: 375.7,
            y2: 452.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 401.7,
            y: 456.2,
            x1: 412.4,
            y1: 448.5,
            x2: 428.4,
            y2: 456.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 398.5,
            y: 470.7,
            x1: 418.3,
            y1: 470.7,
            x2: 401.7,
            y2: 456.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 375.9,
            y: 462,
            x1: 392.7,
            y1: 486.5,
            x2: 398.5,
            y2: 470.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 451.2,
            y: 428.3,
            x1: 444.7,
            y1: 413.5,
            x2: 461.1,
            y2: 394.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 421.1,
            y: 435.3,
            x1: 436.8,
            y1: 449.2,
            x2: 451.2,
            y2: 428.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 428.4,
            y: 456.7,
            x1: 418.3,
            y1: 470.7,
            x2: 447,
            y2: 475.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 404.7,
            y: 481.9,
            x1: 421.3,
            y1: 496.5,
            x2: 420.1,
            y2: 500.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 418.3,
            y: 470.7,
            x1: 404.7,
            y1: 481.9,
            x2: 447,
            y2: 475.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 420.1,
            y: 500.5,
            x1: 426.9,
            y1: 516.4,
            x2: 433,
            y2: 507.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 447,
            y: 475.5,
            x1: 421.3,
            y1: 496.5,
            x2: 418.3,
            y2: 470.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 428.4,
            y: 456.7,
            x1: 436.8,
            y1: 449.2,
            x2: 442.9,
            y2: 450.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 476.9,
            y: 426.4,
            x1: 467.5,
            y1: 430.6,
            x2: 491.3,
            y2: 436
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 547.2,
            y: 422.3,
            x1: 571.6,
            y1: 407.1,
            x2: 552.1,
            y2: 404.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 590.2,
            y: 382.5,
            x1: 583.2,
            y1: 355.8,
            x2: 572.8,
            y2: 353.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 529.6,
            y: 383.2,
            x1: 552.1,
            y1: 404.3,
            x2: 535.3,
            y2: 367.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 523.8,
            y: 398.3,
            x1: 514.8,
            y1: 385.2,
            x2: 529.6,
            y2: 383.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 470.8,
            y: 375.3,
            x1: 482.3,
            y1: 345.2,
            x2: 480.3,
            y2: 368.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 449.3,
            y: 397,
            x1: 435.3,
            y1: 393.9,
            x2: 453.9,
            y2: 377.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 470.8,
            y: 375.3,
            x1: 461.1,
            y1: 394.9,
            x2: 453.9,
            y2: 377.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 444.7,
            y: 413.5,
            x1: 449.3,
            y1: 397,
            x2: 470.8,
            y2: 375.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 461.1,
            y: 394.9,
            x1: 476.9,
            y1: 426.4,
            x2: 451.2,
            y2: 428.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 460.1,
            y: 481,
            x1: 491.3,
            y1: 436,
            x2: 475.5,
            y2: 474.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 442.9,
            y: 450.4,
            x1: 451.2,
            y1: 428.3,
            x2: 460.1,
            y2: 481
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 467.5,
            y: 430.6,
            x1: 442.9,
            y1: 450.4,
            x2: 475.5,
            y2: 474.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 411.7,
            y: 350.5,
            x1: 416.8,
            y1: 326.9,
            x2: 402.2,
            y2: 330.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 448.5,
            y: 342,
            x1: 439.3,
            y1: 347.2,
            x2: 446.2,
            y2: 335.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 483.2,
            y: 317.9,
            x1: 478.1,
            y1: 337.6,
            x2: 512.1,
            y2: 318.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 536.1,
            y: 305.2,
            x1: 534.7,
            y1: 338.3,
            x2: 559.1,
            y2: 343.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 444.8,
            y: 299,
            x1: 445.9,
            y1: 276.4,
            x2: 428.1,
            y2: 275.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 471.1,
            y: 305.3,
            x1: 483.2,
            y1: 317.9,
            x2: 482.3,
            y2: 345.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 444.8,
            y: 299,
            x1: 483.2,
            y1: 317.9,
            x2: 448.5,
            y2: 342
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 500.5,
            y: 257.4,
            x1: 516.9,
            y1: 291.7,
            x2: 541,
            y2: 260.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 596.1,
            y: 252.4,
            x1: 612,
            y1: 208.5,
            x2: 618.5,
            y2: 246.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 604.7,
            y: 194.2,
            x1: 576.4,
            y1: 188.5,
            x2: 586.2,
            y2: 160.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 549.4,
            y: 202.5,
            x1: 537.7,
            y1: 184.4,
            x2: 539,
            y2: 208.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 541.7,
            y: 260.5,
            x1: 579,
            y1: 252.8,
            x2: 571.2,
            y2: 266.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 603.5,
            y: 273.8,
            x1: 602,
            y1: 312.4,
            x2: 580.1,
            y2: 314.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 597.9,
            y: 297.5,
            x1: 577,
            y1: 308.6,
            x2: 580.1,
            y2: 314.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 539.9,
            y: 344.4,
            x1: 534.7,
            y1: 338.3,
            x2: 573.8,
            y2: 330.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 559.1,
            y: 343.4,
            x1: 580.1,
            y1: 314.7,
            x2: 577,
            y2: 308.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 583.2,
            y: 355.8,
            x1: 597.9,
            y1: 297.5,
            x2: 573.8,
            y2: 330.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 535.3,
            y: 367.4,
            x1: 480.3,
            y1: 368.6,
            x2: 534.7,
            y2: 338.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 360.9,
            y: 392,
            x1: 370.8,
            y1: 395,
            x2: 371.8,
            y2: 428.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 388.9,
            y: 381.8,
            x1: 411.7,
            y1: 350.5,
            x2: 400.8,
            y2: 391.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 388.8,
            y: 367.4,
            x1: 388.9,
            y1: 381.8,
            x2: 413.9,
            y2: 389.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 435.3,
            y: 393.9,
            x1: 421.1,
            y1: 435.3,
            x2: 413.9,
            y2: 389.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 435.2,
            y: 381.2,
            x1: 411.7,
            y1: 350.5,
            x2: 453.9,
            y2: 377.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 442.6,
            y: 376.7,
            x1: 435.3,
            y1: 393.9,
            x2: 449.3,
            y2: 397
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 448.5,
            y: 342,
            x1: 470.8,
            y1: 375.3,
            x2: 442.6,
            y2: 376.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 416.8,
            y: 326.9,
            x1: 439.3,
            y1: 347.2,
            x2: 442.6,
            y2: 376.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 389.3,
            y: 287,
            x1: 357.7,
            y1: 309.8,
            x2: 380.1,
            y2: 267.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 414.9,
            y: 273.8,
            x1: 428.1,
            y1: 275.9,
            x2: 421.9,
            y2: 242.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 410.6,
            y: 256.4,
            x1: 413.4,
            y1: 243.6,
            x2: 421.9,
            y2: 242.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 411.5,
            y: 220.4,
            x1: 396,
            y1: 219,
            x2: 393.5,
            y2: 224.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 464.4,
            y: 225,
            x1: 471.8,
            y1: 215.4,
            x2: 495.6,
            y2: 218
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 435.7,
            y: 190.5,
            x1: 418.3,
            y1: 191.8,
            x2: 418.8,
            y2: 183.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 527.5,
            y: 157.4,
            x1: 553,
            y1: 170.9,
            x2: 561.8,
            y2: 161.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 557.8,
            y: 123.1,
            x1: 568.7,
            y1: 131.8,
            x2: 541.7,
            y2: 141.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 545.4,
            y: 109.5,
            x1: 557.8,
            y1: 123.1,
            x2: 561.8,
            y2: 161.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 568.7,
            y: 131.8,
            x1: 580.1,
            y1: 137.5,
            x2: 562.6,
            y2: 160.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 316.7,
            y: 394.7,
            x1: 320.2,
            y1: 385.5,
            x2: 338.4,
            y2: 393.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 239.9,
            y: 399.8,
            x1: 283.4,
            y1: 369.6,
            x2: 280.5,
            y2: 340.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 316.7,
            y: 394.7,
            x1: 283.4,
            y1: 369.6,
            x2: 298.5,
            y2: 334.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 320.2,
            y: 385.5,
            x1: 283.4,
            y1: 369.6,
            x2: 298.5,
            y2: 334.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 338.4,
            y: 393.8,
            x1: 339.2,
            y1: 430.6,
            x2: 370.8,
            y2: 395
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 360.9,
            y: 392,
            x1: 357.1,
            y1: 454.4,
            x2: 371.8,
            y2: 428.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 375.7,
            y: 452.2,
            x1: 421.1,
            y1: 435.3,
            x2: 398.5,
            y2: 470.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 371.8,
            y: 428.4,
            x1: 400.8,
            y1: 391.8,
            x2: 435.3,
            y2: 393.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 153,
            y: 343.1,
            x1: 110.2,
            y1: 330.2,
            x2: 109.9,
            y2: 286.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 102.2,
            y: 275.9,
            x1: 110.2,
            y1: 330.2,
            x2: 125.7,
            y2: 283.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 105.2,
            y: 262.6,
            x1: 102.2,
            y1: 275.9,
            x2: 109.9,
            y2: 286.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 151.2,
            y: 262.5,
            x1: 193.9,
            y1: 245,
            x2: 205.4,
            y2: 272
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 109.2,
            y: 209.5,
            x1: 71.9,
            y1: 213.6,
            x2: 94.2,
            y2: 237.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 62.6,
            y: 217.7,
            x1: 46.7,
            y1: 233.4,
            x2: 33.9,
            y2: 227.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 31.2,
            y: 256.8,
            x1: 55.4,
            y1: 261.7,
            x2: 27.2,
            y2: 264.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 59,
            y: 280.2,
            x1: 58.5,
            y1: 301.9,
            x2: 77.3,
            y2: 303.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 102.2,
            y: 275.9,
            x1: 77.3,
            y1: 303.3,
            x2: 109.9,
            y2: 286.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 4.2,
            y: 205.3,
            x1: 27.4,
            y1: 179.5,
            x2: 13.6,
            y2: 166.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 8.7,
            y: 246.4,
            x1: 2.9,
            y1: 237.6,
            x2: 26.2,
            y2: 229.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 1.3,
            y: 271.2,
            x1: 31.2,
            y1: 256.8,
            x2: 35.6,
            y2: 328
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 27.2,
            y: 264.3,
            x1: 35.6,
            y1: 328,
            x2: 77.3,
            y2: 303.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 260.6,
            y: 33.1,
            x1: 290.8,
            y1: 33.2,
            x2: 267,
            y2: 7.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 234.1,
            y: 17.6,
            x1: 290.8,
            y1: 33.2,
            x2: 299.3,
            y2: 2.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 209.8,
            y: 18.3,
            x1: 237.7,
            y1: .8,
            x2: 260.6,
            y2: 33.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 234.1,
            y: 17.6,
            x1: 237.7,
            y1: .8,
            x2: 267,
            y2: 7.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 339.2,
            y: 29,
            x1: 324.7,
            y1: 31,
            x2: 323.7,
            y2: 38.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 362.9,
            y: 10.9,
            x1: 392.8,
            y1: 25.7,
            x2: 392.8,
            y2: 8.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 433.8,
            y: 27.3,
            x1: 414.5,
            y1: 30,
            x2: 409.3,
            y2: 25.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 392.8,
            y: 25.7,
            x1: 433.8,
            y1: 27.3,
            x2: 420.8,
            y2: 53.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 500.4,
            y: 49,
            x1: 481.7,
            y1: 50.3,
            x2: 484.2,
            y2: 59.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 516.9,
            y: 85.6,
            x1: 544,
            y1: 92,
            x2: 557.8,
            y2: 123.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 505.3,
            y: 92,
            x1: 545.4,
            y1: 109.5,
            x2: 516.9,
            y2: 85.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 506.2,
            y: 82.8,
            x1: 483.2,
            y1: 85.6,
            x2: 543.5,
            y2: 100.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 347,
            y: 191.4,
            x1: 397.3,
            y1: 170.8,
            x2: 307.9,
            y2: 144.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 307.9,
            y: 144.2,
            x1: 413.8,
            y1: 136,
            x2: 357.4,
            y2: 158.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 321,
            y: 136.3,
            x1: 349,
            y1: 138.8,
            x2: 314.6,
            y2: 167.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 347,
            y: 191.4,
            x1: 314.6,
            y1: 167.5,
            x2: 310.5,
            y2: 225.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 280.5,
            y: 340.9,
            x1: 253,
            y1: 314.3,
            x2: 298.5,
            y2: 334.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 231.2,
            y: 340.7,
            x1: 202.2,
            y1: 367.3,
            x2: 203.9,
            y2: 312.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 205.4,
            y: 272,
            x1: 184.5,
            y1: 277.7,
            x2: 193.9,
            y2: 245
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 153,
            y: 343.1,
            x1: 231.2,
            y1: 340.7,
            x2: 203.9,
            y2: 312.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 109.9,
            y: 286.6,
            x1: 125.7,
            y1: 283.7,
            x2: 153,
            y2: 343.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 151.2,
            y: 262.5,
            x1: 109.9,
            y1: 286.6,
            x2: 105.2,
            y2: 262.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 109.2,
            y: 209.5,
            x1: 111.4,
            y1: 241.3,
            x2: 131,
            y2: 237
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 59,
            y: 280.2,
            x1: 55.4,
            y1: 261.7,
            x2: 102.2,
            y2: 275.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 102.1,
            y: 134.8,
            x1: 91.5,
            y1: 115.9,
            x2: 129.5,
            y2: 90.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 121.4,
            y: 39.2,
            x1: 117.1,
            y1: 71,
            x2: 155.2,
            y2: 43.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 181,
            y: 12.8,
            x1: 209.8,
            y1: 18.3,
            x2: 179.4,
            y2: 50.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 233.9,
            y: 235.4,
            x1: 226.3,
            y1: 211.3,
            x2: 275.5,
            y2: 199.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 255.5,
            y: 253.3,
            x1: 235.1,
            y1: 261.2,
            x2: 285.8,
            y2: 269.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 233.9,
            y: 235.4,
            x1: 256.1,
            y1: 173.6,
            x2: 275.5,
            y2: 199.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 310.5,
            y: 225.3,
            x1: 233.9,
            y1: 235.4,
            x2: 235.1,
            y2: 261.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 205.4,
            y: 272,
            x1: 275.5,
            y1: 199.6,
            x2: 253,
            y2: 314.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 153,
            y: 343.1,
            x1: 184.5,
            y1: 277.7,
            x2: 253,
            y2: 314.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 298.5,
            y: 334.4,
            x1: 285.8,
            y1: 269.2,
            x2: 389.3,
            y2: 287
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 360.9,
            y: 392,
            x1: 357.7,
            y1: 309.8,
            x2: 283.4,
            y2: 369.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 411.7,
            y: 350.5,
            x1: 320.2,
            y1: 385.5,
            x2: 357.7,
            y2: 309.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 310.5,
            y: 225.3,
            x1: 357.7,
            y1: 309.8,
            x2: 285.8,
            y2: 269.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 396,
            y: 219,
            x1: 347,
            y1: 191.4,
            x2: 380.1,
            y2: 267.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 421.9,
            y: 242.5,
            x1: 435.7,
            y1: 190.5,
            x2: 500.5,
            y2: 257.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 68,
            y: 153.2,
            x1: 70.1,
            y1: 92,
            x2: 129.5,
            y2: 90.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 91.5,
            y: 115.9,
            x1: 41.5,
            y1: 133.5,
            x2: 68,
            y2: 153.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 21,
            y: 155.6,
            x1: 56.9,
            y1: 155.5,
            x2: 40,
            y2: 168.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 41.5,
            y: 133.5,
            x1: 32.4,
            y1: 143.3,
            x2: 40,
            y2: 168.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 13.6,
            y: 166.7,
            x1: 21,
            y1: 155.6,
            x2: 27.4,
            y2: 179.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 193.2,
            y: 91.6,
            x1: 167.9,
            y1: 121,
            x2: 197.4,
            y2: 104.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 203.7,
            y: 59.2,
            x1: 181,
            y1: 56,
            x2: 179.4,
            y2: 50.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 208.6,
            y: 50.5,
            x1: 215,
            y1: 46.5,
            x2: 225.7,
            y2: 58.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 234.1,
            y: 17.6,
            x1: 203.7,
            y1: 59.2,
            x2: 209.8,
            y2: 18.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 142.6,
            y: 92.5,
            x1: 167.9,
            y1: 121,
            x2: 197.4,
            y2: 104.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 129.5,
            y: 90.3,
            x1: 117.1,
            y1: 71,
            x2: 121.4,
            y2: 39.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 142.6,
            y: 92.5,
            x1: 117.1,
            y1: 71,
            x2: 181,
            y2: 56
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 315.1,
            y: 267.6,
            x1: 380.1,
            y1: 267.4,
            x2: 310.5,
            y2: 225.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 295.1,
            y: 300.1,
            x1: 315.1,
            y1: 267.6,
            x2: 357.7,
            y2: 309.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 253,
            y: 314.3,
            x1: 295.1,
            y1: 300.1,
            x2: 280.5,
            y2: 340.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 231.2,
            y: 340.7,
            x1: 283.4,
            y1: 369.6,
            x2: 280.5,
            y2: 340.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 253,
            y: 314.3,
            x1: 231.2,
            y1: 340.7,
            x2: 283.4,
            y2: 369.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 421.2,
            y: 79.5,
            x1: 431.4,
            y1: 107.6,
            x2: 460.9,
            y2: 89.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 420.8,
            y: 53.7,
            x1: 457.9,
            y1: 62.7,
            x2: 431.4,
            y2: 107.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 483.2,
            y: 85.6,
            x1: 463,
            y1: 115.6,
            x2: 460.9,
            y2: 89.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 417.6,
            y: 120.9,
            x1: 389.4,
            y1: 99.7,
            x2: 413.8,
            y2: 136
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 346,
            y: 75,
            x1: 369.2,
            y1: 67.1,
            x2: 353.9,
            y2: 87.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 339.2,
            y: 29,
            x1: 392.8,
            y1: 8.9,
            x2: 371.1,
            y2: 42.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 290.8,
            y: 33.2,
            x1: 369.2,
            y1: 67.1,
            x2: 362.9,
            y2: 10.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 243.7,
            y: 120.8,
            x1: 278,
            y1: 115.9,
            x2: 266.9,
            y2: 97.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 227.1,
            y: 116.1,
            x1: 278,
            y1: 115.9,
            x2: 270.7,
            y2: 155.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 243.7,
            y: 120.8,
            x1: 256.1,
            y1: 173.6,
            x2: 214.2,
            y2: 148.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 197.4,
            y: 104.1,
            x1: 214.2,
            y1: 148.6,
            x2: 227.1,
            y2: 116.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 145.2,
            y: 169.8,
            x1: 137.9,
            y1: 155.4,
            x2: 167.9,
            y2: 121
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 198.3,
            y: 188.4,
            x1: 171,
            y1: 229.2,
            x2: 167.7,
            y2: 199.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 187,
            y: 188.6,
            x1: 193.9,
            y1: 245,
            x2: 171,
            y2: 229.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 145.2,
            y: 169.8,
            x1: 171,
            y1: 229.2,
            x2: 198.3,
            y2: 188.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 109.2,
            y: 209.5,
            x1: 134.9,
            y1: 188.5,
            x2: 131.9,
            y2: 180.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 73.5,
            y: 178.3,
            x1: 94.7,
            y1: 188.4,
            x2: 99.4,
            y2: 169.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 108.7,
            y: 132.4,
            x1: 115.9,
            y1: 135,
            x2: 111.2,
            y2: 155.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 102.1,
            y: 134.8,
            x1: 115.9,
            y1: 135,
            x2: 99.4,
            y2: 169.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 488.6,
            y: 147.1,
            x1: 436.8,
            y1: 155.8,
            x2: 447.5,
            y2: 129.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 463,
            y: 115.6,
            x1: 436.8,
            y1: 155.8,
            x2: 527.5,
            y2: 157.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 505.3,
            y: 92,
            x1: 463,
            y1: 115.6,
            x2: 541.7,
            y2: 141.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 488.6,
            y: 147.1,
            x1: 495.6,
            y1: 218,
            x2: 537.7,
            y2: 184.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 397.3,
            y: 170.8,
            x1: 418.8,
            y1: 183.4,
            x2: 436.8,
            y2: 155.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 413.8,
            y: 136,
            x1: 418.8,
            y1: 183.4,
            x2: 435.7,
            y2: 190.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 293.2,
            y: 89.1,
            x1: 315.6,
            y1: 67.1,
            x2: 306.5,
            y2: 54
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 321,
            y: 136.3,
            x1: 306.5,
            y1: 54,
            x2: 346,
            y2: 75
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 260.6,
            y: 33.1,
            x1: 315.6,
            y1: 67.1,
            x2: 266.9,
            y2: 97.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 397.6,
            y: 512.5,
            x1: 398.3,
            y1: 531.5,
            x2: 409.8,
            y2: 509
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 392.7,
            y: 486.5,
            x1: 421.3,
            y1: 496.5,
            x2: 409.8,
            y2: 509
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 397.6,
            y: 512.5,
            x1: 374.2,
            y1: 512.5,
            x2: 392.7,
            y2: 486.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 382.8,
            y: 436.6,
            x1: 356.5,
            y1: 425.2,
            x2: 350.6,
            y2: 448.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 396.7,
            y: 421.9,
            x1: 385.8,
            y1: 434.7,
            x2: 371.8,
            y2: 428.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 421.1,
            y: 435.3,
            x1: 401.7,
            y1: 456.2,
            x2: 396.7,
            y2: 421.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 385.8,
            y: 434.7,
            x1: 398.5,
            y1: 470.7,
            x2: 375.7,
            y2: 452.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 382.8,
            y: 436.6,
            x1: 375.9,
            y1: 462,
            x2: 401.7,
            y2: 456.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 166.1,
            y: 384.7,
            x1: 184.1,
            y1: 363.4,
            x2: 202.2,
            y2: 367.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 153,
            y: 343.1,
            x1: 202.2,
            y1: 367.3,
            x2: 166.1,
            y2: 384.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 184.1,
            y: 363.4,
            x1: 231.2,
            y1: 340.7,
            x2: 239.9,
            y2: 399.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 242.2,
            y: 372.1,
            x1: 226.5,
            y1: 373.5,
            x2: 243,
            y2: 351.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 266.7,
            y: 369.6,
            x1: 242.2,
            y1: 372.1,
            x2: 239.9,
            y2: 399.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 226.5,
            y: 373.5,
            x1: 202.2,
            y1: 367.3,
            x2: 231.2,
            y2: 340.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 239.9,
            y: 399.8,
            x1: 226.5,
            y1: 373.5,
            x2: 166.1,
            y2: 384.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 243,
            y: 351.8,
            x1: 253,
            y1: 314.3,
            x2: 284.2,
            y2: 355.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 266.7,
            y: 369.6,
            x1: 283.4,
            y1: 369.6,
            x2: 280.5,
            y2: 340.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 402.2,
            y: 330.7,
            x1: 388.8,
            y1: 367.4,
            x2: 439.3,
            y2: 347.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 444.8,
            y: 299,
            x1: 414.9,
            y1: 273.8,
            x2: 389.3,
            y2: 287
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 416.8,
            y: 326.9,
            x1: 414.9,
            y1: 273.8,
            x2: 389.3,
            y2: 287
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 402.2,
            y: 330.7,
            x1: 357.7,
            y1: 309.8,
            x2: 445.4,
            y2: 299
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 329.5,
            y: 349.7,
            x1: 322,
            y1: 364.5,
            x2: 342.9,
            y2: 371.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 324.8,
            y: 345,
            x1: 330.6,
            y1: 338.4,
            x2: 329.5,
            y2: 349.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 298.5,
            y: 334.4,
            x1: 330.6,
            y1: 338.4,
            x2: 329.5,
            y2: 349.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 324.8,
            y: 345,
            x1: 322,
            y1: 364.5,
            x2: 356.9,
            y2: 355.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 289.2,
            y: 344.1,
            x1: 284.2,
            y1: 355.7,
            x2: 322,
            y2: 364.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 298.5,
            y: 334.4,
            x1: 289.2,
            y1: 344.1,
            x2: 324.8,
            y2: 345
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 330.6,
            y: 338.4,
            x1: 335,
            y1: 316.8,
            x2: 347,
            y2: 327.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 358.5,
            y: 363.4,
            x1: 342.9,
            y1: 371.2,
            x2: 360.9,
            y2: 392
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 388.8,
            y: 367.4,
            x1: 360.9,
            y1: 392,
            x2: 388.9,
            y2: 381.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 376.6,
            y: 367.2,
            x1: 358.5,
            y1: 363.4,
            x2: 402.2,
            y2: 330.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 388.9,
            y: 381.8,
            x1: 376.6,
            y1: 367.2,
            x2: 388.8,
            y2: 367.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 370.8,
            y: 395,
            x1: 400.8,
            y1: 391.8,
            x2: 396.7,
            y2: 421.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 435.2,
            y: 381.2,
            x1: 413.9,
            y1: 389.9,
            x2: 435.1,
            y2: 393.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 442.6,
            y: 376.7,
            x1: 388.8,
            y1: 367.4,
            x2: 413.9,
            y2: 389.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 356.9,
            y: 355.1,
            x1: 347,
            y1: 327.1,
            x2: 388.8,
            y2: 367.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 402.2,
            y: 330.7,
            x1: 356.9,
            y1: 355.1,
            x2: 371,
            y2: 305.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 380.1,
            y: 267.4,
            x1: 368.4,
            y1: 299.3,
            x2: 343.4,
            y2: 289.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 389.3,
            y: 287,
            x1: 368.4,
            y1: 299.3,
            x2: 371,
            y2: 305.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 380.1,
            y: 267.4,
            x1: 410.6,
            y1: 256.4,
            x2: 414.9,
            y2: 273.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 396,
            y: 219,
            x1: 410.6,
            y1: 256.4,
            x2: 421.9,
            y2: 242.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 464.4,
            y: 225,
            x1: 421.9,
            y1: 242.5,
            x2: 445.9,
            y2: 276.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 471.1,
            y: 305.3,
            x1: 445.9,
            y1: 276.4,
            x2: 500.5,
            y2: 257.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 516.9,
            y: 291.7,
            x1: 512.1,
            y1: 318.1,
            x2: 573.8,
            y2: 330.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 541,
            y: 260.5,
            x1: 536.1,
            y1: 305.2,
            x2: 577,
            y2: 308.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 596.7,
            y: 236.8,
            x1: 579,
            y1: 252.8,
            x2: 596.1,
            y2: 252.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 591.1,
            y: 230.3,
            x1: 596.1,
            y1: 252.4,
            x2: 573.5,
            y2: 237.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 548.7,
            y: 220.2,
            x1: 536.8,
            y1: 226.7,
            x2: 527.5,
            y2: 216.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 539,
            y: 208.6,
            x1: 536.8,
            y1: 226.7,
            x2: 549.4,
            y2: 202.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 519,
            y: 235.9,
            x1: 508.8,
            y1: 245.2,
            x2: 524.3,
            y2: 241.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 497.2,
            y: 243.3,
            x1: 508.8,
            y1: 245.2,
            x2: 500.5,
            y2: 257.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 495.6,
            y: 218,
            x1: 497.2,
            y1: 243.3,
            x2: 519,
            y2: 235.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 507.1,
            y: 206.6,
            x1: 527.5,
            y1: 216.7,
            x2: 517.7,
            y2: 203
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 539,
            y: 208.6,
            x1: 517.7,
            y1: 203,
            x2: 519,
            y2: 235.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 576.4,
            y: 188.5,
            x1: 548.7,
            y1: 220.2,
            x2: 596.7,
            y2: 236.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 553,
            y: 170.9,
            x1: 549.4,
            y1: 202.5,
            x2: 604.7,
            y2: 194.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 72.5,
            y: 326.5,
            x1: 64.9,
            y1: 320.4,
            x2: 89.4,
            y2: 315.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 99.5,
            y: 332,
            x1: 64.9,
            y1: 320.4,
            x2: 72.5,
            y2: 326.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 110.5,
            y: 330.5,
            x1: 72.5,
            y1: 326.5,
            x2: 77.3,
            y2: 303.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 89.4,
            y: 315.9,
            x1: 109.9,
            y1: 286.6,
            x2: 99.5,
            y2: 332
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 58.5,
            y: 301.9,
            x1: 64.9,
            y1: 320.4,
            x2: 35.6,
            y2: 328
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 33,
            y: 186.8,
            x1: 42.7,
            y1: 201.4,
            x2: 54.7,
            y2: 201.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 68,
            y: 153.4,
            x1: 56.9,
            y1: 155.5,
            x2: 73.5,
            y2: 178.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 176.8,
            y: 309.5,
            x1: 171.1,
            y1: 307.3,
            x2: 159.2,
            y2: 316.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 188.4,
            y: 308.7,
            x1: 176.8,
            y1: 309.5,
            x2: 180,
            y2: 329.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 171.1,
            y: 307.3,
            x1: 188.4,
            y1: 308.7,
            x2: 180,
            y2: 329.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 173.8,
            y: 343.7,
            x1: 153,
            y1: 343.1,
            x2: 184.1,
            y2: 363.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 180,
            y: 329.6,
            x1: 173.8,
            y1: 343.7,
            x2: 171.1,
            y2: 307.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 197.6,
            y: 350.2,
            x1: 184.1,
            y1: 363.4,
            x2: 202.2,
            y2: 367.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 180,
            y: 329.6,
            x1: 197.6,
            y1: 350.2,
            x2: 231.2,
            y2: 340.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 188.4,
            y: 308.7,
            x1: 184.5,
            y1: 277.7,
            x2: 202.7,
            y2: 289.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 159.2,
            y: 316.6,
            x1: 110.2,
            y1: 286.6,
            x2: 151.2,
            y2: 262.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 125.7,
            y: 283.7,
            x1: 184.5,
            y1: 277.7,
            x2: 171.1,
            y2: 307.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 131,
            y: 237,
            x1: 171,
            y1: 229.2,
            x2: 151.2,
            y2: 262.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 111.4,
            y: 241.3,
            x1: 134.9,
            y1: 188.5,
            x2: 167.7,
            y2: 199.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 198.3,
            y: 188.4,
            x1: 187.3,
            y1: 188.5,
            x2: 196.1,
            y2: 193.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 226.3,
            y: 211.3,
            x1: 221.6,
            y1: 206.4,
            x2: 224.3,
            y2: 192.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 251.6,
            y: 204.7,
            x1: 224.3,
            y1: 192.9,
            x2: 221.6,
            y2: 206.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 184.4,
            y: 71.2,
            x1: 172.4,
            y1: 80.9,
            x2: 193.2,
            y2: 91.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 181,
            y: 56,
            x1: 172.4,
            y1: 80.9,
            x2: 203.7,
            y2: 59.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 184.4,
            y: 71.2,
            x1: 176.1,
            y1: 93.2,
            x2: 225.7,
            y2: 58.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 164.7,
            y: 108.5,
            x1: 176.1,
            y1: 93.2,
            x2: 172.4,
            y2: 80.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 142.6,
            y: 92.5,
            x1: 172.4,
            y1: 80.9,
            x2: 197.4,
            y2: 104.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 129.5,
            y: 90.3,
            x1: 164.7,
            y1: 108.5,
            x2: 193.2,
            y2: 91.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 316.8,
            y: 304.9,
            x1: 335,
            y1: 316.8,
            x2: 343.4,
            y2: 289.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 306.7,
            y: 286.4,
            x1: 315.1,
            y1: 267.6,
            x2: 316.8,
            y2: 304.9
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 233.6,
            y: 314.4,
            x1: 228.9,
            y1: 299.2,
            x2: 253,
            y2: 314.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 203.9,
            y: 312.5,
            x1: 202.7,
            y1: 289.5,
            x2: 228.9,
            y2: 299.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 228.9,
            y: 299.2,
            x1: 235.1,
            y1: 261.2,
            x2: 295.1,
            y2: 300.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 205.4,
            y: 272,
            x1: 285.8,
            y1: 269.2,
            x2: 253,
            y2: 314.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 565.1,
            y: 376,
            x1: 559.6,
            y1: 386.7,
            x2: 554.2,
            y2: 366.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 553.6,
            y: 389.6,
            x1: 565.1,
            y1: 376,
            x2: 559.6,
            y2: 386.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 525,
            y: 418.9,
            x1: 516.5,
            y1: 430.5,
            x2: 540.2,
            y2: 437.1
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 583.2,
            y: 355.8,
            x1: 558.1,
            y1: 358.4,
            x2: 577.1,
            y2: 350.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 607.3,
            y: 354.6,
            x1: 585.3,
            y1: 357.8,
            x2: 590.2,
            y2: 382.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 558.1,
            y: 358.4,
            x1: 572.8,
            y1: 353.4,
            x2: 565.1,
            y2: 376
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 469,
            y: 61.7,
            x1: 457.9,
            y1: 62.7,
            x2: 469.3,
            y2: 52.5
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 420.8,
            y: 53.7,
            x1: 425.4,
            y1: 47.9,
            x2: 404.7,
            y2: 45.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 414.5,
            y: 30,
            x1: 404.7,
            y1: 45.4,
            x2: 409.3,
            y2: 25.4
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 309.5,
            y: 24.9,
            x1: 324.7,
            y1: 31,
            x2: 323.7,
            y2: 38.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 288.2,
            y: 22.4,
            x1: 309.5,
            y1: 24.9,
            x2: 299.3,
            y2: 2.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 269.2,
            y: 21.6,
            x1: 278.2,
            y1: 18.4,
            x2: 267,
            y2: 7.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 236.7,
            y: 101.6,
            x1: 251.2,
            y1: 98.6,
            x2: 239.3,
            y2: 104.8
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 221.6,
            y: 79.5,
            x1: 223,
            y1: 77.6,
            x2: 238.9,
            y2: 79.7
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 357.4,
            y: 101.3,
            x1: 356.5,
            y1: 111.5,
            x2: 370.4,
            y2: 114.3
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 390.4,
            y: 84.7,
            x1: 388.3,
            y1: 80.2,
            x2: 375.5,
            y2: 79.2
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 385,
            y: 60.7,
            x1: 388.6,
            y1: 65.3,
            x2: 405.5,
            y2: 56.6
        }, {
            fillColor: "transparent",
            strokeColor: "white",
            lineWidth: .35,
            x: 429.2,
            y: 89.9,
            x1: 407,
            y1: 88.1,
            x2: 421.2,
            y2: 79.5
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 453.8,
            y: 565.9,
            x1: 442.4,
            y1: 578.3,
            x2: 436.1,
            y2: 572.4
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 440.9,
            y: 600.4,
            x1: 453.8,
            y1: 565.9,
            x2: 436.1,
            y2: 572.4
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 423.3,
            y: 568.9,
            x1: 426.9,
            y1: 554.3,
            x2: 453.8,
            y2: 565.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 436.1,
            y: 572.4,
            x1: 442.4,
            y1: 578.3,
            x2: 423.3,
            y2: 568.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 446.2,
            y: 559.9,
            x1: 436.1,
            y1: 572.4,
            x2: 442.4,
            y2: 578.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 451.8,
            y: 552.5,
            x1: 453.8,
            y1: 565.9,
            x2: 446.2,
            y2: 559.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 445,
            y: 548,
            x1: 452.7,
            y1: 532.9,
            x2: 451.8,
            y2: 552.5
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 432.5,
            y: 558.7,
            x1: 451.8,
            y1: 552.5,
            x2: 453.8,
            y2: 565.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 445,
            y: 548,
            x1: 453.8,
            y1: 565.9,
            x2: 442.4,
            y2: 578.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 426.9,
            y: 554.3,
            x1: 445,
            y1: 548,
            x2: 437,
            y2: 525.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 452.7,
            y: 532.9,
            x1: 442.5,
            y1: 517.9,
            x2: 437,
            y2: 525.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 425.4,
            y: 524.5,
            x1: 437,
            y1: 525.3,
            x2: 445,
            y2: 548
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 418.3,
            y: 533.9,
            x1: 409.8,
            y1: 509,
            x2: 380.5,
            y2: 523.9
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 398.3,
            y: 531.5,
            x1: 409.8,
            y1: 509,
            x2: 416.3,
            y2: 543.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 420.1,
            y: 500.5,
            x1: 421.3,
            y1: 496.5,
            x2: 442,
            y2: 492.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 433,
            y: 507.4,
            x1: 426.9,
            y1: 516.4,
            x2: 442.5,
            y2: 517.9
        }, {
            fillColor: "rgba(255,255,255,0.06)",
            strokeColor: "transparent",
            x: 437,
            y: 525.3,
            x1: 433,
            y1: 507.4,
            x2: 398.3,
            y2: 531.5
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 460.1,
            y: 481,
            x1: 475.5,
            y1: 474.1,
            x2: 428.4,
            y2: 456.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 418.3,
            y: 470.7,
            x1: 442,
            y1: 492.9,
            x2: 433,
            y2: 507.4
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 460.1,
            y: 481,
            x1: 442,
            y1: 492.9,
            x2: 447,
            y2: 475.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 475.5,
            y: 474.1,
            x1: 491.3,
            y1: 436,
            x2: 516.5,
            y2: 430.5
        }, {
            fillColor: "rgba(255,255,255,0.06)",
            strokeColor: "transparent",
            x: 425.4,
            y: 524.5,
            x1: 426.9,
            y1: 516.4,
            x2: 409.8,
            y2: 509
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 426.9,
            y: 554.3,
            x1: 416.3,
            y1: 543.3,
            x2: 418.3,
            y2: 533.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 437,
            y: 525.3,
            x1: 418.3,
            y1: 533.9,
            x2: 432.5,
            y2: 558.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 446.2,
            y: 559.9,
            x1: 436.1,
            y1: 572.4,
            x2: 432.5,
            y2: 558.7
        }, {
            fillColor: "rgba(255,255,255,0.8)",
            strokeColor: "transparent",
            x: 442.4,
            y: 578.3,
            x1: 440.9,
            y1: 600.4,
            x2: 453.8,
            y2: 565.9
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 425.4,
            y: 524.5,
            x1: 418.3,
            y1: 533.9,
            x2: 445,
            y2: 548
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 452.7,
            y: 532.9,
            x1: 416.3,
            y1: 543.3,
            x2: 426.9,
            y2: 554.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 423.5,
            y: 568.1,
            x1: 432.5,
            y1: 558.7,
            x2: 442.4,
            y2: 578.3
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 392.7,
            y: 486.5,
            x1: 404.7,
            y1: 481.9,
            x2: 398.5,
            y2: 470.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 373.7,
            y: 492.1,
            x1: 374.2,
            y1: 512.5,
            x2: 392.7,
            y2: 486.5
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 375.9,
            y: 462,
            x1: 357.1,
            y1: 454.4,
            x2: 375.7,
            y2: 452.2
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 401.7,
            y: 456.2,
            x1: 412.4,
            y1: 448.5,
            x2: 428.4,
            y2: 456.7
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 398.5,
            y: 470.7,
            x1: 418.3,
            y1: 470.7,
            x2: 401.7,
            y2: 456.2
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 375.9,
            y: 462,
            x1: 392.7,
            y1: 486.5,
            x2: 398.5,
            y2: 470.7
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 451.2,
            y: 428.3,
            x1: 444.7,
            y1: 413.5,
            x2: 461.1,
            y2: 394.9
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 421.1,
            y: 435.3,
            x1: 436.8,
            y1: 449.2,
            x2: 451.2,
            y2: 428.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 428.4,
            y: 456.7,
            x1: 418.3,
            y1: 470.7,
            x2: 447,
            y2: 475.5
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 404.7,
            y: 481.9,
            x1: 421.3,
            y1: 496.5,
            x2: 420.1,
            y2: 500.5
        }, {
            fillColor: "rgba(255,255,255,0.06)",
            strokeColor: "transparent",
            x: 418.3,
            y: 470.7,
            x1: 404.7,
            y1: 481.9,
            x2: 447,
            y2: 475.5
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 420.1,
            y: 500.5,
            x1: 426.9,
            y1: 516.4,
            x2: 433,
            y2: 507.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 447,
            y: 475.5,
            x1: 421.3,
            y1: 496.5,
            x2: 418.3,
            y2: 470.7
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 428.4,
            y: 456.7,
            x1: 436.8,
            y1: 449.2,
            x2: 442.9,
            y2: 450.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 476.9,
            y: 426.4,
            x1: 467.5,
            y1: 430.6,
            x2: 491.3,
            y2: 436
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 547.2,
            y: 422.3,
            x1: 571.6,
            y1: 407.1,
            x2: 552.1,
            y2: 404.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 590.2,
            y: 382.5,
            x1: 583.2,
            y1: 355.8,
            x2: 572.8,
            y2: 353.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 529.6,
            y: 383.2,
            x1: 552.1,
            y1: 404.3,
            x2: 535.3,
            y2: 367.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 523.8,
            y: 398.3,
            x1: 514.8,
            y1: 385.2,
            x2: 529.6,
            y2: 383.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 470.8,
            y: 375.3,
            x1: 482.3,
            y1: 345.2,
            x2: 480.3,
            y2: 368.6
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 449.3,
            y: 397,
            x1: 435.3,
            y1: 393.9,
            x2: 453.9,
            y2: 377.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 470.8,
            y: 375.3,
            x1: 461.1,
            y1: 394.9,
            x2: 453.9,
            y2: 377.5
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 461.1,
            y: 394.9,
            x1: 476.9,
            y1: 426.4,
            x2: 451.2,
            y2: 428.3
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 460.1,
            y: 481,
            x1: 491.3,
            y1: 436,
            x2: 475.5,
            y2: 474.1
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 442.9,
            y: 450.4,
            x1: 451.2,
            y1: 428.3,
            x2: 460.1,
            y2: 481
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 467.5,
            y: 430.6,
            x1: 442.9,
            y1: 450.4,
            x2: 475.5,
            y2: 474.1
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 411.7,
            y: 350.5,
            x1: 416.8,
            y1: 326.9,
            x2: 402.2,
            y2: 330.7
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 448.5,
            y: 342,
            x1: 439.3,
            y1: 347.2,
            x2: 446.2,
            y2: 335.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 483.2,
            y: 317.9,
            x1: 478.1,
            y1: 337.6,
            x2: 512.1,
            y2: 318.1
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 536.1,
            y: 305.2,
            x1: 534.7,
            y1: 338.3,
            x2: 559.1,
            y2: 343.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 444.8,
            y: 299,
            x1: 445.9,
            y1: 276.4,
            x2: 428.1,
            y2: 275.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 471.1,
            y: 305.3,
            x1: 483.2,
            y1: 317.9,
            x2: 482.3,
            y2: 345.2
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 500.5,
            y: 257.4,
            x1: 516.9,
            y1: 291.7,
            x2: 541,
            y2: 260.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 596.1,
            y: 252.4,
            x1: 612,
            y1: 208.5,
            x2: 618.5,
            y2: 246.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 604.7,
            y: 194.2,
            x1: 576.4,
            y1: 188.5,
            x2: 586.2,
            y2: 160.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 549.4,
            y: 202.5,
            x1: 537.7,
            y1: 184.4,
            x2: 539,
            y2: 208.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 541.7,
            y: 260.5,
            x1: 579,
            y1: 252.8,
            x2: 571.2,
            y2: 266.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 603.5,
            y: 273.8,
            x1: 602,
            y1: 312.4,
            x2: 580.1,
            y2: 314.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 597.9,
            y: 297.5,
            x1: 577,
            y1: 308.6,
            x2: 580.1,
            y2: 314.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 539.9,
            y: 344.4,
            x1: 534.7,
            y1: 338.3,
            x2: 573.8,
            y2: 330.7
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 559.1,
            y: 343.4,
            x1: 580.1,
            y1: 314.7,
            x2: 577,
            y2: 308.6
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 583.2,
            y: 355.8,
            x1: 597.9,
            y1: 297.5,
            x2: 573.8,
            y2: 330.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 360.9,
            y: 392,
            x1: 370.8,
            y1: 395,
            x2: 371.8,
            y2: 428.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 388.9,
            y: 381.8,
            x1: 411.7,
            y1: 350.5,
            x2: 400.8,
            y2: 391.8
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 388.8,
            y: 367.4,
            x1: 388.9,
            y1: 381.8,
            x2: 413.9,
            y2: 389.9
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 435.3,
            y: 393.9,
            x1: 421.1,
            y1: 435.3,
            x2: 413.9,
            y2: 389.9
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 435.2,
            y: 381.2,
            x1: 411.7,
            y1: 350.5,
            x2: 453.9,
            y2: 377.5
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 442.6,
            y: 376.7,
            x1: 435.3,
            y1: 393.9,
            x2: 449.3,
            y2: 397
        }, {
            fillColor: "rgba(255,255,255,0.01)",
            strokeColor: "transparent",
            x: 448.5,
            y: 342,
            x1: 470.8,
            y1: 375.3,
            x2: 442.6,
            y2: 376.7
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 416.8,
            y: 326.9,
            x1: 439.3,
            y1: 347.2,
            x2: 442.6,
            y2: 376.7
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 389.3,
            y: 287,
            x1: 357.7,
            y1: 309.8,
            x2: 380.1,
            y2: 267.4
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 414.9,
            y: 273.8,
            x1: 428.1,
            y1: 275.9,
            x2: 421.9,
            y2: 242.5
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 410.6,
            y: 256.4,
            x1: 413.4,
            y1: 243.6,
            x2: 421.9,
            y2: 242.5
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 411.5,
            y: 220.4,
            x1: 396,
            y1: 219,
            x2: 393.5,
            y2: 224.9
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 464.4,
            y: 225,
            x1: 471.8,
            y1: 215.4,
            x2: 495.6,
            y2: 218
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 435.7,
            y: 190.5,
            x1: 418.3,
            y1: 191.8,
            x2: 418.8,
            y2: 183.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 527.5,
            y: 157.4,
            x1: 553,
            y1: 170.9,
            x2: 561.8,
            y2: 161.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 557.8,
            y: 123.1,
            x1: 568.7,
            y1: 131.8,
            x2: 541.7,
            y2: 141.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 545.4,
            y: 109.5,
            x1: 557.8,
            y1: 123.1,
            x2: 561.8,
            y2: 161.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 568.7,
            y: 131.8,
            x1: 580.1,
            y1: 137.5,
            x2: 562.6,
            y2: 160.9
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 316.7,
            y: 394.7,
            x1: 320.2,
            y1: 385.5,
            x2: 338.4,
            y2: 393.8
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 239.9,
            y: 399.8,
            x1: 283.4,
            y1: 369.6,
            x2: 280.5,
            y2: 340.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 316.7,
            y: 394.7,
            x1: 283.4,
            y1: 369.6,
            x2: 298.5,
            y2: 334.4
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 320.2,
            y: 385.5,
            x1: 283.4,
            y1: 369.6,
            x2: 298.5,
            y2: 334.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 338.4,
            y: 393.8,
            x1: 339.2,
            y1: 430.6,
            x2: 370.8,
            y2: 395
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 360.9,
            y: 392,
            x1: 357.1,
            y1: 454.4,
            x2: 371.8,
            y2: 428.4
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 375.7,
            y: 452.2,
            x1: 421.1,
            y1: 435.3,
            x2: 398.5,
            y2: 470.7
        }, {
            fillColor: "rgba(255,255,255,0.01)",
            strokeColor: "transparent",
            x: 371.8,
            y: 428.4,
            x1: 400.8,
            y1: 391.8,
            x2: 435.3,
            y2: 393.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 153,
            y: 343.1,
            x1: 110.2,
            y1: 330.2,
            x2: 109.9,
            y2: 286.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 102.2,
            y: 275.9,
            x1: 110.2,
            y1: 330.2,
            x2: 125.7,
            y2: 283.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 105.2,
            y: 262.6,
            x1: 102.2,
            y1: 275.9,
            x2: 109.9,
            y2: 286.6
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 151.2,
            y: 262.5,
            x1: 193.9,
            y1: 245,
            x2: 205.4,
            y2: 272
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 109.2,
            y: 209.5,
            x1: 71.9,
            y1: 213.6,
            x2: 94.2,
            y2: 237.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 62.6,
            y: 217.7,
            x1: 46.7,
            y1: 233.4,
            x2: 33.9,
            y2: 227.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 31.2,
            y: 256.8,
            x1: 55.4,
            y1: 261.7,
            x2: 27.2,
            y2: 264.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 59,
            y: 280.2,
            x1: 58.5,
            y1: 301.9,
            x2: 77.3,
            y2: 303.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 102.2,
            y: 275.9,
            x1: 77.3,
            y1: 303.3,
            x2: 109.9,
            y2: 286.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 4.2,
            y: 205.3,
            x1: 27.4,
            y1: 179.5,
            x2: 13.6,
            y2: 166.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 8.7,
            y: 246.4,
            x1: 2.9,
            y1: 237.6,
            x2: 26.2,
            y2: 229.1
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 1.3,
            y: 271.2,
            x1: 31.2,
            y1: 256.8,
            x2: 35.6,
            y2: 328
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 27.2,
            y: 264.3,
            x1: 35.6,
            y1: 328,
            x2: 77.3,
            y2: 303.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 260.6,
            y: 33.1,
            x1: 290.8,
            y1: 33.2,
            x2: 267,
            y2: 7.8
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 234.1,
            y: 17.6,
            x1: 290.8,
            y1: 33.2,
            x2: 299.3,
            y2: 2.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 209.8,
            y: 18.3,
            x1: 237.7,
            y1: .8,
            x2: 260.6,
            y2: 33.1
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 234.1,
            y: 17.6,
            x1: 237.7,
            y1: .8,
            x2: 267,
            y2: 7.8
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 339.2,
            y: 29,
            x1: 324.7,
            y1: 31,
            x2: 323.7,
            y2: 38.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 362.9,
            y: 10.9,
            x1: 392.8,
            y1: 25.7,
            x2: 392.8,
            y2: 8.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 433.8,
            y: 27.3,
            x1: 414.5,
            y1: 30,
            x2: 409.3,
            y2: 25.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 392.8,
            y: 25.7,
            x1: 433.8,
            y1: 27.3,
            x2: 420.8,
            y2: 53.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 500.4,
            y: 49,
            x1: 481.7,
            y1: 50.3,
            x2: 484.2,
            y2: 59.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 516.9,
            y: 85.6,
            x1: 544,
            y1: 92,
            x2: 557.8,
            y2: 123.1
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 505.3,
            y: 92,
            x1: 545.4,
            y1: 109.5,
            x2: 516.9,
            y2: 85.6
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 506.2,
            y: 82.8,
            x1: 483.2,
            y1: 85.6,
            x2: 543.5,
            y2: 100.7
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 321,
            y: 136.3,
            x1: 349,
            y1: 138.8,
            x2: 314.6,
            y2: 167.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 280.5,
            y: 340.9,
            x1: 253,
            y1: 314.3,
            x2: 298.5,
            y2: 334.4
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 231.2,
            y: 340.7,
            x1: 202.2,
            y1: 367.3,
            x2: 203.9,
            y2: 312.5
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 205.4,
            y: 272,
            x1: 184.5,
            y1: 277.7,
            x2: 193.9,
            y2: 245
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 153,
            y: 343.1,
            x1: 231.2,
            y1: 340.7,
            x2: 203.9,
            y2: 312.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 109.9,
            y: 286.6,
            x1: 125.7,
            y1: 283.7,
            x2: 153,
            y2: 343.1
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 151.2,
            y: 262.5,
            x1: 109.9,
            y1: 286.6,
            x2: 105.2,
            y2: 262.6
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 109.2,
            y: 209.5,
            x1: 111.4,
            y1: 241.3,
            x2: 131,
            y2: 237
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 59,
            y: 280.2,
            x1: 55.4,
            y1: 261.7,
            x2: 102.2,
            y2: 275.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 102.1,
            y: 134.8,
            x1: 91.5,
            y1: 115.9,
            x2: 129.5,
            y2: 90.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 121.4,
            y: 39.2,
            x1: 117.1,
            y1: 71,
            x2: 155.2,
            y2: 43.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 181,
            y: 12.8,
            x1: 209.8,
            y1: 18.3,
            x2: 179.4,
            y2: 50.1
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 233.9,
            y: 235.4,
            x1: 226.3,
            y1: 211.3,
            x2: 275.5,
            y2: 199.6
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 255.5,
            y: 253.3,
            x1: 235.1,
            y1: 261.2,
            x2: 285.8,
            y2: 269.2
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 233.9,
            y: 235.4,
            x1: 256.1,
            y1: 173.6,
            x2: 275.5,
            y2: 199.6
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 310.5,
            y: 225.3,
            x1: 233.9,
            y1: 235.4,
            x2: 235.1,
            y2: 261.2
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 153,
            y: 343.1,
            x1: 184.5,
            y1: 277.7,
            x2: 253,
            y2: 314.3
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 298.5,
            y: 334.4,
            x1: 285.8,
            y1: 269.2,
            x2: 389.3,
            y2: 287
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 360.9,
            y: 392,
            x1: 357.7,
            y1: 309.8,
            x2: 283.4,
            y2: 369.6
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 411.7,
            y: 350.5,
            x1: 320.2,
            y1: 385.5,
            x2: 357.7,
            y2: 309.8
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 310.5,
            y: 225.3,
            x1: 357.7,
            y1: 309.8,
            x2: 285.8,
            y2: 269.2
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 421.9,
            y: 242.5,
            x1: 435.7,
            y1: 190.5,
            x2: 500.5,
            y2: 257.4
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 68,
            y: 153.2,
            x1: 70.1,
            y1: 92,
            x2: 129.5,
            y2: 90.3
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 91.5,
            y: 115.9,
            x1: 41.5,
            y1: 133.5,
            x2: 68,
            y2: 153.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 21,
            y: 155.6,
            x1: 56.9,
            y1: 155.5,
            x2: 40,
            y2: 168.5
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 41.5,
            y: 133.5,
            x1: 32.4,
            y1: 143.3,
            x2: 40,
            y2: 168.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 13.6,
            y: 166.7,
            x1: 21,
            y1: 155.6,
            x2: 27.4,
            y2: 179.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 193.2,
            y: 91.6,
            x1: 167.9,
            y1: 121,
            x2: 197.4,
            y2: 104.1
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 203.7,
            y: 59.2,
            x1: 181,
            y1: 56,
            x2: 179.4,
            y2: 50.1
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 208.6,
            y: 50.5,
            x1: 215,
            y1: 46.5,
            x2: 225.7,
            y2: 58.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 234.1,
            y: 17.6,
            x1: 203.7,
            y1: 59.2,
            x2: 209.8,
            y2: 18.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 142.6,
            y: 92.5,
            x1: 167.9,
            y1: 121,
            x2: 197.4,
            y2: 104.1
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 129.5,
            y: 90.3,
            x1: 117.1,
            y1: 71,
            x2: 121.4,
            y2: 39.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 142.6,
            y: 92.5,
            x1: 117.1,
            y1: 71,
            x2: 181,
            y2: 56
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 295.1,
            y: 300.1,
            x1: 315.1,
            y1: 267.6,
            x2: 357.7,
            y2: 309.8
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 253,
            y: 314.3,
            x1: 295.1,
            y1: 300.1,
            x2: 280.5,
            y2: 340.9
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 231.2,
            y: 340.7,
            x1: 283.4,
            y1: 369.6,
            x2: 280.5,
            y2: 340.9
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 253,
            y: 314.3,
            x1: 231.2,
            y1: 340.7,
            x2: 283.4,
            y2: 369.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 421.2,
            y: 79.5,
            x1: 431.4,
            y1: 107.6,
            x2: 460.9,
            y2: 89.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 420.8,
            y: 53.7,
            x1: 457.9,
            y1: 62.7,
            x2: 431.4,
            y2: 107.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 483.2,
            y: 85.6,
            x1: 463,
            y1: 115.6,
            x2: 460.9,
            y2: 89.3
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 417.6,
            y: 120.9,
            x1: 389.4,
            y1: 99.7,
            x2: 413.8,
            y2: 136
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 346,
            y: 75,
            x1: 369.2,
            y1: 67.1,
            x2: 353.9,
            y2: 87.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 339.2,
            y: 29,
            x1: 392.8,
            y1: 8.9,
            x2: 371.1,
            y2: 42.1
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 290.8,
            y: 33.2,
            x1: 369.2,
            y1: 67.1,
            x2: 362.9,
            y2: 10.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 243.7,
            y: 120.8,
            x1: 278,
            y1: 115.9,
            x2: 266.9,
            y2: 97.6
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 227.1,
            y: 116.1,
            x1: 278,
            y1: 115.9,
            x2: 270.7,
            y2: 155.2
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 243.7,
            y: 120.8,
            x1: 256.1,
            y1: 173.6,
            x2: 214.2,
            y2: 148.6
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 197.4,
            y: 104.1,
            x1: 214.2,
            y1: 148.6,
            x2: 227.1,
            y2: 116.1
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 145.2,
            y: 169.8,
            x1: 137.9,
            y1: 155.4,
            x2: 167.9,
            y2: 121
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 198.3,
            y: 188.4,
            x1: 171,
            y1: 229.2,
            x2: 167.7,
            y2: 199.2
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 187,
            y: 188.6,
            x1: 193.9,
            y1: 245,
            x2: 171,
            y2: 229.2
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 109.2,
            y: 209.5,
            x1: 134.9,
            y1: 188.5,
            x2: 131.9,
            y2: 180.2
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 73.5,
            y: 178.3,
            x1: 94.7,
            y1: 188.4,
            x2: 99.4,
            y2: 169.4
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 108.7,
            y: 132.4,
            x1: 115.9,
            y1: 135,
            x2: 111.2,
            y2: 155.9
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 102.1,
            y: 134.8,
            x1: 115.9,
            y1: 135,
            x2: 99.4,
            y2: 169.4
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 397.3,
            y: 170.8,
            x1: 418.8,
            y1: 183.4,
            x2: 436.8,
            y2: 155.8
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 413.8,
            y: 136,
            x1: 418.8,
            y1: 183.4,
            x2: 435.7,
            y2: 190.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 293.2,
            y: 89.1,
            x1: 315.6,
            y1: 67.1,
            x2: 306.5,
            y2: 54
        }, {
            fillColor: "rgba(255,255,255,0.06)",
            strokeColor: "transparent",
            x: 397.6,
            y: 512.5,
            x1: 398.3,
            y1: 531.5,
            x2: 409.8,
            y2: 509
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 392.7,
            y: 486.5,
            x1: 421.3,
            y1: 496.5,
            x2: 409.8,
            y2: 509
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 397.6,
            y: 512.5,
            x1: 374.2,
            y1: 512.5,
            x2: 392.7,
            y2: 486.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 382.8,
            y: 436.6,
            x1: 356.5,
            y1: 425.2,
            x2: 350.6,
            y2: 448.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 396.7,
            y: 421.9,
            x1: 385.8,
            y1: 434.7,
            x2: 371.8,
            y2: 428.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 421.1,
            y: 435.3,
            x1: 401.7,
            y1: 456.2,
            x2: 396.7,
            y2: 421.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 385.8,
            y: 434.7,
            x1: 398.5,
            y1: 470.7,
            x2: 375.7,
            y2: 452.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 382.8,
            y: 436.6,
            x1: 375.9,
            y1: 462,
            x2: 401.7,
            y2: 456.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 166.1,
            y: 384.7,
            x1: 184.1,
            y1: 363.4,
            x2: 202.2,
            y2: 367.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 153,
            y: 343.1,
            x1: 202.2,
            y1: 367.3,
            x2: 166.1,
            y2: 384.7
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 184.1,
            y: 363.4,
            x1: 231.2,
            y1: 340.7,
            x2: 239.9,
            y2: 399.8
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 242.2,
            y: 372.1,
            x1: 226.5,
            y1: 373.5,
            x2: 243,
            y2: 351.8
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 266.7,
            y: 369.6,
            x1: 242.2,
            y1: 372.1,
            x2: 239.9,
            y2: 399.8
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 226.5,
            y: 373.5,
            x1: 202.2,
            y1: 367.3,
            x2: 231.2,
            y2: 340.7
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 239.9,
            y: 399.8,
            x1: 226.5,
            y1: 373.5,
            x2: 166.1,
            y2: 384.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 243,
            y: 351.8,
            x1: 253,
            y1: 314.3,
            x2: 284.2,
            y2: 355.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 266.7,
            y: 369.6,
            x1: 283.4,
            y1: 369.6,
            x2: 280.5,
            y2: 340.9
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 402.2,
            y: 330.7,
            x1: 388.8,
            y1: 367.4,
            x2: 439.3,
            y2: 347.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 444.8,
            y: 299,
            x1: 414.9,
            y1: 273.8,
            x2: 389.3,
            y2: 287
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 416.8,
            y: 326.9,
            x1: 414.9,
            y1: 273.8,
            x2: 389.3,
            y2: 287
        }, {
            fillColor: "rgba(255,255,255,0.01)",
            strokeColor: "transparent",
            x: 402.2,
            y: 330.7,
            x1: 357.7,
            y1: 309.8,
            x2: 445.4,
            y2: 299
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 329.5,
            y: 349.7,
            x1: 322,
            y1: 364.5,
            x2: 342.9,
            y2: 371.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 324.8,
            y: 345,
            x1: 330.6,
            y1: 338.4,
            x2: 329.5,
            y2: 349.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 298.5,
            y: 334.4,
            x1: 330.6,
            y1: 338.4,
            x2: 329.5,
            y2: 349.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 324.8,
            y: 345,
            x1: 322,
            y1: 364.5,
            x2: 356.9,
            y2: 355.1
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 289.2,
            y: 344.1,
            x1: 284.2,
            y1: 355.7,
            x2: 322,
            y2: 364.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 298.5,
            y: 334.4,
            x1: 289.2,
            y1: 344.1,
            x2: 324.8,
            y2: 345
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 330.6,
            y: 338.4,
            x1: 335,
            y1: 316.8,
            x2: 347,
            y2: 327.1
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 358.5,
            y: 363.4,
            x1: 342.9,
            y1: 371.2,
            x2: 360.9,
            y2: 392
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 388.8,
            y: 367.4,
            x1: 360.9,
            y1: 392,
            x2: 388.9,
            y2: 381.8
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 376.6,
            y: 367.2,
            x1: 358.5,
            y1: 363.4,
            x2: 402.2,
            y2: 330.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 388.9,
            y: 381.8,
            x1: 376.6,
            y1: 367.2,
            x2: 388.8,
            y2: 367.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 370.8,
            y: 395,
            x1: 400.8,
            y1: 391.8,
            x2: 396.7,
            y2: 421.9
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 435.2,
            y: 381.2,
            x1: 413.9,
            y1: 389.9,
            x2: 435.1,
            y2: 393.9
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 442.6,
            y: 376.7,
            x1: 388.8,
            y1: 367.4,
            x2: 413.9,
            y2: 389.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 356.9,
            y: 355.1,
            x1: 347,
            y1: 327.1,
            x2: 388.8,
            y2: 367.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 402.2,
            y: 330.7,
            x1: 356.9,
            y1: 355.1,
            x2: 371,
            y2: 305.1
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 380.1,
            y: 267.4,
            x1: 368.4,
            y1: 299.3,
            x2: 343.4,
            y2: 289.4
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 389.3,
            y: 287,
            x1: 368.4,
            y1: 299.3,
            x2: 371,
            y2: 305.1
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 380.1,
            y: 267.4,
            x1: 410.6,
            y1: 256.4,
            x2: 414.9,
            y2: 273.8
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 396,
            y: 219,
            x1: 410.6,
            y1: 256.4,
            x2: 421.9,
            y2: 242.5
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 464.4,
            y: 225,
            x1: 421.9,
            y1: 242.5,
            x2: 445.9,
            y2: 276.4
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 516.9,
            y: 291.7,
            x1: 512.1,
            y1: 318.1,
            x2: 573.8,
            y2: 330.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 596.7,
            y: 236.8,
            x1: 579,
            y1: 252.8,
            x2: 596.1,
            y2: 252.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 591.1,
            y: 230.3,
            x1: 596.1,
            y1: 252.4,
            x2: 573.5,
            y2: 237.2
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 548.7,
            y: 220.2,
            x1: 536.8,
            y1: 226.7,
            x2: 527.5,
            y2: 216.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 539,
            y: 208.6,
            x1: 536.8,
            y1: 226.7,
            x2: 549.4,
            y2: 202.5
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 519,
            y: 235.9,
            x1: 508.8,
            y1: 245.2,
            x2: 524.3,
            y2: 241.1
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 497.2,
            y: 243.3,
            x1: 508.8,
            y1: 245.2,
            x2: 500.5,
            y2: 257.4
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 495.6,
            y: 218,
            x1: 497.2,
            y1: 243.3,
            x2: 519,
            y2: 235.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 507.1,
            y: 206.6,
            x1: 527.5,
            y1: 216.7,
            x2: 517.7,
            y2: 203
        }, {
            fillColor: "rgba(255,255,255,0.03)",
            strokeColor: "transparent",
            x: 539,
            y: 208.6,
            x1: 517.7,
            y1: 203,
            x2: 519,
            y2: 235.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 553,
            y: 170.9,
            x1: 549.4,
            y1: 202.5,
            x2: 604.7,
            y2: 194.2
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 72.5,
            y: 326.5,
            x1: 64.9,
            y1: 320.4,
            x2: 89.4,
            y2: 315.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 99.5,
            y: 332,
            x1: 64.9,
            y1: 320.4,
            x2: 72.5,
            y2: 326.5
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 110.5,
            y: 330.5,
            x1: 72.5,
            y1: 326.5,
            x2: 77.3,
            y2: 303.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 89.4,
            y: 315.9,
            x1: 109.9,
            y1: 286.6,
            x2: 99.5,
            y2: 332
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 58.5,
            y: 301.9,
            x1: 64.9,
            y1: 320.4,
            x2: 35.6,
            y2: 328
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 33,
            y: 186.8,
            x1: 42.7,
            y1: 201.4,
            x2: 54.7,
            y2: 201.4
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 68,
            y: 153.4,
            x1: 56.9,
            y1: 155.5,
            x2: 73.5,
            y2: 178.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 176.8,
            y: 309.5,
            x1: 171.1,
            y1: 307.3,
            x2: 159.2,
            y2: 316.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 188.4,
            y: 308.7,
            x1: 176.8,
            y1: 309.5,
            x2: 180,
            y2: 329.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 171.1,
            y: 307.3,
            x1: 188.4,
            y1: 308.7,
            x2: 180,
            y2: 329.6
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 173.8,
            y: 343.7,
            x1: 153,
            y1: 343.1,
            x2: 184.1,
            y2: 363.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 180,
            y: 329.6,
            x1: 173.8,
            y1: 343.7,
            x2: 171.1,
            y2: 307.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 197.6,
            y: 350.2,
            x1: 184.1,
            y1: 363.4,
            x2: 202.2,
            y2: 367.3
        }, {
            fillColor: "rgba(255,255,255,0.05)",
            strokeColor: "transparent",
            x: 180,
            y: 329.6,
            x1: 197.6,
            y1: 350.2,
            x2: 231.2,
            y2: 340.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 188.4,
            y: 308.7,
            x1: 184.5,
            y1: 277.7,
            x2: 202.7,
            y2: 289.5
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 131,
            y: 237,
            x1: 171,
            y1: 229.2,
            x2: 151.2,
            y2: 262.5
        }, {
            fillColor: "rgba(255,255,255,0.02)",
            strokeColor: "transparent",
            x: 111.4,
            y: 241.3,
            x1: 134.9,
            y1: 188.5,
            x2: 167.7,
            y2: 199.2
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 198.3,
            y: 188.4,
            x1: 187.3,
            y1: 188.5,
            x2: 196.1,
            y2: 193.2
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 226.3,
            y: 211.3,
            x1: 221.6,
            y1: 206.4,
            x2: 224.3,
            y2: 192.9
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 251.6,
            y: 204.7,
            x1: 224.3,
            y1: 192.9,
            x2: 221.6,
            y2: 206.4
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 184.4,
            y: 71.2,
            x1: 172.4,
            y1: 80.9,
            x2: 193.2,
            y2: 91.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 181,
            y: 56,
            x1: 172.4,
            y1: 80.9,
            x2: 203.7,
            y2: 59.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 184.4,
            y: 71.2,
            x1: 176.1,
            y1: 93.2,
            x2: 225.7,
            y2: 58.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 164.7,
            y: 108.5,
            x1: 176.1,
            y1: 93.2,
            x2: 172.4,
            y2: 80.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 142.6,
            y: 92.5,
            x1: 172.4,
            y1: 80.9,
            x2: 197.4,
            y2: 104.1
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 129.5,
            y: 90.3,
            x1: 164.7,
            y1: 108.5,
            x2: 193.2,
            y2: 91.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 316.8,
            y: 304.9,
            x1: 335,
            y1: 316.8,
            x2: 343.4,
            y2: 289.4
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 306.7,
            y: 286.4,
            x1: 315.1,
            y1: 267.6,
            x2: 316.8,
            y2: 304.9
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 233.6,
            y: 314.4,
            x1: 228.9,
            y1: 299.2,
            x2: 253,
            y2: 314.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 203.9,
            y: 312.5,
            x1: 202.7,
            y1: 289.5,
            x2: 228.9,
            y2: 299.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 565.1,
            y: 376,
            x1: 559.6,
            y1: 386.7,
            x2: 554.2,
            y2: 366.7
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 553.6,
            y: 389.6,
            x1: 565.1,
            y1: 376,
            x2: 559.6,
            y2: 386.7
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 525,
            y: 418.9,
            x1: 516.5,
            y1: 430.5,
            x2: 540.2,
            y2: 437.1
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 583.2,
            y: 355.8,
            x1: 558.1,
            y1: 358.4,
            x2: 577.1,
            y2: 350.2
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 607.3,
            y: 354.6,
            x1: 585.3,
            y1: 357.8,
            x2: 590.2,
            y2: 382.5
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 558.1,
            y: 358.4,
            x1: 572.8,
            y1: 353.4,
            x2: 565.1,
            y2: 376
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 469,
            y: 61.7,
            x1: 457.9,
            y1: 62.7,
            x2: 469.3,
            y2: 52.5
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 420.8,
            y: 53.7,
            x1: 425.4,
            y1: 47.9,
            x2: 404.7,
            y2: 45.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 414.5,
            y: 30,
            x1: 404.7,
            y1: 45.4,
            x2: 409.3,
            y2: 25.4
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 309.5,
            y: 24.9,
            x1: 324.7,
            y1: 31,
            x2: 323.7,
            y2: 38.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 288.2,
            y: 22.4,
            x1: 309.5,
            y1: 24.9,
            x2: 299.3,
            y2: 2.3
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 269.2,
            y: 21.6,
            x1: 278.2,
            y1: 18.4,
            x2: 267,
            y2: 7.8
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 236.7,
            y: 101.6,
            x1: 251.2,
            y1: 98.6,
            x2: 239.3,
            y2: 104.8
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 221.6,
            y: 79.5,
            x1: 223,
            y1: 77.6,
            x2: 238.9,
            y2: 79.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 357.4,
            y: 101.3,
            x1: 356.5,
            y1: 111.5,
            x2: 370.4,
            y2: 114.3
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 390.4,
            y: 84.7,
            x1: 388.3,
            y1: 80.2,
            x2: 375.5,
            y2: 79.2
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 385,
            y: 60.7,
            x1: 388.6,
            y1: 65.3,
            x2: 405.5,
            y2: 56.6
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 429.2,
            y: 89.9,
            x1: 407,
            y1: 88.1,
            x2: 421.2,
            y2: 79.5
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 423.3,
            y: 568.9,
            x1: 453.8,
            y1: 565.9,
            x2: 437,
            y2: 525.3
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 432.5,
            y: 558.7,
            x1: 453.8,
            y1: 565.9,
            x2: 452.7,
            y2: 532.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 437,
            y: 525.3,
            x1: 442.5,
            y1: 517.9,
            x2: 445,
            y2: 548
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 452.7,
            y: 532.9,
            x1: 445,
            y1: 548,
            x2: 437,
            y2: 525.3
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 416.3,
            y: 543.3,
            x1: 398.3,
            y1: 531.5,
            x2: 437,
            y2: 525.3
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 398.7,
            y: 471.1,
            x1: 398.3,
            y1: 531.5,
            x2: 426.9,
            y2: 516.4
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 398.3,
            y: 531.5,
            x1: 374.2,
            y1: 512.5,
            x2: 404.7,
            y2: 481.9
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 380.5,
            y: 523.9,
            x1: 374.2,
            y1: 512.5,
            x2: 398.3,
            y2: 531.5
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 357.1,
            y: 454.4,
            x1: 350.6,
            y1: 448.2,
            x2: 356.5,
            y2: 425.2
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 338.4,
            y: 393.8,
            x1: 350.6,
            y1: 448.2,
            x2: 375.9,
            y2: 462
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 451.8,
            y: 552.5,
            x1: 436.1,
            y1: 572.4,
            x2: 418.3,
            y2: 533.9
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 433,
            y: 507.4,
            x1: 421.3,
            y1: 496.5,
            x2: 420.1,
            y2: 500.5
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 447,
            y: 475.5,
            x1: 426.9,
            y1: 516.4,
            x2: 442.4,
            y2: 492.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 242.2,
            y: 372.1,
            x1: 298.5,
            y1: 334.4,
            x2: 283.4,
            y2: 369.6
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 180,
            y: 329.6,
            x1: 166.1,
            y1: 384.7,
            x2: 239.9,
            y2: 399.8
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 99.5,
            y: 332,
            x1: 110.5,
            y1: 330.5,
            x2: 109.9,
            y2: 286.6
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 72.5,
            y: 326.5,
            x1: 99.5,
            y1: 332,
            x2: 77.3,
            y2: 303.3
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 64.9,
            y: 320.4,
            x1: 1.3,
            y1: 271.2,
            x2: 35.6,
            y2: 328
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 70.1,
            y: 92,
            x1: 121.4,
            y1: 39.2,
            x2: 91.5,
            y2: 115.9
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 203.7,
            y: 59.2,
            x1: 121.4,
            y1: 39.2,
            x2: 91.5,
            y2: 115.9
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 70.1,
            y: 92,
            x1: 181,
            y1: 56,
            x2: 121.4,
            y2: 39.2
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 110.5,
            y: 330.5,
            x1: 153,
            y1: 343.1,
            x2: 132.1,
            y2: 321
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 159.2,
            y: 316.6,
            x1: 110.5,
            y1: 330.5,
            x2: 180,
            y2: 329.6
        }, {
            fillColor: "white",
            strokeColor: "transparent",
            x: 102.1,
            y: 134.8,
            x1: 108.7,
            y1: 132.4,
            x2: 115.9,
            y2: 135
        }, {
            fillColor: "rgba(255,255,255,0.1)",
            strokeColor: "transparent",
            x: 41.5,
            y: 133.5,
            x1: 70.1,
            y1: 92,
            x2: 129.5,
            y2: 90.3
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 121.4,
            y: 39.2,
            x1: 209.8,
            y1: 18.3,
            x2: 155.2,
            y2: 43.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 237.7,
            y: .8,
            x1: 267,
            y1: 7.8,
            x2: 269.2,
            y2: 21.6
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 516.5,
            y: 430.5,
            x1: 525,
            y1: 418.9,
            x2: 547.2,
            y2: 422.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 590.2,
            y: 382.5,
            x1: 565.1,
            y1: 376,
            x2: 585.7,
            y2: 357.6
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 573.8,
            y: 330.7,
            x1: 580.1,
            y1: 314.7,
            x2: 602,
            y2: 312.4
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 591.1,
            y: 230.3,
            x1: 596.7,
            y1: 236.8,
            x2: 596.1,
            y2: 252.4
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 335,
            y: 316.8,
            x1: 357.7,
            y1: 309.8,
            x2: 347,
            y2: 327.1
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 235.1,
            y: 261.2,
            x1: 233.9,
            y1: 235.4,
            x2: 255.5,
            y2: 253.3
        }, {
            fillColor: "rgba(255,255,255,0.2)",
            strokeColor: "transparent",
            x: 205.4,
            y: 272,
            x1: 233.9,
            y1: 235.4,
            x2: 255.5,
            y2: 253.3
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 262.2,
            y: 377,
            x1: 242.2,
            y1: 372.1,
            x2: 243,
            y2: 351.8
        }, {
            fillColor: "rgba(255,255,255,0.8)",
            strokeColor: "transparent",
            x: 356.5,
            y: 425.2,
            x1: 371.8,
            y1: 428.4,
            x2: 350.6,
            y2: 448.2
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 166.1,
            y: 384.7,
            x1: 184.4,
            y1: 363.3,
            x2: 202.2,
            y2: 367.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 234.1,
            y: 17.6,
            x1: 267,
            y1: 7.8,
            x2: 260.6,
            y2: 33.1
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 512.1,
            y: 318.1,
            x1: 573.8,
            y1: 330.7,
            x2: 580.1,
            y2: 314.7
        }, {
            fillColor: "rgba(255,255,255,0.8)",
            strokeColor: "transparent",
            x: 374.2,
            y: 512.5,
            x1: 373.7,
            y1: 492.1,
            x2: 380.5,
            y2: 523.9
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 409.8,
            y: 509,
            x1: 374.2,
            y1: 512.5,
            x2: 380.5,
            y2: 523.9
        }, {
            fillColor: "rgba(255,255,255,0.6)",
            strokeColor: "transparent",
            x: 437,
            y: 525.3,
            x1: 426.9,
            y1: 516.4,
            x2: 442.5,
            y2: 517.9
        }, {
            fillColor: "rgba(255,255,255,0.7)",
            strokeColor: "transparent",
            x: 451.2,
            y: 428.3,
            x1: 467.5,
            y1: 430.6,
            x2: 476.9,
            y2: 426.4
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 398.5,
            y: 470.7,
            x1: 412.5,
            y1: 448.6,
            x2: 409.8,
            y2: 509
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 371.8,
            y: 428.4,
            x1: 375.9,
            y1: 462,
            x2: 398.5,
            y2: 470.7
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 392.7,
            y: 486.5,
            x1: 418.3,
            y1: 470.7,
            x2: 397.6,
            y2: 512.5
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 398.3,
            y: 531.5,
            x1: 418.3,
            y1: 533.9,
            x2: 426.9,
            y2: 554.3
        }, {
            fillColor: "#F15234",
            strokeColor: "transparent",
            x: 421.3,
            y: 496.5,
            x1: 409.8,
            y1: 509,
            x2: 425.4,
            y2: 524.5
        }],
        circles: [{
            x: 66.5,
            y: 153.3,
            r: 1.6
        }, {
            x: 40,
            y: 168.5,
            r: 1.8
        }, {
            x: 46.7,
            y: 233.4,
            r: 1.4
        }, {
            x: 52.5,
            y: 285,
            r: .1
        }, {
            x: 79.9,
            y: 296.5,
            r: .6
        }, {
            x: 89.4,
            y: 315.9,
            r: 1.1
        }, {
            x: 112.4,
            y: 319.9,
            r: .3
        }, {
            x: 159.2,
            y: 316.6,
            r: 1.3
        }, {
            x: 166.1,
            y: 344.1,
            r: .2
        }, {
            x: 197,
            y: 344.3,
            r: .5
        }, {
            x: 226.5,
            y: 373.5,
            r: .8
        }, {
            x: 262.2,
            y: 377,
            r: .4
        }, {
            x: 284.2,
            y: 355.7,
            r: 2.1
        }, {
            x: 360.9,
            y: 392,
            r: 2.3
        }, {
            x: 356.5,
            y: 425.2,
            r: 1.5
        }, {
            x: 382.8,
            y: 436.6,
            r: 1.3
        }, {
            x: 401.7,
            y: 456.2,
            r: 1
        }, {
            x: 420.9,
            y: 475.4,
            r: .4
        }, {
            x: 421.3,
            y: 496.5,
            r: 1.5
        }, {
            x: 445,
            y: 548,
            r: 2.7
        }, {
            x: 436.8,
            y: 569.1,
            r: .2
        }, {
            x: 439.7,
            y: 591.7,
            r: .4
        }, {
            x: 442.5,
            y: 517.9,
            r: 1.5
        }, {
            x: 409.8,
            y: 509,
            r: 1.6
        }, {
            x: 429.7,
            y: 466,
            r: .7
        }, {
            x: 451.2,
            y: 428.3,
            r: 1.6
        }, {
            x: 467.5,
            y: 430.6,
            r: .5
        }, {
            x: 509.8,
            y: 438.7,
            r: .4
        }, {
            x: 552.1,
            y: 404.3,
            r: 1.6
        }, {
            x: 553.6,
            y: 389.6,
            r: .5
        }, {
            x: 583.2,
            y: 355.8,
            r: 1.9
        }, {
            x: 590.6,
            y: 324.3,
            r: .1
        }, {
            x: 597.9,
            y: 297.5,
            r: .9
        }, {
            x: 597.3,
            y: 268.3,
            r: .2
        }, {
            x: 591.1,
            y: 230.3,
            r: .7
        }, {
            x: 566.3,
            y: 183.6,
            r: .4
        }, {
            x: 553,
            y: 170.9,
            r: 1.4
        }, {
            x: 527.5,
            y: 157.4,
            r: 2.9
        }, {
            x: 497.4,
            y: 124.5,
            r: .5
        }, {
            x: 469.9,
            y: 93.5,
            r: .3
        }, {
            x: 457.9,
            y: 62.7,
            r: 1.7
        }, {
            x: 420.8,
            y: 53.7,
            r: 2
        }, {
            x: 349.7,
            y: 25.2,
            r: .6
        }, {
            x: 323.7,
            y: 38.3,
            r: .8
        }, {
            x: 290.8,
            y: 33.2,
            r: 2.3
        }, {
            x: 255.1,
            y: 40.5,
            r: .8
        }, {
            x: 215,
            y: 46.5,
            r: 1.2
        }, {
            x: 179.4,
            y: 50.1,
            r: 1
        }, {
            x: 140,
            y: 75.6,
            r: .1
        }, {
            x: 129.5,
            y: 90.3,
            r: 1.8
        }, {
            x: 85.5,
            y: 120.8,
            r: 1.6
        }, {
            x: 194.4,
            y: 118.5,
            r: 0
        }, {
            x: 164.7,
            y: 108.5,
            r: 1.6
        }, {
            x: 126.7,
            y: 87.3,
            r: .3
        }, {
            x: 112.5,
            y: 83.3,
            r: .5
        }, {
            x: 172.5,
            y: 58.5,
            r: .7
        }, {
            x: 214.4,
            y: 72.7,
            r: 0
        }, {
            x: 239.3,
            y: 104.8,
            r: .3
        }, {
            x: 243.7,
            y: 120.8,
            r: 1.8
        }, {
            x: 255.5,
            y: 131.1,
            r: .9
        }, {
            x: 452.7,
            y: 532.9,
            r: 1
        }, {
            x: 304.8,
            y: 161.2,
            r: 1.1
        }, {
            x: 270,
            y: 175.8,
            r: 1
        }, {
            x: 256.1,
            y: 141.9,
            r: .4
        }, {
            x: 236.7,
            y: 101.6,
            r: .7
        }, {
            x: 225.7,
            y: 58.7,
            r: 1.3
        }, {
            x: 209.8,
            y: 18.3,
            r: 1.7
        }, {
            x: 278.2,
            y: 18.4,
            r: .8
        }, {
            x: 311.4,
            y: 67.3,
            r: .6
        }, {
            x: 426.9,
            y: 516.4,
            r: .7
        }, {
            x: 314.6,
            y: 167.5,
            r: 2.2
        }, {
            x: 271.2,
            y: 199.5,
            r: 1.2
        }, {
            x: 249.4,
            y: 179.3,
            r: .4
        }, {
            x: 214.2,
            y: 140,
            r: 0
        }, {
            x: 195.6,
            y: 124.2,
            r: 1.2
        }, {
            x: 141.5,
            y: 129.3,
            r: .9
        }, {
            x: 102.1,
            y: 134.8,
            r: 1.8
        }, {
            x: 96.5,
            y: 96.6,
            r: 1.2
        }, {
            x: 93.8,
            y: 125.8,
            r: 1
        }, {
            x: 92.8,
            y: 163.1,
            r: .4
        }, {
            x: 94.7,
            y: 188.4,
            r: .9
        }, {
            x: 109.2,
            y: 209.5,
            r: 2.8
        }, {
            x: 55.4,
            y: 261.7,
            r: 2.2
        }, {
            x: 8.7,
            y: 246.4,
            r: 1
        }, {
            x: 464.4,
            y: 225,
            r: 2
        }, {
            x: 421.9,
            y: 242.5,
            r: 2.3
        }, {
            x: 362.3,
            y: 233.6,
            r: .3
        }, {
            x: 330,
            y: 240.5,
            r: .3
        }, {
            x: 310.5,
            y: 225.3,
            r: 2.4
        }, {
            x: 297.7,
            y: 217.7,
            r: .3
        }, {
            x: 290.6,
            y: 240,
            r: .8
        }, {
            x: 411.7,
            y: 350.5,
            r: 2.2
        }, {
            x: 350.6,
            y: 448.2,
            r: 1.2
        }, {
            x: 383.2,
            y: 410.9,
            r: .3
        }, {
            x: 403.5,
            y: 381.5,
            r: .4
        }, {
            x: 388.8,
            y: 367.4,
            r: 1.9
        }, {
            x: 393.9,
            y: 328.6,
            r: .6
        }, {
            x: 368.4,
            y: 299.3,
            r: 1.2
        }, {
            x: 541,
            y: 260.5,
            r: 2.5
        }, {
            x: 483.2,
            y: 317.9,
            r: 2.1
        }, {
            x: 343.4,
            y: 289.4,
            r: .9
        }, {
            x: 404.7,
            y: 421.7,
            r: .6
        }, {
            x: 435.3,
            y: 393.9,
            r: 1.5
        }, {
            x: 442,
            y: 492.9,
            r: .5
        }, {
            x: 392.7,
            y: 486.5,
            r: 1.7
        }, {
            x: 428.4,
            y: 456.7,
            r: 2.8
        }, {
            x: 607.8,
            y: 231.9,
            r: .1
        }, {
            x: 596.1,
            y: 252.4,
            r: 2.8
        }, {
            x: 596.7,
            y: 236.8,
            r: 1.4
        }, {
            x: 626.6,
            y: 250,
            r: .1
        }, {
            x: 477.1,
            y: 273.8,
            r: .9
        }, {
            x: 452.7,
            y: 232.6,
            r: .5
        }, {
            x: 453.3,
            y: 213,
            r: .3
        }, {
            x: 435.7,
            y: 190.5,
            r: 2
        }, {
            x: 488.6,
            y: 147.1,
            r: 1.6
        }, {
            x: 536.7,
            y: 134.4,
            r: .2
        }, {
            x: 415.5,
            y: 83.6,
            r: .1
        }, {
            x: 390.4,
            y: 84.7,
            r: 1.1
        }, {
            x: 388.6,
            y: 65.3,
            r: .4
        }, {
            x: 363.4,
            y: 33.4,
            r: 1
        }, {
            x: 392.8,
            y: 25.7,
            r: 1.8
        }, {
            x: 351.2,
            y: 62.7,
            r: .2
        }, {
            x: 356.5,
            y: 111.5,
            r: .8
        }, {
            x: 315.6,
            y: 67.1,
            r: 1.2
        }, {
            x: 352.8,
            y: 36.6,
            r: .3
        }, {
            x: 409.3,
            y: 25.4,
            r: .9
        }, {
            x: 448.3,
            y: 66.2,
            r: .1
        }, {
            x: 460.9,
            y: 89.3,
            r: 1.9
        }, {
            x: 488.3,
            y: 151.2,
            r: .6
        }, {
            x: 424.8,
            y: 162.7,
            r: .5
        }, {
            x: 397.3,
            y: 170.8,
            r: 2.5
        }, {
            x: 357.7,
            y: 158.7,
            r: 2.3
        }, {
            x: 321,
            y: 136.3,
            r: 1.8
        }, {
            x: 353.7,
            y: 107.3,
            r: 0
        }, {
            x: 348,
            y: 138.8,
            r: 1
        }, {
            x: 376.9,
            y: 176.8,
            r: .9
        }, {
            x: 380,
            y: 208.8,
            r: 1.6
        }, {
            x: 233.9,
            y: 235.4,
            r: 2.8
        }, {
            x: 304,
            y: 263,
            r: .7
        }, {
            x: 285.8,
            y: 269.2,
            r: 1.6
        }, {
            x: 271.3,
            y: 271.9,
            r: .7
        }, {
            x: 223.1,
            y: 287,
            r: 1.1
        }, {
            x: 184.5,
            y: 277.7,
            r: 2.5
        }, {
            x: 151.2,
            y: 262.5,
            r: 2
        }, {
            x: 106.6,
            y: 250.5,
            r: .4
        }, {
            x: 71.9,
            y: 213.6,
            r: 1.5
        }, {
            x: 99.4,
            y: 169.4,
            r: 1.3
        }, {
            x: 122.7,
            y: 174,
            r: .7
        }, {
            x: 137.9,
            y: 155.4,
            r: 1.2
        }, {
            x: 176.6,
            y: 124.4,
            r: 0
        }, {
            x: 200.4,
            y: 104,
            r: .4
        }, {
            x: 245.5,
            y: 150.1,
            r: 1
        }, {
            x: 256.1,
            y: 173.6,
            r: 2.2
        }, {
            x: 256.6,
            y: 211.8,
            r: .5
        }, {
            x: 264.8,
            y: 225.6,
            r: .7
        }, {
            x: 151.7,
            y: 302.3,
            r: .5
        }, {
            x: 112.7,
            y: 281.9,
            r: .1
        }, {
            x: 72.8,
            y: 267.7,
            r: .1
        }, {
            x: 62.6,
            y: 217.7,
            r: 2.1
        }, {
            x: 82,
            y: 142.9,
            r: 1.2
        }, {
            x: 107.8,
            y: 157.5,
            r: .5
        }, {
            x: 140.1,
            y: 115.1,
            r: .5
        }, {
            x: 158.6,
            y: 117.3,
            r: .2
        }, {
            x: 187.8,
            y: 108.3,
            r: .3
        }, {
            x: 195,
            y: 81.1,
            r: .1
        }, {
            x: 111.3,
            y: 321.9,
            r: .8
        }, {
            x: 94.2,
            y: 237.6,
            r: 1
        }, {
            x: 99.6,
            y: 205.6,
            r: .1
        }, {
            x: 145.2,
            y: 169.8,
            r: 2.7
        }, {
            x: 199,
            y: 153.2,
            r: .2
        }, {
            x: 193.9,
            y: 245,
            r: 1.5
        }, {
            x: 161.4,
            y: 236.5,
            r: .1
        }, {
            x: 135.3,
            y: 255.5,
            r: .8
        }, {
            x: 171,
            y: 261.3,
            r: 1.3
        }, {
            x: 226.8,
            y: 287.3,
            r: 1
        }, {
            x: 197.6,
            y: 350.2,
            r: .8
        }, {
            x: 184.1,
            y: 363.4,
            r: 1
        }, {
            x: 161.9,
            y: 340.2,
            r: .3
        }, {
            x: 189.4,
            y: 296.8,
            r: .4
        }, {
            x: 207.9,
            y: 246.4,
            r: .3
        }, {
            x: 440.9,
            y: 600.4,
            r: 1.8
        }, {
            x: 125.7,
            y: 283.7,
            r: 1.1
        }, {
            x: 144,
            y: 300.1,
            r: 1.2
        }, {
            x: 188.4,
            y: 308.7,
            r: 1.5
        }, {
            x: 228.9,
            y: 299.2,
            r: 1.2
        }, {
            x: 274.4,
            y: 304.9,
            r: .8
        }, {
            x: 153,
            y: 343.1,
            r: 2.6
        }, {
            x: 158.8,
            y: 327.7,
            r: .6
        }, {
            x: 171.1,
            y: 307.3,
            r: 1.6
        }, {
            x: 180.6,
            y: 295.3,
            r: .6
        }, {
            x: 205.4,
            y: 272,
            r: 2.2
        }, {
            x: 215.1,
            y: 251.6,
            r: .8
        }, {
            x: 307.9,
            y: 144.2,
            r: 2.6
        }, {
            x: 279.2,
            y: 136.1,
            r: .7
        }, {
            x: 236.1,
            y: 130,
            r: 0
        }, {
            x: 211.8,
            y: 126.5,
            r: .8
        }, {
            x: 190,
            y: 66.7,
            r: .2
        }, {
            x: 223,
            y: 77.6,
            r: .5
        }, {
            x: 269.7,
            y: 73.2,
            r: .5
        }, {
            x: 403.4,
            y: 384.7,
            r: .9
        }, {
            x: 358.5,
            y: 363.4,
            r: 2.1
        }, {
            x: 347,
            y: 327.1,
            r: 1.5
        }, {
            x: 335,
            y: 316.8,
            r: 1.4
        }, {
            x: 316.8,
            y: 304.9,
            r: 1.9
        }, {
            x: 298.5,
            y: 334.4,
            r: 2.3
        }, {
            x: 233.6,
            y: 314.4,
            r: 1.4
        }, {
            x: 203.9,
            y: 312.5,
            r: 1.8
        }, {
            x: 155.7,
            y: 336.1,
            r: .2
        }, {
            x: 104.1,
            y: 356.8,
            r: .6
        }, {
            x: 64.9,
            y: 320.4,
            r: .8
        }, {
            x: 2.9,
            y: 237.6,
            r: 1.3
        }, {
            x: 33.9,
            y: 227.9,
            r: 1.7
        }, {
            x: 33,
            y: 186.8,
            r: 1.3
        }, {
            x: 41.5,
            y: 133.5,
            r: 1.5
        }, {
            x: 75.6,
            y: 157.3,
            r: .3
        }, {
            x: 82.7,
            y: 159.4,
            r: .4
        }, {
            x: 108.7,
            y: 132.4,
            r: 1.4
        }, {
            x: 142.6,
            y: 92.5,
            r: 1.6
        }, {
            x: 155.2,
            y: 43.7,
            r: .6
        }, {
            x: 181,
            y: 12.8,
            r: .7
        }, {
            x: 237.7,
            y: .8,
            r: .8
        }, {
            x: 255.2,
            y: 4.2,
            r: .2
        }, {
            x: 299.3,
            y: 2.3,
            r: 1.5
        }, {
            x: 352,
            y: 10.8,
            r: 0
        }, {
            x: 385,
            y: 60.7,
            r: 1.2
        }, {
            x: 374.7,
            y: 47.5,
            r: .2
        }, {
            x: 324.7,
            y: 31,
            r: 1
        }, {
            x: 392.8,
            y: 8.9,
            r: .8
        }, {
            x: 288.2,
            y: 22.4,
            r: .6
        }, {
            x: 309.5,
            y: 24.9,
            r: .3
        }, {
            x: 333.1,
            y: 51.3,
            r: .3
        }, {
            x: 339.3,
            y: 92.6,
            r: 1.3
        }, {
            x: 346,
            y: 75,
            r: 1.7
        }, {
            x: 369.2,
            y: 67.1,
            r: 1.5
        }, {
            x: 388.3,
            y: 80.2,
            r: .5
        }, {
            x: 417.7,
            y: 57.9,
            r: .6
        }, {
            x: 445.1,
            y: 64.3,
            r: .9
        }, {
            x: 484.2,
            y: 59.9,
            r: 1.6
        }, {
            x: 516.9,
            y: 85.6,
            r: 2.3
        }, {
            x: 493.7,
            y: 128.5,
            r: 1.1
        }, {
            x: 486.5,
            y: 170.2,
            r: .8
        }, {
            x: 442.9,
            y: 214.5,
            r: .2
        }, {
            x: 409.3,
            y: 215,
            r: .7
        }, {
            x: 396,
            y: 219,
            r: 2.1
        }, {
            x: 411.5,
            y: 220.4,
            r: 1.4
        }, {
            x: 500.4,
            y: 250.8,
            r: .4
        }, {
            x: 512.1,
            y: 318.1,
            r: 2.6
        }, {
            x: 492.5,
            y: 350.3,
            r: .6
        }, {
            x: 470.8,
            y: 375.3,
            r: 2.2
        }, {
            x: 435.2,
            y: 381.2,
            r: 1.1
        }, {
            x: 404.8,
            y: 409.4,
            r: .5
        }, {
            x: 364.8,
            y: 409,
            r: .9
        }, {
            x: 316.7,
            y: 394.7,
            r: 2.6
        }, {
            x: 283,
            y: 382.8,
            r: .9
        }, {
            x: 266.7,
            y: 369.6,
            r: 1.3
        }, {
            x: 289.2,
            y: 344.1,
            r: .7
        }, {
            x: 242.2,
            y: 372.1,
            r: 1.1
        }, {
            x: 239.9,
            y: 399.8,
            r: 2
        }, {
            x: 536.8,
            y: 226.7,
            r: .4
        }, {
            x: 537.7,
            y: 184.4,
            r: 2.1
        }, {
            x: 576.4,
            y: 188.5,
            r: 1.2
        }, {
            x: 539,
            y: 208.6,
            r: 1.9
        }, {
            x: 494.5,
            y: 224.5,
            r: .2
        }, {
            x: 485.5,
            y: 179.9,
            r: .2
        }, {
            x: 519.3,
            y: 183.6,
            r: .6
        }, {
            x: 555.6,
            y: 197.3,
            r: .1
        }, {
            x: 577.2,
            y: 252.9,
            r: .5
        }, {
            x: 577,
            y: 308.6,
            r: .7
        }, {
            x: 572.8,
            y: 353.4,
            r: 1.1
        }, {
            x: 554.2,
            y: 366.7,
            r: .3
        }, {
            x: 559.6,
            y: 386.7,
            r: .7
        }, {
            x: 547.2,
            y: 422.3,
            r: .9
        }, {
            x: 496.1,
            y: 462.6,
            r: .4
        }, {
            x: 467.2,
            y: 429.1,
            r: .5
        }, {
            x: 415.7,
            y: 410,
            r: .3
        }, {
            x: 451.8,
            y: 552.5,
            r: 1.8
        }, {
            x: 478.1,
            y: 337.6,
            r: .8
        }, {
            x: 531.9,
            y: 341.9,
            r: .4
        }, {
            x: 502.6,
            y: 335.9,
            r: .1
        }, {
            x: 506.3,
            y: 307.7,
            r: .1
        }, {
            x: 543.7,
            y: 289.3,
            r: .6
        }, {
            x: 573.8,
            y: 330.7,
            r: 1.3
        }, {
            x: 603.5,
            y: 273.8,
            r: 1.7
        }, {
            x: 562,
            y: 268.8,
            r: .5
        }, {
            x: 575,
            y: 281.8,
            r: .3
        }, {
            x: 555.9,
            y: 288.2,
            r: .1
        }, {
            x: 536.1,
            y: 305.2,
            r: 2.2
        }, {
            x: 471.1,
            y: 305.3,
            r: 1
        }, {
            x: 437.3,
            y: 317.4,
            r: .1
        }, {
            x: 393.8,
            y: 316.3,
            r: .6
        }, {
            x: 377.9,
            y: 308.6,
            r: .2
        }, {
            x: 355.3,
            y: 291.7,
            r: .2
        }, {
            x: 357.7,
            y: 309.8,
            r: 2.1
        }, {
            x: 324.8,
            y: 345,
            r: .5
        }, {
            x: 322,
            y: 364.5,
            r: 1
        }, {
            x: 320.2,
            y: 385.5,
            r: 1.5
        }, {
            x: 607.3,
            y: 354.6,
            r: 1.1
        }, {
            x: 585.3,
            y: 357.8,
            r: .4
        }, {
            x: 558.1,
            y: 358.4,
            r: .7
        }, {
            x: 565.1,
            y: 376,
            r: .8
        }, {
            x: 571.6,
            y: 407.1,
            r: 1.4
        }, {
            x: 342.9,
            y: 371.2,
            r: 1
        }, {
            x: 376.6,
            y: 367.2,
            r: .7
        }, {
            x: 407.2,
            y: 342.6,
            r: .4
        }, {
            x: 418.7,
            y: 400,
            r: .5
        }, {
            x: 397.9,
            y: 444.2,
            r: .2
        }, {
            x: 366.7,
            y: 466.8,
            r: .5
        }, {
            x: 310,
            y: 237,
            r: .5
        }, {
            x: 294.5,
            y: 270.5,
            r: .4
        }, {
            x: 286.2,
            y: 321.4,
            r: .4
        }, {
            x: 292.1,
            y: 377,
            r: .2
        }, {
            x: 321.8,
            y: 303.5,
            r: 1.4
        }, {
            x: 306.7,
            y: 286.4,
            r: 1.4
        }, {
            x: 265.9,
            y: 279.7,
            r: .2
        }, {
            x: 275.5,
            y: 199.6,
            r: 1.8
        }, {
            x: 221.6,
            y: 206.4,
            r: 1
        }, {
            x: 442.4,
            y: 578.3,
            r: 1.2
        }, {
            x: 115.9,
            y: 135,
            r: 1.4
        }, {
            x: 111.2,
            y: 155.9,
            r: .9
        }, {
            x: 119.9,
            y: 168.4,
            r: .7
        }, {
            x: 134.6,
            y: 169.5,
            r: 1.1
        }, {
            x: 79.9,
            y: 145.6,
            r: .4
        }, {
            x: 91.5,
            y: 115.9,
            r: 1.7
        }, {
            x: 90.4,
            y: 63,
            r: .4
        }, {
            x: 121.4,
            y: 39.2,
            r: 1.4
        }, {
            x: 109.1,
            y: 271.4,
            r: .8
        }, {
            x: 92.7,
            y: 291.6,
            r: .4
        }, {
            x: 108.2,
            y: 341.8,
            r: .4
        }, {
            x: 59,
            y: 280.2,
            r: 1.3
        }, {
            x: 83.2,
            y: 276.3,
            r: .3
        }, {
            x: 111.4,
            y: 241.3,
            r: 1.4
        }, {
            x: 505.3,
            y: 92,
            r: 1.4
        }, {
            x: 543.7,
            y: 108.7,
            r: .2
        }, {
            x: 557.8,
            y: 123.1,
            r: 1.6
        }, {
            x: 580.1,
            y: 137.5,
            r: 1.2
        }, {
            x: 344.6,
            y: 94.9,
            r: .3
        }, {
            x: 370.4,
            y: 114.3,
            r: .8
        }, {
            x: 387.2,
            y: 127.3,
            r: .7
        }, {
            x: 413.8,
            y: 136,
            r: 2.4
        }, {
            x: 436.8,
            y: 155.8,
            r: 1.8
        }, {
            x: 464,
            y: 177.8,
            r: 1.2
        }, {
            x: 480.1,
            y: 217,
            r: .6
        }, {
            x: 422.5,
            y: 277.7,
            r: 1
        }, {
            x: 423.8,
            y: 271,
            r: .1
        }, {
            x: 445.9,
            y: 276.4,
            r: 1.6
        }, {
            x: 506.6,
            y: 329.3,
            r: .8
        }, {
            x: 534.7,
            y: 338.3,
            r: 1.5
        }, {
            x: 523.8,
            y: 398.3,
            r: 1.6
        }, {
            x: 516.5,
            y: 430.5,
            r: 2.9
        }, {
            x: 476.7,
            y: 443,
            r: .1
        }, {
            x: 475.5,
            y: 474.1,
            r: 1
        }, {
            x: 460.1,
            y: 481,
            r: 2.1
        }, {
            x: 382.4,
            y: 166.6,
            r: .8
        }, {
            x: 358.3,
            y: 161.9,
            r: .3
        }, {
            x: 363.6,
            y: 144,
            r: .5
        }, {
            x: 357.4,
            y: 101.3,
            r: 1.5
        }, {
            x: 331.9,
            y: 92,
            r: .2
        }, {
            x: 306.5,
            y: 54,
            r: 1.5
        }, {
            x: 269.2,
            y: 21.6,
            r: .5
        }, {
            x: 279,
            y: 53.9,
            r: 1
        }, {
            x: 362.9,
            y: 10.9,
            r: 1.9
        }, {
            x: 266.9,
            y: 97.6,
            r: 1.1
        }, {
            x: 193.2,
            y: 91.6,
            r: 1.7
        }, {
            x: 181,
            y: 56,
            r: 1.4
        }, {
            x: 184.4,
            y: 71.2,
            r: .8
        }, {
            x: 183.2,
            y: 113.8,
            r: .6
        }, {
            x: 142,
            y: 149.1,
            r: .2
        }, {
            x: 107,
            y: 181.3,
            r: .5
        }, {
            x: 115.4,
            y: 233.4,
            r: .4
        }, {
            x: 109.9,
            y: 286.6,
            r: 2.3
        }, {
            x: 108.6,
            y: 302.7,
            r: 1.1
        }, {
            x: 110.2,
            y: 330.2,
            r: 3
        }, {
            x: 75.8,
            y: 295.2,
            r: .9
        }, {
            x: 87,
            y: 283.7,
            r: .4
        }, {
            x: 436.1,
            y: 572.4,
            r: 1.6
        }, {
            x: 131,
            y: 237,
            r: 1.4
        }, {
            x: 149,
            y: 227.3,
            r: .8
        }, {
            x: 198.3,
            y: 188.4,
            r: 2
        }, {
            x: 187,
            y: 188.6,
            r: 1.3
        }, {
            x: 217.6,
            y: 117.4,
            r: .1
        }, {
            x: 255.6,
            y: 114.8,
            r: .8
        }, {
            x: 278,
            y: 115.9,
            r: 1.3
        }, {
            x: 294.3,
            y: 105.6,
            r: .4
        }, {
            x: 332.3,
            y: 105.3,
            r: .1
        }, {
            x: 367.2,
            y: 127.8,
            r: .2
        }, {
            x: 396,
            y: 152.7,
            r: .5
        }, {
            x: 396.6,
            y: 148.6,
            r: .3
        }, {
            x: 417.6,
            y: 120.9,
            r: 2.1
        }, {
            x: 431.4,
            y: 107.6,
            r: 1.6
        }, {
            x: 501.2,
            y: 111.8,
            r: .5
        }, {
            x: 527.5,
            y: 132.6,
            r: .5
        }, {
            x: 481.7,
            y: 50.3,
            r: 1
        }, {
            x: 453.4,
            y: 25.9,
            r: .3
        }, {
            x: 565.9,
            y: 155.7,
            r: .8
        }, {
            x: 586.2,
            y: 160.9,
            r: .9
        }, {
            x: 573.5,
            y: 237.2,
            r: .8
        }, {
            x: 519,
            y: 235.9,
            r: .9
        }, {
            x: 505.7,
            y: 259.3,
            r: .1
        }, {
            x: 474.1,
            y: 259.1,
            r: .2
        }, {
            x: 468.5,
            y: 240.1,
            r: .4
        }, {
            x: 471.3,
            y: 290.4,
            r: 1.1
        }, {
            x: 421.1,
            y: 330.1,
            r: .8
        }, {
            x: 402.2,
            y: 330.7,
            r: 1.7
        }, {
            x: 406.9,
            y: 328.5,
            r: .3
        }, {
            x: 379.6,
            y: 373.7,
            r: .1
        }, {
            x: 370.8,
            y: 395,
            r: 2.5
        }, {
            x: 375.7,
            y: 452.2,
            r: .8
        }, {
            x: 396.7,
            y: 421.9,
            r: 1.4
        }, {
            x: 436.8,
            y: 449.2,
            r: 1.1
        }, {
            x: 439.9,
            y: 434,
            r: .3
        }, {
            x: 461.1,
            y: 394.9,
            r: 1
        }, {
            x: 489,
            y: 365.3,
            r: 1
        }, {
            x: 506.1,
            y: 376.6,
            r: 1
        }, {
            x: 480.3,
            y: 368.6,
            r: 1.6
        }, {
            x: 448.5,
            y: 342,
            r: 1.6
        }, {
            x: 389.3,
            y: 287.2,
            r: 1.7
        }, {
            x: 380.1,
            y: 267.4,
            r: 2.3
        }, {
            x: 370.4,
            y: 256.4,
            r: 1.5
        }, {
            x: 329.9,
            y: 225.9,
            r: 2
        }, {
            x: 329.1,
            y: 215.6,
            r: .2
        }, {
            x: 337.4,
            y: 243.3,
            r: .5
        }, {
            x: 322.8,
            y: 289.7,
            r: 1.5
        }, {
            x: 284.3,
            y: 245.2,
            r: .3
        }, {
            x: 285.4,
            y: 216.1,
            r: 1
        }, {
            x: 347,
            y: 191.4,
            r: 2.7
        }, {
            x: 286.2,
            y: 154.9,
            r: .7
        }, {
            x: 295.5,
            y: 132,
            r: .1
        }, {
            x: 310.4,
            y: 156.4,
            r: .5
        }, {
            x: 287.1,
            y: 203.9,
            r: .6
        }, {
            x: 251.6,
            y: 204.7,
            r: .8
        }, {
            x: 233.3,
            y: 224.5,
            r: .6
        }, {
            x: 550.5,
            y: 374.5,
            r: .1
        }, {
            x: 513.1,
            y: 353.7,
            r: .5
        }, {
            x: 482.3,
            y: 345.2,
            r: 1
        }, {
            x: 442,
            y: 324.2,
            r: .9
        }, {
            x: 452.8,
            y: 268.6,
            r: .7
        }, {
            x: 500.5,
            y: 257.4,
            r: 1.6
        }, {
            x: 238.9,
            y: 79.7,
            r: 1.6
        }, {
            x: 293.2,
            y: 89.1,
            r: 2.4
        }, {
            x: 317.9,
            y: 105.7,
            r: 1.1
        }, {
            x: 327.7,
            y: 81.7,
            r: .2
        }, {
            x: 353.9,
            y: 87.5,
            r: 1.3
        }, {
            x: 321.7,
            y: 111.5,
            r: .7
        }, {
            x: 272.4,
            y: 127.3,
            r: 1.2
        }, {
            x: 253.2,
            y: 124.3,
            r: .2
        }, {
            x: 227.1,
            y: 116.1,
            r: 1.9
        }, {
            x: 490.9,
            y: 115.5,
            r: .5
        }, {
            x: 478.8,
            y: 158.7,
            r: .5
        }, {
            x: 483.2,
            y: 227.7,
            r: .3
        }, {
            x: 413.4,
            y: 243.6,
            r: 1
        }, {
            x: 410.3,
            y: 224.4,
            r: .2
        }, {
            x: 372.2,
            y: 189.9,
            r: .5
        }, {
            x: 179.7,
            y: 128.6,
            r: .3
        }, {
            x: 171,
            y: 229.2,
            r: 1.1
        }, {
            x: 134,
            y: 281.1,
            r: .9
        }, {
            x: 92.4,
            y: 303.8,
            r: .3
        }, {
            x: 58.5,
            y: 301.9,
            r: 1.2
        }, {
            x: 41.4,
            y: 299.2,
            r: .3
        }, {
            x: 1.3,
            y: 271.2,
            r: 1.3
        }, {
            x: 13.4,
            y: 241.8,
            r: .2
        }, {
            x: 13.6,
            y: 166.7,
            r: 1.7
        }, {
            x: 29.1,
            y: 206.4,
            r: .3
        }, {
            x: 21,
            y: 155.6,
            r: 1.8
        }, {
            x: 32.4,
            y: 143.3,
            r: 1.9
        }, {
            x: 437,
            y: 525.3,
            r: 2.6
        }, {
            x: 42.8,
            y: 109.2,
            r: .6
        }, {
            x: 140.6,
            y: 122,
            r: .7
        }, {
            x: 530.7,
            y: 352,
            r: .1
        }, {
            x: 535.3,
            y: 367.4,
            r: 2.3
        }, {
            x: 522.5,
            y: 400.3,
            r: .8
        }, {
            x: 476.9,
            y: 426.4,
            r: 1.4
        }, {
            x: 421.1,
            y: 435.3,
            r: 1.9
        }, {
            x: 419.9,
            y: 453.5,
            r: .2
        }, {
            x: 392.2,
            y: 461.5,
            r: .1
        }, {
            x: 357.1,
            y: 454.4,
            r: 2
        }, {
            x: 371.8,
            y: 428.4,
            r: 2.5
        }, {
            x: 406.7,
            y: 412.5,
            r: .3
        }, {
            x: 456.9,
            y: 435.8,
            r: .1
        }, {
            x: 494.5,
            y: 461.9,
            r: .3
        }, {
            x: 498.6,
            y: 429.3,
            r: .2
        }, {
            x: 473.2,
            y: 421.4,
            r: .3
        }, {
            x: 453.9,
            y: 377.5,
            r: 1.4
        }, {
            x: 428.1,
            y: 339.7,
            r: 0
        }, {
            x: 416.8,
            y: 326.9,
            r: 1.8
        }, {
            x: 439.3,
            y: 347.2,
            r: 1.4
        }, {
            x: 413.9,
            y: 389.9,
            r: 1.2
        }, {
            x: 385.8,
            y: 434.7,
            r: 1
        }, {
            x: 375.9,
            y: 462,
            r: 2
        }, {
            x: 315.1,
            y: 267.6,
            r: 2.2
        }, {
            x: 366.6,
            y: 269.9,
            r: .3
        }, {
            x: 389.3,
            y: 287,
            r: 1.9
        }, {
            x: 180,
            y: 329.6,
            r: 1
        }, {
            x: 231.2,
            y: 340.7,
            r: 1.5
        }, {
            x: 266.3,
            y: 340.8,
            r: .6
        }, {
            x: 305.1,
            y: 353.2,
            r: .3
        }, {
            x: 134.5,
            y: 182.3,
            r: .1
        }, {
            x: 137.1,
            y: 212.8,
            r: .5
        }, {
            x: 158.9,
            y: 228.1,
            r: .1
        }, {
            x: 163.3,
            y: 257.9,
            r: .5
        }, {
            x: 202.7,
            y: 289.5,
            r: .9
        }, {
            x: 253,
            y: 314.3,
            r: 2.7
        }, {
            x: 280.5,
            y: 340.9,
            r: 2.8
        }, {
            x: 277.4,
            y: 390.2,
            r: .7
        }, {
            x: 35.6,
            y: 328,
            r: 2.3
        }, {
            x: 120.6,
            y: 318.5,
            r: .7
        }, {
            x: 72.5,
            y: 326.5,
            r: .9
        }, {
            x: 26.2,
            y: 229.1,
            r: .8
        }, {
            x: 54.7,
            y: 201.4,
            r: .5
        }, {
            x: 73.5,
            y: 178.3,
            r: 2.4
        }, {
            x: 56.9,
            y: 155.5,
            r: 1.6
        }, {
            x: 59.8,
            y: 135,
            r: .8
        }, {
            x: 46.5,
            y: 104.1,
            r: .2
        }, {
            x: 121.9,
            y: 120.8,
            r: .6
        }, {
            x: 99.6,
            y: 91.1,
            r: .1
        }, {
            x: 141.4,
            y: 68.6,
            r: .3
        }, {
            x: 139.3,
            y: 104.1,
            r: 1
        }, {
            x: 380.5,
            y: 523.9,
            r: 1.5
        }, {
            x: 131.9,
            y: 180.2,
            r: .9
        }, {
            x: 375.5,
            y: 79.2,
            r: .5
        }, {
            x: 405,
            y: 66.7,
            r: .4
        }, {
            x: 429.2,
            y: 89.9,
            r: .8
        }, {
            x: 454.8,
            y: 118.9,
            r: .5
        }, {
            x: 438.5,
            y: 80.7,
            r: .3
        }, {
            x: 422.6,
            y: 68.7,
            r: .7
        }, {
            x: 404.7,
            y: 45.4,
            r: 1.4
        }, {
            x: 425.9,
            y: 47.9,
            r: 1
        }, {
            x: 418.3,
            y: 533.9,
            r: 1.2
        }, {
            x: 436.5,
            y: 119,
            r: .1
        }, {
            x: 418.8,
            y: 183.4,
            r: 2
        }, {
            x: 358.1,
            y: 193.7,
            r: .1
        }, {
            x: 368.2,
            y: 221.2,
            r: .9
        }, {
            x: 604.7,
            y: 194.2,
            r: 1.8
        }, {
            x: 386,
            y: 330.9,
            r: .8
        }, {
            x: 373.5,
            y: 345.4,
            r: .5
        }, {
            x: 356.9,
            y: 355.1,
            r: 1.4
        }, {
            x: 338.4,
            y: 393.8,
            r: 1.6
        }, {
            x: 283.4,
            y: 369.6,
            r: 2
        }, {
            x: 266.1,
            y: 321.4,
            r: 1.5
        }, {
            x: 295.1,
            y: 300.1,
            r: 1.9
        }, {
            x: 266,
            y: 320,
            r: .4
        }, {
            x: 202.2,
            y: 367.3,
            r: 2.2
        }, {
            x: 184.4,
            y: 392.4,
            r: .4
        }, {
            x: 132.1,
            y: 321,
            r: 1.2
        }, {
            x: 102.2,
            y: 275.9,
            r: 2.7
        }, {
            x: 165.7,
            y: 243.9,
            r: .2
        }, {
            x: 183.1,
            y: 255,
            r: .1
        }, {
            x: 219.9,
            y: 250.9,
            r: .4
        }, {
            x: 235.1,
            y: 261.2,
            r: 1.8
        }, {
            x: 279.1,
            y: 261.8,
            r: .4
        }, {
            x: 259.2,
            y: 283.1,
            r: 1.5
        }, {
            x: 241.2,
            y: 247.6,
            r: .2
        }, {
            x: 224.3,
            y: 192.9,
            r: 1.7
        }, {
            x: 261.7,
            y: 172.3,
            r: .2
        }, {
            x: 286.6,
            y: 177.8,
            r: .7
        }, {
            x: 344.3,
            y: 179.1,
            r: 1
        }, {
            x: 397.6,
            y: 186.2,
            r: .7
        }, {
            x: 432.5,
            y: 558.7,
            r: 1.2
        }, {
            x: 467.4,
            y: 202.2,
            r: .3
        }, {
            x: 495.6,
            y: 218,
            r: 2.8
        }, {
            x: 524.3,
            y: 241.1,
            r: .7
        }, {
            x: 546,
            y: 255.6,
            r: .2
        }, {
            x: 579,
            y: 252.8,
            r: 1.2
        }, {
            x: 618.5,
            y: 246.5,
            r: 1.9
        }, {
            x: 634.8,
            y: 292.8,
            r: .4
        }, {
            x: 596.3,
            y: 328.3,
            r: 0
        }, {
            x: 577.1,
            y: 350.2,
            r: .2
        }, {
            x: 590.2,
            y: 382.5,
            r: 2.5
        }, {
            x: 525,
            y: 418.9,
            r: .4
        }, {
            x: 529.6,
            y: 383.2,
            r: 2.4
        }, {
            x: 549.8,
            y: 328.5,
            r: .7
        }, {
            x: 539.9,
            y: 344.4,
            r: 1
        }, {
            x: 521.5,
            y: 309.9,
            r: 1.6
        }, {
            x: 548.7,
            y: 220.2,
            r: .9
        }, {
            x: 612,
            y: 208.5,
            r: 1.6
        }, {
            x: 621.8,
            y: 260.9,
            r: 0
        }, {
            x: 451.4,
            y: 424.5,
            r: .1
        }, {
            x: 447,
            y: 475.5,
            r: .9
        }, {
            x: 425.4,
            y: 524.5,
            r: .6
        }, {
            x: 453.8,
            y: 565.9,
            r: 2.2
        }, {
            x: 416.3,
            y: 543.3,
            r: 1
        }, {
            x: 411.7,
            y: 525,
            r: .2
        }, {
            x: 420.1,
            y: 500.5,
            r: 1
        }, {
            x: 397.6,
            y: 512.5,
            r: .5
        }, {
            x: 373.7,
            y: 492.1,
            r: 2.4
        }, {
            x: 404.7,
            y: 481.9,
            r: .8
        }, {
            x: 559.7,
            y: 430.1,
            r: .7
        }, {
            x: 540.2,
            y: 437.1,
            r: .6
        }, {
            x: 485.5,
            y: 424.5,
            r: .3
        }, {
            x: 444.7,
            y: 413.5,
            r: 2.1
        }, {
            x: 420.5,
            y: 399.9,
            r: .6
        }, {
            x: 388.9,
            y: 381.8,
            r: 1.6
        }, {
            x: 388.7,
            y: 383.9,
            r: .8
        }, {
            x: 381.7,
            y: 404,
            r: 1.2
        }, {
            x: 292.9,
            y: 374.2,
            r: .2
        }, {
            x: 330.6,
            y: 338.4,
            r: .7
        }, {
            x: 371,
            y: 305.1,
            r: 1.1
        }, {
            x: 195.8,
            y: 76.4,
            r: .3
        }, {
            x: 203.7,
            y: 59.2,
            r: 1.5
        }, {
            x: 234.1,
            y: 17.6,
            r: 1.6
        }, {
            x: 272.9,
            y: 30.5,
            r: .1
        }, {
            x: 444.8,
            y: 299,
            r: 2.3
        }, {
            x: 446.2,
            y: 335.3,
            r: .8
        }, {
            x: 442.6,
            y: 376.7,
            r: 1.3
        }, {
            x: 446,
            y: 424.3,
            r: .4
        }, {
            x: 426.9,
            y: 554.3,
            r: 1.9
        }, {
            x: 306.3,
            y: 94.8,
            r: .5
        }, {
            x: 273.7,
            y: 70,
            r: 1.5
        }, {
            x: 253.9,
            y: 57.1,
            r: .8
        }, {
            x: 302.6,
            y: 7.8,
            r: .4
        }, {
            x: 325.6,
            y: 43.4,
            r: .3
        }, {
            x: 329.6,
            y: 127.6,
            r: .8
        }, {
            x: 442.9,
            y: 450.4,
            r: .5
        }, {
            x: 389.9,
            y: 420.2,
            r: .7
        }, {
            x: 400.8,
            y: 391.8,
            r: 1.6
        }, {
            x: 398.3,
            y: 531.5,
            r: 1.4
        }, {
            x: 360.3,
            y: 339.1,
            r: .9
        }, {
            x: 353.3,
            y: 323.4,
            r: .3
        }, {
            x: 431.5,
            y: 447.8,
            r: .7
        }, {
            x: 418.3,
            y: 470.7,
            r: 1.2
        }, {
            x: 398.5,
            y: 470.7,
            r: 2.8
        }, {
            x: 517.7,
            y: 203,
            r: 1.8
        }, {
            x: 541.7,
            y: 141.9,
            r: 1.1
        }, {
            x: 540.1,
            y: 171.9,
            r: .2
        }, {
            x: 509.5,
            y: 154.6,
            r: .3
        }, {
            x: 464.6,
            y: 512.5,
            r: .3
        }, {
            x: 463,
            y: 115.6,
            r: 2.2
        }, {
            x: 483.2,
            y: 85.6,
            r: 2.6
        }, {
            x: 469,
            y: 61.7,
            r: .7
        }, {
            x: 544,
            y: 92,
            r: 1.1
        }, {
            x: 545.4,
            y: 109.5,
            r: 2.2
        }, {
            x: 550,
            y: 144.4,
            r: .1
        }, {
            x: 561.8,
            y: 161.3,
            r: 1.8
        }, {
            x: 405.5,
            y: 56.6,
            r: .3
        }, {
            x: 407,
            y: 88.1,
            r: 1.1
        }, {
            x: 389.4,
            y: 99.7,
            r: 2.3
        }, {
            x: 348.5,
            y: 72.8,
            r: .7
        }, {
            x: 339.2,
            y: 29,
            r: 2.3
        }, {
            x: 403.1,
            y: 18.3,
            r: .2
        }, {
            x: 414.5,
            y: 30,
            r: 1.1
        }, {
            x: 432.1,
            y: 61.2,
            r: .1
        }, {
            x: 451.8,
            y: 34.4,
            r: .3
        }, {
            x: 421.2,
            y: 79.5,
            r: 2.5
        }, {
            x: 449.2,
            y: 44.6,
            r: .2
        }, {
            x: 500.4,
            y: 49,
            r: 2
        }, {
            x: 377.5,
            y: 25.9,
            r: .2
        }, {
            x: 348.2,
            y: 71.4,
            r: .3
        }, {
            x: 213.3,
            y: 118.9,
            r: .5
        }, {
            x: 192.6,
            y: 111.1,
            r: .9
        }, {
            x: 167.9,
            y: 121,
            r: 2
        }, {
            x: 142.8,
            y: 140.4,
            r: 1.1
        }, {
            x: 443.3,
            y: 274.8,
            r: .5
        }, {
            x: 428.1,
            y: 275.9,
            r: 1.6
        }, {
            x: 414.9,
            y: 273.8,
            r: 1.6
        }, {
            x: 395.4,
            y: 298.8,
            r: .7
        }, {
            x: 401.2,
            y: 314.5,
            r: .6
        }, {
            x: 176.1,
            y: 93.2,
            r: 1.2
        }, {
            x: 149.1,
            y: 89.3,
            r: .5
        }, {
            x: 122,
            y: 92.7,
            r: .7
        }, {
            x: 270.2,
            y: 194.9,
            r: .3
        }, {
            x: 297.3,
            y: 202.5,
            r: .5
        }, {
            x: 310.2,
            y: 274.4,
            r: 1.4
        }, {
            x: 307.1,
            y: 63.9,
            r: .5
        }, {
            x: 339.2,
            y: 430.6,
            r: 1.2
        }, {
            x: 327.8,
            y: 95.9,
            r: .8
        }, {
            x: 334.3,
            y: 130.3,
            r: 1.2
        }, {
            x: 320.9,
            y: 165.7,
            r: .7
        }, {
            x: 327.9,
            y: 127.4,
            r: .2
        }, {
            x: 225.7,
            y: 149.7,
            r: .5
        }, {
            x: 265.1,
            y: 177.4,
            r: 1
        }, {
            x: 309.8,
            y: 168.4,
            r: 1
        }, {
            x: 197.4,
            y: 104.1,
            r: 1.8
        }, {
            x: 214.9,
            y: 92.9,
            r: .8
        }, {
            x: 251.2,
            y: 98.6,
            r: .7
        }, {
            x: 270.7,
            y: 155.2,
            r: 2.2
        }, {
            x: 272.7,
            y: 190,
            r: .3
        }, {
            x: 446.2,
            y: 559.9,
            r: 1.5
        }, {
            x: 360.2,
            y: 356.2,
            r: 1
        }, {
            x: 315.5,
            y: 378.2,
            r: .4
        }, {
            x: 295.1,
            y: 382.4,
            r: .9
        }, {
            x: 243,
            y: 351.8,
            r: .9
        }, {
            x: 268.1,
            y: 283.4,
            r: .9
        }, {
            x: 290.4,
            y: 254.7,
            r: .6
        }, {
            x: 304.5,
            y: 242.3,
            r: .1
        }, {
            x: 364.8,
            y: 235.8,
            r: 1.8
        }, {
            x: 395.5,
            y: 224.9,
            r: .7
        }, {
            x: 489.4,
            y: 247.7,
            r: .4
        }, {
            x: 471.8,
            y: 215.4,
            r: .9
        }, {
            x: 455.1,
            y: 198.4,
            r: 1.2
        }, {
            x: 451.4,
            y: 177.8,
            r: .9
        }, {
            x: 418.3,
            y: 191.8,
            r: 1.5
        }, {
            x: 419.2,
            y: 202.4,
            r: .1
        }, {
            x: 410.6,
            y: 256.4,
            r: 1.1
        }, {
            x: 108.7,
            y: 276,
            r: .1
        }, {
            x: 137.3,
            y: 289.3,
            r: .4
        }, {
            x: 99.5,
            y: 332,
            r: 1.7
        }, {
            x: 107,
            y: 297.3,
            r: 1.1
        }, {
            x: 77.3,
            y: 303.3,
            r: 1.3
        }, {
            x: 31.2,
            y: 256.8,
            r: 1.2
        }, {
            x: 42.7,
            y: 201.4,
            r: .3
        }, {
            x: 68,
            y: 153.2,
            r: 2
        }, {
            x: 140.1,
            y: 164.9,
            r: .8
        }, {
            x: 169.6,
            y: 167.2,
            r: 1.4
        }, {
            x: 205.9,
            y: 174.4,
            r: .7
        }, {
            x: 239.4,
            y: 222.4,
            r: 1
        }, {
            x: 242.5,
            y: 299.7,
            r: .5
        }, {
            x: 226.8,
            y: 335.2,
            r: .6
        }, {
            x: 173.8,
            y: 343.7,
            r: .9
        }, {
            x: 105.1,
            y: 299.7,
            r: 1.1
        }, {
            x: 105.2,
            y: 262.6,
            r: 1.9
        }, {
            x: 156.5,
            y: 126.8,
            r: .4
        }, {
            x: 412.4,
            y: 448.5,
            r: .8
        }, {
            x: 185.7,
            y: 192.5,
            r: .2
        }, {
            x: 226.3,
            y: 211.3,
            r: 1.7
        }, {
            x: 237.1,
            y: 249.9,
            r: .6
        }, {
            x: 255.5,
            y: 253.3,
            r: 1.1
        }, {
            x: 479.8,
            y: 218.5,
            r: .6
        }, {
            x: 497.2,
            y: 243.3,
            r: .8
        }, {
            x: 501.7,
            y: 274.5,
            r: .9
        }, {
            x: 515.1,
            y: 305.6,
            r: .1
        }, {
            x: 530.3,
            y: 316.6,
            r: 1
        }, {
            x: 580.1,
            y: 314.7,
            r: 1.5
        }, {
            x: 602,
            y: 312.4,
            r: 1.2
        }, {
            x: 559.1,
            y: 343.4,
            r: 1.1
        }, {
            x: 572.2,
            y: 283.3,
            r: .2
        }, {
            x: 546.2,
            y: 290.2,
            r: .1
        }, {
            x: 548.8,
            y: 333.8,
            r: .6
        }, {
            x: 537.2,
            y: 334.9,
            r: .5
        }, {
            x: 511,
            y: 349.1,
            r: 1.1
        }, {
            x: 520.8,
            y: 317.9,
            r: .6
        }, {
            x: 516.9,
            y: 291.7,
            r: 1.6
        }, {
            x: 507.5,
            y: 261.2,
            r: .4
        }, {
            x: 508.8,
            y: 245.2,
            r: .5
        }, {
            x: 507.1,
            y: 206.6,
            r: 1.1
        }, {
            x: 374.2,
            y: 512.5,
            r: 1.5
        }, {
            x: 447.5,
            y: 129.9,
            r: 1.6
        }, {
            x: 500.3,
            y: 154.2,
            r: .7
        }, {
            x: 515.6,
            y: 171.4,
            r: .1
        }, {
            x: 516.7,
            y: 202.6,
            r: .9
        }, {
            x: 527.5,
            y: 216.7,
            r: .9
        }, {
            x: 442.8,
            y: 111.3,
            r: 1.2
        }, {
            x: 471.7,
            y: 121.7,
            r: .5
        }, {
            x: 468.5,
            y: 145.5,
            r: .2
        }, {
            x: 429.2,
            y: 540.1,
            r: .4
        }, {
            x: 514.4,
            y: 168,
            r: .3
        }, {
            x: 549.4,
            y: 202.5,
            r: 2
        }, {
            x: 393.5,
            y: 224.9,
            r: 1.6
        }, {
            x: 342.7,
            y: 311.9,
            r: .3
        }, {
            x: 306.4,
            y: 194.1,
            r: .8
        }, {
            x: 327.7,
            y: 200.6,
            r: 1.2
        }, {
            x: 353,
            y: 233.4,
            r: .6
        }, {
            x: 238.2,
            y: 67.3,
            r: .2
        }, {
            x: 214.8,
            y: 58.5,
            r: .1
        }, {
            x: 221.6,
            y: 79.5,
            r: .8
        }, {
            x: 206,
            y: 115.4,
            r: .2
        }, {
            x: 214.2,
            y: 148.6,
            r: 1.7
        }, {
            x: 187.6,
            y: 175.9,
            r: .3
        }, {
            x: 171.7,
            y: 175.1,
            r: .3
        }, {
            x: 134.9,
            y: 188.5,
            r: 1.3
        }, {
            x: 105.2,
            y: 204.4,
            r: .3
        }, {
            x: 38.2,
            y: 196.4,
            r: .2
        }, {
            x: 27.4,
            y: 179.5,
            r: .6
        }, {
            x: 27.2,
            y: 264.3,
            r: 1.4
        }, {
            x: 4.2,
            y: 205.3,
            r: 1.1
        }, {
            x: 24.1,
            y: 170.5,
            r: .2
        }, {
            x: 70.1,
            y: 92,
            r: 1.8
        }, {
            x: 71.3,
            y: 125,
            r: 1.5
        }, {
            x: 117.1,
            y: 71,
            r: 1.3
        }, {
            x: 156,
            y: 79.2,
            r: .4
        }, {
            x: 172.4,
            y: 80.9,
            r: 1.1
        }, {
            x: 185.4,
            y: 82,
            r: .3
        }, {
            x: 185.6,
            y: 50.3,
            r: .1
        }, {
            x: 208.6,
            y: 50.5,
            r: .9
        }, {
            x: 260.6,
            y: 33.1,
            r: 2.4
        }, {
            x: 267,
            y: 7.8,
            r: 1.1
        }, {
            x: 348.2,
            y: 26.5,
            r: .1
        }, {
            x: 371.1,
            y: 42.1,
            r: 1.4
        }, {
            x: 433.8,
            y: 27.3,
            r: 1.3
        }, {
            x: 425.4,
            y: 47.9,
            r: 1.2
        }, {
            x: 469.3,
            y: 52.5,
            r: .5
        }, {
            x: 506.2,
            y: 82.8,
            r: 1.6
        }, {
            x: 543.5,
            y: 100.7,
            r: 1.4
        }, {
            x: 548.6,
            y: 121.8,
            r: .3
        }, {
            x: 571.2,
            y: 266.6,
            r: 1.1
        }, {
            x: 491.3,
            y: 436,
            r: 1.7
        }, {
            x: 514.8,
            y: 385.2,
            r: .7
        }, {
            x: 329.5,
            y: 349.7,
            r: 1.3
        }, {
            x: 377.1,
            y: 359.2,
            r: .1
        }, {
            x: 166.1,
            y: 384.7,
            r: 1.6
        }, {
            x: 423.3,
            y: 568.9,
            r: 1.9
        }, {
            x: 449.3,
            y: 397,
            r: 2
        }, {
            x: 141.4,
            y: 165.1,
            r: 1.3
        }, {
            x: 167.7,
            y: 199.2,
            r: 1.1
        }, {
            x: 196.1,
            y: 193.2,
            r: 1.1
        }, {
            x: 196.8,
            y: 252,
            r: .1
        }, {
            x: 433,
            y: 507.4,
            r: 1.2
        }, {
            x: 176.8,
            y: 309.5,
            r: 1.4
        }, {
            x: 225.2,
            y: 328.5,
            r: .2
        }, {
            x: 264.4,
            y: 359.4,
            r: .2
        }]
    }
}, function(r, t, o) {
    var e = o(1),
        n = o(6),
        l = o(8),
        i = o(3);
    r.exports = function() {
        function r(r, n, l) {
            if (!r) throw "Input parameter el missing !!!";
            this.el = r, this.navEl = n, this.scrollBtnEl = l, this.totalSlides = r.children.length, this.swipeThreshold = 50, this.swipeHandler = new e({
                el: this.el,
                onSwiping: o.bind(this),
                onSwipeEnd: x.bind(this)
            }), t.call(this)
        }

        function t() {
            var r = this;
            i.each(this.el.children, function(r, t) {
                r.setAttribute("data-slide-index", t)
            }), i.each(this.navEl.children, function(r, t) {
                r.setAttribute("data-slide-index", t)
            }), y.call(this, 0);
            var t;
            l.select(document.body).on("wheel", function() {
                clearTimeout(t);
                var o = l.event;
                t = setTimeout(function() {
                    clearTimeout(t), Math.abs(o.deltaX) > Math.abs(o.deltaY) || (o.deltaY > 0 ? y.call(r, r.currentSlideIndex + 1) : y.call(r, r.currentSlideIndex - 1))
                }, 100)
            }), l.select(this.navEl).selectAll("[data-slide-index]").on("mousedown touchstart", function() {
                var t = l.select(this).attr("data-slide-index"),
                    o = l.select(r.el).selectAll('[data-slide-index="' + t + '"]');
                t != r.currentSlideIndex && (t > r.currentSlideIndex ? o.classed("prev-slide", !1).classed("next-slide", !0) : o.classed("prev-slide", !0).classed("next-slide", !1))
            }).on("click touchend", function() {
                var t = parseInt(l.select(this).attr("data-slide-index"));
                l.select(r.el).selectAll('[data-slide-index="' + t + '"]');
                y.call(r, t)
            }), l.select(this.scrollBtnEl).on("click touchend", function() {
                l.event && l.event.preventDefault(), y.call(r, r.currentSlideIndex + 1)
            }), l.select(document).on("keyup", function() {
                var t = l.event.keyCode;
                38 != t && 40 != t || (38 == t ? y.call(r, r.currentSlideIndex - 1) : y.call(r, r.currentSlideIndex + 1))
            }), this.updateNavigator()
        }

        function o(r, t) {
            l.select(this.el).selectAll('[data-slide-index="' + (this.currentSlideIndex + 1) + '"]').classed("next-slide", !0).classed("prev-slide", !1), l.select(this.el).selectAll('[data-slide-index="' + (this.currentSlideIndex - 1) + '"]').classed("prev-slide", !0).classed("next-slide", !1)
        }


        function x(r, t) {
            if (!(r < this.swipeThreshold || t === n.TOP && this.currentSlideIndex === this.totalSlides - 1 || t === n.BOTTOM && 0 === this.currentSlideIndex || t != n.TOP && t != n.BOTTOM)) {
                t === n.TOP ? y.call(this, this.currentSlideIndex + 1) : y.call(this, this.currentSlideIndex - 1)
            }
        }
        return i.extend(r.prototype, {
            updateNavigator: function() {
                l.select(this.navEl).selectAll(".selected").classed("selected", !1), l.select(this.navEl).selectAll('[data-slide-index="' + this.currentSlideIndex + '"]').classed("selected", !0), l.select(this.scrollBtnEl).classed("hide", this.currentSlideIndex == this.totalSlides - 1)
            }
        }), r
    }()
}, function(r, t) {}]);